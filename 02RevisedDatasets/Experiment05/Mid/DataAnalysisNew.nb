(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    949169,      17380]
NotebookOptionsPosition[    945619,      17255]
NotebookOutlinePosition[    945975,      17271]
CellTagsIndexPosition[    945932,      17268]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CRISPR : Experiment 3", "Title",
 CellChangeTimes->{{3.683038311661592*^9, 3.683038317358281*^9}, {
  3.683403493299837*^9, 3.6834034934676113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"[", 
   RowBox[{"\[Rho]", ",", "\[CapitalNu]"}], "]"}], " ", "to", " ", 
  FormBox[
   SubscriptBox["P", 
    RowBox[{"(", "extermination", ")"}]],
   TraditionalForm]}]], "Chapter",
 CellChangeTimes->{{3.6830392063265753`*^9, 3.683039216512897*^9}}],

Cell[CellGroupData[{

Cell["Parameters and Functions Definition", "Section",
 CellChangeTimes->{{3.683038320841608*^9, 3.683038328040061*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"namingScalingFactor", "=", "1000000000000"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateRepetitionQuartiles", "[", "individualRepetition_", "]"}],
   ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"Quartiles", ",", 
    RowBox[{"Transpose", "/@", 
     RowBox[{"Transpose", "[", "individualRepetition", "]"}]}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotQuartilesTiming", "[", 
   RowBox[{"quartilesData_", ",", "title_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dynamics", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dynamics", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"quartilesData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"quartilesData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
            RowBox[{"quartilesData", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Thickness", "[", ".0075", "]"}], ",", 
               RowBox[{"colors", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Filling", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"{", "2", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"quartilesData", "//", "Length"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"dynamics", ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Time\>\"", ",", "\"\<PopulationSize\>\""}], "}"}]}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1000000", ",", "100"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1000000", ",", "1000"}], "]"}]}], "}"}], "*)"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Gray", ",", "Thick"}], "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", "Thin"}], "]"}]}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"\"\<[\[Rho]: \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"EngineeringForm", "[", 
            RowBox[{
             RowBox[{"title", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "/", "namingScalingFactor"}], 
            "]"}], "]"}], "<>", "\"\<, N: \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"title", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "/", "namingScalingFactor"}], 
           "]"}], "<>", "\"\<]\>\""}], ")"}]}], "*)"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorsStrings", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Cyan\>\"", ",", "\"\<Blue\>\"", ",", "\"\<Green\>\"", ",", 
     "\"\<Purple\>\"", ",", "\"\<Yellow\>\"", ",", "\"\<Orange\>\"", ",", 
     "\"\<Red\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lightColorStrings", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"\"\<Light\>\"", ",", "#"}], "]"}], "&"}], "/@", 
    "colorsStrings"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ToExpression", "/@", "colorsStrings"}], ",", 
     RowBox[{"ToExpression", "/@", "lightColorStrings"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{
    RowBox[{"ColorData", "[", 
     RowBox[{"1", ",", "\"\<ColorList\>\""}], "]"}], "//", "RotateRight"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "frame", ",", "frameTicksStyle", ",", "baseStyle", ",", "frameStyle", ",",
      "imageSize", ",", "aspectRatio", ",", "gridLinesStyle", ",", 
     "thicknessLow", ",", "thicknessHigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"True", ",", "15", ",", "30", ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Gray", ",", "Thick"}], "]"}], ",", "500", ",", "1", ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Gray", ",", "Thin", ",", "Dashed"}], "]"}], ",", ".001", ",", 
     ".0075"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.683039179560898*^9, 3.683039185095923*^9}, {
   3.683040773165831*^9, 3.6830407746423397`*^9}, {3.683040812367496*^9, 
   3.683040812514564*^9}, {3.6830408561391697`*^9, 3.683040870824338*^9}, {
   3.683300121343845*^9, 3.683300175165585*^9}, {3.683300246203974*^9, 
   3.68330025177112*^9}, 3.6833002996106663`*^9, {3.694777165058494*^9, 
   3.694777165084605*^9}, {3.694993585631958*^9, 3.694993588309594*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Load Data", "Section",
 CellChangeTimes->{{3.682636129146783*^9, 3.682636132243185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "LoadFolder", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"csvNames", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<*.csv\>\"", ",", "\"\<./Data/\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "GetSortedCoordinates", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"csvCoords", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"\"\</\>\"", ",", "\"\<_\>\""}], "}"}]}], "]"}], "&"}], 
          "/@", "csvNames"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"3", ";;", "6"}]}], "]"}], "]"}], ",", "Infinity"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ordering", "=", 
     RowBox[{"Ordering", "[", "csvCoords", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"csvCoords", "=", 
     RowBox[{"csvCoords", "[", 
      RowBox[{"[", "ordering", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "GetSortedIdentifiers", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"csvIdentifiers", "=", 
     RowBox[{"(", 
      RowBox[{"csvCoords", "//", "DeleteDuplicates"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "GetSortedData", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"csvData", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", "#", "]"}], "&"}], ",", "csvNames"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"csvData", "=", 
     RowBox[{"csvData", "[", 
      RowBox[{"[", "ordering", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "GetSortedRepetitions", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"repetitionsIndexes", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"csvCoords", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
      "csvIdentifiers"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"repetitionsData", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"csvData", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "repetitionsIndexes"}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Statistics", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"csvNames", "//", "Length"}], ",", 
     RowBox[{"csvIdentifiers", "//", "Length"}]}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rhoResolution", "=", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"csvCoords", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "//", "Length"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popResolution", "=", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"csvCoords", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}], "//", "Length"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rhoDensityPlot", "=", 
     RowBox[{"NumberLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"csvIdentifiers", "/", "namingScalingFactor"}], "//", "N"}],
          ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popDensityPlot", "=", 
     RowBox[{"NumberLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"csvIdentifiers", "/", "namingScalingFactor"}], "//", "N"}],
          ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"densities", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Rho]:\>\"", ",", "rhoDensityPlot"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[CapitalNu]:\>\"", ",", "popDensityPlot"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.682689009039089*^9, 3.682689145355188*^9}, {
   3.682689248395544*^9, 3.682689254111494*^9}, {3.682692020744273*^9, 
   3.682692020903059*^9}, {3.682701853266121*^9, 3.682701855170959*^9}, {
   3.682701928156931*^9, 3.6827019448203993`*^9}, {3.682702019915059*^9, 
   3.682702020061849*^9}, {3.682705172480178*^9, 3.682705203155162*^9}, {
   3.6827120600229473`*^9, 3.682712116904788*^9}, {3.682712726183926*^9, 
   3.682712726427916*^9}, 3.682718876753233*^9, {3.6827674888818207`*^9, 
   3.6827674968849697`*^9}, {3.6827763553072166`*^9, 3.68277638077075*^9}, {
   3.682777458722721*^9, 3.682777462235525*^9}, {3.682868100673558*^9, 
   3.68286811261794*^9}, {3.682884117629384*^9, 3.682884124591628*^9}, {
   3.682945916841754*^9, 3.6829459171433268`*^9}, 3.6829501285586357`*^9, {
   3.682961876030137*^9, 3.682961877934376*^9}, {3.683402544699851*^9, 
   3.68340254505309*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"18600", ",", "186"}], "}"}]], "Output",
 CellChangeTimes->{3.6834039373161507`*^9, 3.683404123848489*^9, 
  3.686494393484036*^9, 3.6864946246020927`*^9, 3.694164237659792*^9, 
  3.694229873050434*^9, 3.6944326608366632`*^9, 3.694693749830801*^9, 
  3.69477734649078*^9, 3.694778405594977*^9, 3.694993136799321*^9, 
  3.6949937544224863`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[Rho]:\"\>", 
     GraphicsBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.37382*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.37382*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.37382*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.37382*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.37382*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.37382*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.88739*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.88739*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.88739*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.88739*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.88739*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.88739*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.59294*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.59294*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.59294*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.59294*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.59294*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.59294*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.56224*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.56224*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.56224*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.56224*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.56224*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.56224*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.8939*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.8939*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.8939*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.8939*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.8939*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.8939*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.72335*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.72335*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.72335*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.72335*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.72335*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.72335*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{9.2367*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{9.2367*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{9.2367*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{9.2367*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{9.2367*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{9.2367*^-7, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.268961*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.268961*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.268961*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.268961*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.268961*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.268961*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.743328*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.743328*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.743328*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.743328*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.743328*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1.743328*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.395026*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.395026*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.395026*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.395026*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.395026*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{2.395026*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.290344*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.290344*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.290344*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.290344*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.290344*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{3.290344*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.520353*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.520353*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.520353*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.520353*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.520353*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{4.520353*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.210169*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.210169*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.210169*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.210169*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.210169*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{6.210169*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{8.531678*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{8.531678*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{8.531678*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{8.531678*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{8.531678*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{8.531678*^-6, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000011721022, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000011721022, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000011721022, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000011721022, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000011721022, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000011721022, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00001610262, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00001610262, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00001610262, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00001610262, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00001610262, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00001610262, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000022122162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000022122162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000022122162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000022122162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000022122162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000022122162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000030391953, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000030391953, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000030391953, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000030391953, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000030391953, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000030391953, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000041753189, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000041753189, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000041753189, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000041753189, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000041753189, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000041753189, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000057361525, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000057361525, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000057361525, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000057361525, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000057361525, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000057361525, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000078804628, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000078804628, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000078804628, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000078804628, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000078804628, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000078804628, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000108263673, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000108263673, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000108263673, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000108263673, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000108263673, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000108263673, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00014873521, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00014873521, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00014873521, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00014873521, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00014873521, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00014873521, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000204335971, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000204335971, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000204335971, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000204335971, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000204335971, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000204335971, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00028072162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00028072162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00028072162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00028072162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00028072162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00028072162, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000385662042, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000385662042, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000385662042, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000385662042, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000385662042, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000385662042, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00052983169, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00052983169, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00052983169, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00052983169, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00052983169, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.00052983169, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000727895384, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000727895384, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000727895384, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000727895384, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000727895384, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.000727895384, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.001, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.001, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.001, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.001, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.001, 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{0.001, 1}]}},
      AspectRatio->NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948],
      Axes->{True, False},
      AxesLabel->{None},
      AxesOrigin->{Automatic, Automatic},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      ImagePadding->All,
      ImageSize->800,
      PlotRange->{{0., 0.001}, {0, 1}},
      PlotRangePadding->{{
         Scaled[0.1], 
         Scaled[0.1]}, {0, 1}},
      Ticks->{Automatic, Automatic}]},
    {"\<\"\[CapitalNu]:\"\>", 
     GraphicsBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{1000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{5000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{10000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{25000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{50000., 1}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
        AbsoluteThickness[1.6], PointBox[{100000., 1}]}},
      AspectRatio->NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948],
      Axes->{True, False},
      AxesLabel->{None},
      AxesOrigin->{Automatic, Automatic},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      ImagePadding->All,
      ImageSize->800,
      PlotRange->{{1000., 100000.}, {0, 1}},
      PlotRangePadding->{{
         Scaled[0.1], 
         Scaled[0.1]}, {0, 1}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6834039373161507`*^9, 3.683404123848489*^9, 
  3.686494393484036*^9, 3.6864946246020927`*^9, 3.694164237659792*^9, 
  3.694229873050434*^9, 3.6944326608366632`*^9, 3.694693749830801*^9, 
  3.69477734649078*^9, 3.694778405594977*^9, 3.694993136799321*^9, 
  3.694993754995722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<sampledDensitiesGrid.eps\>\"", ",", "densities"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683402550541472*^9, 3.6834025510524817`*^9}}],

Cell[BoxData["\<\"sampledDensitiesGrid.eps\"\>"], "Output",
 CellChangeTimes->{3.683402552229476*^9, 3.6834041252075243`*^9, 
  3.686494394390902*^9, 3.686494626367951*^9, 3.694229874789269*^9, 
  3.694432662412694*^9, 3.694693752103307*^9, 3.694777348155072*^9, 
  3.69477840702215*^9, 3.694993140974474*^9, 3.6949937562024097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"popSizes", "=", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"csvCoords", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}], "/", 
   "namingScalingFactor"}]}], "\[IndentingNewLine]", 
 RowBox[{"Directory", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.682952883495207*^9, 3.682952888836008*^9}, {
  3.682962124956153*^9, 3.682962128020638*^9}, {3.68329313969637*^9, 
  3.683293141719936*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "5000", ",", "10000", ",", "25000", ",", "50000", ",", 
   "100000"}], "}"}]], "Output",
 CellChangeTimes->{3.6833097701013002`*^9, 3.6833196213873453`*^9, 
  3.683399714356818*^9, 3.6834041253557568`*^9, 3.68649439453404*^9, 
  3.6864946267717*^9, 3.694164295274106*^9, 3.694229874920844*^9, 
  3.69443266249228*^9, 3.694693752471735*^9, 3.694777348369718*^9, 
  3.69477840720909*^9, 3.694993141142343*^9, 3.6949937566021338`*^9}],

Cell[BoxData["\<\"/Users/chipdelmal/Dropbox/Final02/Experiment05/Mid\"\>"], \
"Output",
 CellChangeTimes->{3.6833097701013002`*^9, 3.6833196213873453`*^9, 
  3.683399714356818*^9, 3.6834041253557568`*^9, 3.68649439453404*^9, 
  3.6864946267717*^9, 3.694164295274106*^9, 3.694229874920844*^9, 
  3.69443266249228*^9, 3.694693752471735*^9, 3.694777348369718*^9, 
  3.69477840720909*^9, 3.694993141142343*^9, 3.694993756633246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "/@", 
  "repetitionsIndexes"}], "\[IndentingNewLine]", "rhoResolution"}], "Input",
 CellChangeTimes->{{3.686494701901677*^9, 3.686494715477166*^9}, {
  3.68649475584956*^9, 3.68649476861974*^9}, {3.686500531743609*^9, 
  3.686500534404913*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6864947075118303`*^9, 3.686494715923662*^9}, {
   3.686494760607473*^9, 3.686494769258419*^9}, 3.686500535046216*^9, 
   3.694164296757207*^9, 3.694229875062396*^9, 3.6944326625903177`*^9, 
   3.694693752910798*^9, 3.694777348608074*^9, 3.69477840760353*^9, 
   3.694993141414509*^9, 3.6949937569240103`*^9}],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{{3.6864947075118303`*^9, 3.686494715923662*^9}, {
   3.686494760607473*^9, 3.686494769258419*^9}, 3.686500535046216*^9, 
   3.694164296757207*^9, 3.694229875062396*^9, 3.6944326625903177`*^9, 
   3.694693752910798*^9, 3.694777348608074*^9, 3.69477840760353*^9, 
   3.694993141414509*^9, 3.694993756952077*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elimination Probabilities", "Section",
 CellChangeTimes->{{3.682687587201295*^9, 3.682687593682798*^9}}],

Cell[CellGroupData[{

Cell["Probabilities Calculation", "Subsection",
 CellChangeTimes->{{3.6830384268915033`*^9, 3.6830384340123863`*^9}, 
   3.6830404929536552`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"indexOfInterest", "=", "7"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "--"}]}]}]}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eliminationBoolRepetitions", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"initPops", "=", 
        RowBox[{"First", "/@", 
         RowBox[{
          RowBox[{"repetitionsData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "indexOfInterest"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lastPops", "=", 
        RowBox[{"Last", "/@", 
         RowBox[{
          RowBox[{"repetitionsData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "indexOfInterest"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eliminationBool", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], "/@", 
          RowBox[{"(", "lastPops", ")"}]}], "//", "N"}]}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"repetitionsData", "//", "Length"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "--"}]}]}]}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meanEliminationProbabilities", "=", 
    RowBox[{"Mean", "/@", "eliminationBoolRepetitions"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "--"}]}]}]}]}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataTuples", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"csvIdentifiers", ",", "meanEliminationProbabilities"}], "}"}], "//",
     "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataPointsFlat", "=", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/", "namingScalingFactor"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
       "dataTuples"}], "//", "N"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6826853362044687`*^9, 3.682685382475686*^9}, {
   3.682685470671269*^9, 3.682685631738549*^9}, {3.6826856679259663`*^9, 
   3.6826857152869463`*^9}, {3.682685783839992*^9, 3.682685861857419*^9}, {
   3.682685942552355*^9, 3.682686003984765*^9}, {3.682686034355399*^9, 
   3.682686135878375*^9}, {3.682686173208596*^9, 3.6826861914738827`*^9}, {
   3.682686296366289*^9, 3.68268631960555*^9}, {3.682686386194628*^9, 
   3.682686395686499*^9}, {3.682693197236061*^9, 3.682693211613826*^9}, {
   3.682702346191739*^9, 3.682702351843854*^9}, {3.682709258872555*^9, 
   3.682709261437222*^9}, {3.682714796361017*^9, 3.682714797738649*^9}, 
   3.682781392016479*^9, {3.6830384805618258`*^9, 3.683038480713945*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Raw Data Curves", "Subsection",
 CellChangeTimes->{{3.682687615041267*^9, 3.682687624009967*^9}, {
  3.6826916162315187`*^9, 3.682691617877986*^9}, {3.682705957200507*^9, 
  3.682705958095951*^9}, {3.682773858068137*^9, 3.682773858562711*^9}, {
  3.6830404831935453`*^9, 3.6830404882952137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Getting", " ", "Dataset"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"indVectors", "=", 
     RowBox[{
      RowBox[{"dataTuples", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1", ",", "4"}], "]"}], "]"}], "//", 
      "DeleteDuplicates"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dataset", "=", 
        RowBox[{"Cases", "[", 
         RowBox[{"dataTuples", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"rho_", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{".99", "*", "namingScalingFactor"}], "]"}], ",", "0", 
               ",", 
               RowBox[{"indVectors", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", "out_"}], "}"}],
            "\[Rule]", 
           RowBox[{"N", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"rho", "/", "namingScalingFactor"}], ",", "out"}], 
             "}"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"indVectors", "//", "Length"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Lin", " ", "and", " ", "Log", " ", "data", " ", "plots"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"crashProbLinLinData", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"data", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"indVectors", "/", "namingScalingFactor"}], ")"}]}]}], 
        "*)"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", ".005", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "frame"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", "frameTicksStyle"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<NHEJ\>\"", ",", 
          "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(P\), \
\((extermination)\)]\)\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", "frameStyle"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"GridLinesStyle", "\[Rule]", "gridLinesStyle"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"ImageSize", "\[Rule]", "imageSize"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", "aspectRatio"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"crashProbLogLinData", "=", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"data", "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"indVectors", "/", "namingScalingFactor"}], ")"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", ".005", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", "frame"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", "frameTicksStyle"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<NHEJ\>\"", ",", 
          "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(P\), \
\((extermination)\)]\)\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"FrameStyle", "\[Rule]", "frameStyle"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"GridLinesStyle", "\[Rule]", "gridLinesStyle"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"ImageSize", "\[Rule]", "imageSize"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", "aspectRatio"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Grid", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"crashProbLinLinData", ",", "crashProbLogLinData"}], "}"}], 
     "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.682706151960951*^9, 3.682706246690156*^9}, {
   3.682706851597055*^9, 3.682706952059038*^9}, {3.68270698910843*^9, 
   3.682707006752699*^9}, 3.682707090711048*^9, {3.682707258842475*^9, 
   3.682707386748768*^9}, {3.6827074507050734`*^9, 3.6827075545215693`*^9}, {
   3.6827100816833277`*^9, 3.6827100833719063`*^9}, {3.6827115065791473`*^9, 
   3.682711538205405*^9}, {3.682714911025362*^9, 3.682714995548334*^9}, 
   3.6827162791809053`*^9, {3.682716903420545*^9, 3.682716917320479*^9}, {
   3.682717235490685*^9, 3.682717242954112*^9}, {3.6827172941212482`*^9, 
   3.682717356113937*^9}, {3.682717744775324*^9, 3.6827177587076073`*^9}, {
   3.682718937350963*^9, 3.682718937640717*^9}, {3.682773861097474*^9, 
   3.682773867932414*^9}, {3.682774110037898*^9, 3.6827741242427893`*^9}, {
   3.68279502951683*^9, 3.6827950887521048`*^9}, {3.682795131015761*^9, 
   3.682795213878549*^9}, {3.682795462442501*^9, 3.682795463012785*^9}, {
   3.6827955703989162`*^9, 3.6827955992649*^9}, {3.682795732917478*^9, 
   3.682795733381055*^9}, {3.6827958980226583`*^9, 3.682795898762945*^9}, {
   3.682796270441737*^9, 3.682796280401196*^9}, {3.682796348349156*^9, 
   3.682796372410893*^9}, {3.682796403273782*^9, 3.682796447434546*^9}, {
   3.682796505329754*^9, 3.682796508285804*^9}, {3.682796538760407*^9, 
   3.682796561531088*^9}, {3.682796592195698*^9, 3.682796625091564*^9}, {
   3.6827967714948072`*^9, 3.682796830009055*^9}, {3.682796868301552*^9, 
   3.682796870632564*^9}, {3.682796967483088*^9, 3.68279700221725*^9}, {
   3.682797115005763*^9, 3.682797140700746*^9}, {3.682797179305113*^9, 
   3.682797286737846*^9}, {3.682797345101762*^9, 3.6827974025435543`*^9}, {
   3.682797433906845*^9, 3.68279747794086*^9}, {3.682862057003611*^9, 
   3.682862084689893*^9}, 3.682862262265642*^9, {3.682869289255917*^9, 
   3.6828692964794197`*^9}, {3.682870599811306*^9, 3.682870620591707*^9}, {
   3.682872405158058*^9, 3.682872414756474*^9}, {3.6828848420364428`*^9, 
   3.682884867267592*^9}, {3.682884905548485*^9, 3.682884924454638*^9}, 
   3.682885267268046*^9, {3.682885838644863*^9, 3.682885840786025*^9}, {
   3.682888804243278*^9, 3.682888829902739*^9}, {3.682888869344521*^9, 
   3.68288887036445*^9}, 3.683038277789299*^9, {3.6830385053292427`*^9, 
   3.6830385974360332`*^9}, {3.6830388246948853`*^9, 3.683038928030864*^9}, {
   3.683038982359046*^9, 3.683039069704789*^9}, {3.6830391309620647`*^9, 
   3.683039133067417*^9}, {3.683399760516172*^9, 3.683399767408852*^9}, {
   3.683404364800919*^9, 3.683404365038289*^9}, {3.694777126046777*^9, 
   3.694777126973545*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], Thickness[0.005], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Ph3Ozy/c8vdy9gI4n+33O5+A/mVw/iy2qvPO
/9bZrXN/WCWy7r19z7fX8apeWxH2fzbK6LTfC+erqpwsdxc/Auc/mZC07+vM
03Yx/Ye+asS8t/fpuKm98esluLyh9UpHOZ5bcHlXL++nGU8ewvkvjf3/r5ny
wo7r+uICW6739n4brs9rfvTBThTsoHf2WVdmp8YbfYfLT76TK+1+7z9cnv17
1jKWJ6z2MP6izaf/vhPis9cEW/DGfvt3a+PaFSL2HiDvub+0f60cuLc4UcZ+
1kwQAPJnb925s07ZfgLIOf2v7Bfu11mQcELLHmzd9cf2lWujdXelGtm3vg7c
Idf62D5AadLtUDdLe4j/HtgvWfH1cU+Moz3Egbfsr85wzGe/5Q6176L9n5Uf
L/kmBdgvARm3+IA9AEGI0sU=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.009166666666666668], Thickness[0.005], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Pt1unfvDKpF17+3zC7f8vZy9AM5n+/3OJ6B/
GZw/i63qvPO/dXYx/Ye+asS8t+/59jpe1Wsrwv7PRhmd9nvtuK4vLrDlem+v
qnKy3F38CFz9kwlJ+77OPG23Q671deCOd/Y+HTe1N369ZCcKtuCdvaH1Skc5
nlt2Z8+AwBt7Vy/vpxlPHsLlXxr7/18z5YVdtQhI4I2934br85offbDTBFvw
xj7ryuzUeKPvdkFgC17YT76TK+1+779dehoIPLNn/561jOUJq708yHq5p/aL
Np/++06Izx7s3OuP7bd/tzauXSFiP2smCDy0f60cuLc4UQaq/qr969lbd+6s
U7aHuP+c/cL9OgsSTmjZQ9yzxb5ybbTurlQjqP6V9gFKk26HullC5Vvsl6z4
+rgnxtEeFoNXZzjms99yh8v/Wfnxkm9SAFweAECB4Z0=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.009166666666666668], Thickness[0.005], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXbr3B9Wiax7
b//hH8dZ1tBOuPzxh4VCi9MmwvlFLlk7Hj6fbhfTf+irRsx7+/zCLX8vZy+A
62f7/c4noH8ZXH4WW9V553/r7LiuLy6w5Xpv3/Ptdbyq11a4+refjTI67ffa
paeBwDt7VZWT5e7iR+wOA3X3H3pr/2RC0r6vM0/D5X06bmpv/HoJzje0Xuko
x3PLDmSa+8NX9q5e3k8znjyE818a+/9fM+WFnSjYwmf2fhuuz2t+9AHqnuf2
WVdmp8YbfbeTb30duEPuqf3kO7nS7vf+24Glrz+2Z/+etYzlCas9xD/37Rdt
Pv33nRCfPUT+sv3279bGtStE7GfNBIGT9q+VA/cWJ8rYQ8zfbv969tadO+uU
7d8ATW99vdF+4X6dBQkntOyrQc6rmmJfuTZad1eqEZwfoDTpdqibpT0sxpas
+Pq4J8YRzr86wzGf/ZY7nP9n5cdLvkkBcD4AceDcng==
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.009166666666666668], Thickness[0.005], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZMd
TP7DP46zrKGdcP7xh4VCi9MmwvlFLlk7Hj6fDtefX7jl7+XsBXZc1xcX2HK9
t2f7/c4noH+ZXXoaCLyzn8VWdd753zo4v+fb63hVr61w9W8/G2V02u+1K7QF
iby1V1U5We4ufsTu7BkQeGP/ZELSvq8zT9u1vg7cIdf62t6n46b2xq+X7IJA
vMAX9obWKx3leG7B+a5e3k8znjyE6n9i/9LY//+aKS/sZs0EgYf2fhuuz2t+
9MEOrHzHPfusK7NT442+28mDLbhqP/lOrrT7vf92/Ye+asT0X7Jn/561jOUJ
q321CMjHW+wXbT79950Qnz1E/zr77d+tjWtXiEDlW+xfKwfuLU6UsYeF+OvZ
W3furFOG8xfu11mQcEILzq9cG627K9UIzg9QmnQ71M0Szl+y4uvjnhhHOP/q
DMd89lvucP6flR8v+SYFwPkAPhzQCw==
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         0.009166666666666668], Thickness[0.005], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqO67riwtsud7bv/3EcCujoMkO
Jv/hH8dZ1tBOu5j+Q181Yt7bH39YKLQ4baJdehoIvLMvcsna8fD5dLj+/MIt
fy9nL4Dz2X6/8wnoXwbnz2KrOu/8b52dJtjAN/Y9317Hq3pttZsAMr7/lf3b
z0YZnfZ77SAaXtmrqpwsdxc/YvewSmSd+8NX9k8mJO37OvO03Q651teBO57Z
+3Tc1N749ZLd2TMg8MTe0HqloxzPLbtZM0Hgob2rl/fTjCcP7USBuqtE7tm/
NPb/v2bKC6h7rtv7bbg+r/nRB6h5++yzrsxOjTf6DnXfHvvJd3Kl3e/9h6rf
bs/+PWsZyxNW+2qQc6qm2C/afPrvOyE+e1iIbv9ubVy7QgTOf60cuLc4UQbB
n7115846ZTh/4X6dBQkntOD8yrXRurtSjeD8AKVJt0PdLOH8JSu+Pu6JcYTz
r85wzGe/5Q7n/1n58ZJvUgCcDwCxqclo
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
         0.009166666666666668], Thickness[0.005], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZPd
DrnW14E73tl/+MdxljW0047r+uICW6739scfFgotTpsI5xe5ZO14+Hy6nTxI
udxb+/zCLX8vZy+wK7QFqXhrz/b7nU9A/zK7ahGQDW/sZ7FVnXf+t84OZJv7
w1f2Pd9ex6t6bbVbUgDS8ML+7WejjE77vXC+qsrJcnfxI1Dzn9o/mZC07+vM
01D9j+x9Om5qb/x6ye7wV42Y/kNX7Q2tVzrK8dyyexMI8sFFe1cv76cZTx5C
+QftXxr7/18z5QWUv9Heb8P1ec2PPsD5WVdmp8YbfYe6d4r95Du50u73/tvB
Qoz9e9Yylies9jD+os2n/74T4oPzt3+3Nq5dIQLnv1YO3FucKIPgz966c2ed
Mpy/cL/OgoQTWnB+5dpo3V2pRnB+gNKk26FulnD+khVfH/fEOML5V2c45rPf
cofz/6z8eMk3KQDOBwCnqscq
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->30,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm], None}, {
         FormBox["\"NHEJ\"", TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->15,
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->500,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.0005103055915}, {0, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.005]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62Tbpwvvfd3YJZ/Ai+v3XBv7M5OnB+xJ6oo4antA+s
c39YJbLuvf0i4w3FU9W14fK2ay8G/GzRgvMD9gmKxz7ShPN/nWp8eMBe80BM
/6GvGjHv7Z/s4VinMlcDLi8940JFxy91uDzfFAa3N+EIvq23vEjAVrUDXNcX
F9hyvbe/aeJ9f7OQ2gFRsIPe2e+url0rXqAKl5c0yKiqPqsCl/+Zp+d+XwvB
f9gVJuLcoXxAE2zBG/vW5bsfLnuqdMAD5D33l/Zxf3XWczkrHZg1EwRe2ufx
zqnJW6B4YALIOf2v7M0Wf/O89FfhANi664/tl0W4iptFKxxofR24Q671sf1u
GfuTxoXyUP89sNdcKZryW1vugB3YgbfsBbkv/Tv0TAZq30X7Bf/7Z3YtlD6w
BGTc4gP2ALZfydw=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.005]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62TboH1rk/rBJZ997e++5uwSx+BN/fuuDf2RwdOD9i
T9RRw1PaB2L6D33ViHlvv8h4Q/FUdW24ebZrLwb8bNE6wHV9cYEt13v7gH2C
4rGPNOHqf51qfHjAXvPADrnW14E73tk/2cOxTmWuxgFRsAXv7KVnXKjo+KV+
4OwZEHhjzzeFwe1NuDpc3tZbXiRgq9qBahGQwBv7mybe9zcLqR3QBFvwxn53
de1a8QLVA0FgC17YSxpkVFWfVTmQngYCz+x/5um539dSOSAPsl7uqf3DrjAR
5w7lA2DnXn9s37p898NlT5UOzJoJAg/t4/7qrOdyVoKqv2qfxzunJm+BItT9
5+zNFn/zvPRXAeqeLfbLIlzFzaIVoPpX2u+WsT9pXCgPlW+x11wpmvJbWw4a
XgwMgtyX/h16JgOXX/C/f2bXQmm4PAC1WNi0
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.005]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6b+gXXuD6tE1r23
Z1q48rDddz24vE/ZmYWLQhB8t9q4DrZNugdi+g991Yh5b+99d7dgFr8uXL+/
dcG/szk6cPmIPVFHDU9pH+C6vrjAluu9/SLjDcVT1bXh6m3XXgz42aJ1ID0N
BN7ZB+wTFI99pHngMFB3/6G39r9ONT48YK8Jl3+yh2OdylwNOF96xoWKjl/q
B0CmuT98Zc83hcHtTTiCb+stLxKwVe2AKNjCZ/Y3TbzvbxZSg7rnuf3u6tq1
4gWqB+RbXwfukHtqL2mQUVV9VuUAWPr6Y/ufeXru97VUoP65b/+wK0zEuUMZ
Kn/ZvnX57ofLniodmDUTBE7ax/3VWc/lrAQ1f7t9Hu+cmrwFigfeAE1vfb3R
3mzxN89LfxUOVIOcVzXFflmEq7hZNIK/W8b+pHGhPDS8GRg0V4qm/NaWg/MF
uS/9O/RMBs5f8L9/ZtdCaTgfAOa307U=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.005]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/wADGHyw
Z1q48rDddz0436fszMJFIQi+W21cB9smXbh+77u7BbP4dQ9wXV9cYMv13t7f
uuDf2RydA+lpIPDOPmJP1FHDU9pw/iLjDcVT1bXh6m3XXgz42aJ1oNAWJPLW
PmCfoHjsI80DZ8+AwBv7X6caHx6w1zzQ+jpwh1zra/snezjWqczVOBAE4gW+
sJeecaGi45c6nM83hcHtTbg6VP8Te1tveZGArWoHZs0EgYf2N028728WUjsA
Vr7jnv3u6tq14gWqB+TBFly1lzTIqKo+q3Kg/9BXjZj+S/Y/8/Tc72upHKgW
Afl4i/3DrjAR5w5lqP519q3Ldz9c9lQJKt9iH/dXZz2XsxI0vBgY8njn1OQt
UITzzRZ/87z0VwHOXxbhKm4WjeDvlrE/aVwoD+drrhRN+a0tB+cLcl/6d+iZ
DJy/4H//zK6F0nA+ALLzxyI=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6], 
             Thickness[0.005]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAA1/XFBbZc7+3VRacb3Z6pf4ABDD7Y
My1cedjuu96BmP5DXzVi3tv7lJ1ZuChE70B6Ggi8s3erjetg26QL1+99d7dg
Fj+C729d8O9sjg6cH7En6qjhKe0DmmAD39gvMt5QPFVd+8AEkPH9r+xt114M
+NmidcAOrOGVfcA+QfHYR5oHHlaJrHN/+Mr+16nGhwfsNQ/skGt9Hbjjmf2T
PRzrVOZqHDh7BgSe2EvPuFDR8Uv9wKyZIPDQnm8Kg9ubcPUDokDdVSL37G29
5UUCtqpB3XPd/qaJ9/3NQmpQ8/bZ766uXSteoAp13x57SYOMquqzKlD12+1/
5um539dSOVANck7VFPuHXWEizh3K0PBiYGhdvvvhsqdKcH7cX531XM4Ifh7v
nJq8BYpwvtnib56X/irA+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L
/w49k4HzF/zvn9m1UBrOBwAmj8B/
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6], 
             Thickness[0.005]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/8AOudbX
gTve2TMtXHnY7rveAa7riwtsud7b+5SdWbgoBMF3q43rYNuke0AepFzurb33
3d2CWfy6BwptQSre2vtbF/w7m6NzoFoEZMMb+4g9UUcNT2kfANnm/vCV/SLj
DcVT1bUPLCkAaXhhb7v2YsDPFi04P2CfoHjsI02o+U/tf51qfHjAXhOq/5H9
kz0c61Tmahw4/FUjpv/QVXvpGRcqOn6pH3gTCPLBRXu+KQxub8Jh/IP2tt7y
IgFb1aD8jfY3TbzvbxZC8HdX164VL1CFuneKvaRBRlX1WZUDDFDwM0/P/b4W
gv+wK0zEuUMZzm9dvvvhsqdKcH7cX531XM4Ifh7vnJq8BYpwvtnib56X/irA
+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L/w49k4HzF/zvn9m1UBrO
BwAckL5B
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {
           Charting`ScaledTickValues[{Log, Exp}], Automatic}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {-16.45688746802646, 0}, 
         PlotRange -> {{-16.30997774204116, -6.907755278982137}, {0, 1.}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 1, Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {-16.45688746802646, 0}, 
         BaseStyle -> 30, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm], None}, {
            FormBox["\"NHEJ\"", TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0.5], 
           Thickness[Large]], FrameTicks -> {{Automatic, Automatic}, {
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, FrameTicksStyle -> 15, 
         GridLines -> {{-16.11809565095832, -13.815510557964274`, \
-11.512925464970229`, -9.210340371976182, -6.907755278982137}, Automatic}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5], 
           Thickness[Tiny], 
           Dashing[{Small, Small}]], ImageSize -> 500, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-16.30997774204116, -6.907755278982137}, {0, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"1000", "5000", "10000", "25000", "50000", "100000"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.683309980030657*^9, 3.683319621913403*^9, 3.683399769517255*^9, 
   3.683404126006543*^9, {3.683404365857832*^9, 3.68340437334198*^9}, 
   3.683404683205597*^9, 3.694164303708166*^9, 3.694229953797626*^9, 
   3.694230244028376*^9, 3.694432662994114*^9, 3.6946937536109753`*^9, 
   3.694777356814707*^9, 3.694778408594923*^9, 3.694993141977271*^9, 
   3.694993757610969*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Elimination Curves Fits", "Subsection",
 CellChangeTimes->{{3.68303916255932*^9, 3.683039168724635*^9}}],

Cell[CellGroupData[{

Cell["Log", "Subsubsection",
 CellChangeTimes->{{3.683290062063511*^9, 3.6832900647241907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fit", " ", "Data", " ", "to", " ", "Prototype", " ", "Function"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"prototypeFunction", "[", 
     RowBox[{"x_", ",", "k_", ",", "c_"}], "]"}], ":=", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "k"}], "*", "x"}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fits", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"nlm", "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"prototypeFunction", "[", 
            RowBox[{"x", ",", "k", ",", "c"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "c"}], "}"}], ",", "x"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LogLinearPlot", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"nlm", "[", "x", "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", ".00000001", ",", ".05"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", ".0075", "]"}], ",", 
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ListLogLinearPlot", "[", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "1", "]"}], ",", 
                  RowBox[{"Thickness", "[", ".001", "]"}], ",", 
                  RowBox[{"PointSize", "[", ".01", "]"}], ",", 
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "}"}]}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
            
            RowBox[{"FrameTicksStyle", "\[Rule]", "baseStyle"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<NHEJ\>\"", ",", 
               "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(P\), \
\((extermination)\)]\)\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Gray", ",", "Thick"}], "]"}]}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"GridLinesStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Gray", ",", "Thin", ",", "Dashed"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "\[Rule]", "imageSize"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"AspectRatio", "\[Rule]", "1"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"nlm", "//", "Normal"}], "\[IndentingNewLine]", ",", 
          "nlm"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"data", "//", "Length"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"popLogFitsNormal", "=", 
     RowBox[{"fits", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"legends", "=", 
     RowBox[{"StringJoin", "@@@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ToString", "/@", 
          RowBox[{"(", 
           RowBox[{"indVectors", "/", "namingScalingFactor"}], ")"}]}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"\"\< :: [\>\"", ",", 
           RowBox[{"Length", "[", "indVectors", "]"}]}], "]"}], ",", 
         RowBox[{"ToString", "/@", 
          RowBox[{"StandardForm", "/@", "popLogFitsNormal"}]}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"\"\<]\>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"indVectors", "/", "namingScalingFactor"}], "]"}]}], 
          "]"}]}], "}"}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legends", "=", 
     RowBox[{"ToString", "/@", 
      RowBox[{"(", 
       RowBox[{"indVectors", "/", "namingScalingFactor"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"logFits", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"fits", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"#", ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], "&"}]}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"colors", ",", "legends", ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"\<N\>\""}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Gray", ",", "20"}], "]"}]}]}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"colors", ",", "legends", ",", 
          RowBox[{
          "LegendLabel", "\[Rule]", "\"\<N :: [Exponential Decay]\>\""}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Gray", ",", "20"}], "]"}]}]}], "]"}], 
        "*)"}], "\[IndentingNewLine]", "}"}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<NHEJLog.png\>\"", ",", "logFits", ",", 
     RowBox[{"ImagePadding", "\[Rule]", "50"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.683039174159624*^9, 3.6830391767134523`*^9}, {
   3.6830392463536463`*^9, 3.68303937360504*^9}, {3.683039420220921*^9, 
   3.683039436978147*^9}, {3.6830394740835333`*^9, 3.683039537048259*^9}, {
   3.6830395786736927`*^9, 3.683039604566802*^9}, {3.6830398737554483`*^9, 
   3.683039895777937*^9}, {3.683039980093315*^9, 3.683040011215353*^9}, {
   3.6830400559940166`*^9, 3.683040114571768*^9}, {3.683040222919393*^9, 
   3.68304022740841*^9}, {3.683040284314904*^9, 3.683040344044981*^9}, {
   3.6832893385947027`*^9, 3.683289339793689*^9}, {3.683289379240834*^9, 
   3.683289381267127*^9}, {3.6832967771308193`*^9, 3.683296780705512*^9}, {
   3.683320261505975*^9, 3.6833203376007147`*^9}, {3.683320372645527*^9, 
   3.683320457262409*^9}, {3.683399777838616*^9, 3.6833998654114847`*^9}, {
   3.683401352393011*^9, 3.6834013791603413`*^9}, {3.6834014119071083`*^9, 
   3.683401423205324*^9}, {3.683401471422764*^9, 3.683401586915196*^9}, {
   3.683401618401313*^9, 3.683401626152239*^9}, {3.6834016734753103`*^9, 
   3.683401682006979*^9}, {3.683401713100836*^9, 3.6834018019725733`*^9}, {
   3.6834018706012583`*^9, 3.683401939617929*^9}, {3.683402339253998*^9, 
   3.683402355523974*^9}, {3.683402408189582*^9, 3.6834024107169237`*^9}, {
   3.6942296899765377`*^9, 3.694229704198772*^9}, 3.694229981712422*^9, 
   3.694230035739852*^9, {3.6947771803572702`*^9, 3.6947772029311533`*^9}, {
   3.6947774242807713`*^9, 3.694777448959536*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{{{}, {}, 
          {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
/1jQoyPuaf8P7LsVkA==
            "]]}}, {}, {}}, {{}, {{}, {}, 
          {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[0.01], 
           Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62Tbpwvvfd3YJZ/Ai+v3XBv7M5OnB+xJ6oo4antA+s
c39YJbLuvf0i4w3FU9W14fK2ay8G/GzRgvMD9gmKxz7ShPN/nWp8eMBe80BM
/6GvGjHv7Z/s4VinMlcDLi8940JFxy91uDzfFAa3N+EIvq23vEjAVrUDXNcX
F9hyvbe/aeJ9f7OQ2gFRsIPe2e+url0rXqAKl5c0yKiqPqsCl/+Zp+d+XwvB
f9gVJuLcoXxAE2zBG/vW5bsfLnuqdMAD5D33l/Zxf3XWczkrHZg1EwRe2ufx
zqnJW6B4YALIOf2v7M0Wf/O89FfhANi664/tl0W4iptFKxxofR24Q671sf1u
GfuTxoXyUP89sNdcKZryW1vugB3YgbfsBbkv/Tv0TAZq30X7Bf/7Z3YtlD6w
BGTc4gP2ALZfydw=
            "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
/IWHQJBcyRPD5a2glv9zLPibpsD/ACvcPcI=
            "]]}}, {}, {}}, {{}, {{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.01], 
           Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62TboH1rk/rBJZ997e++5uwSx+BN/fuuDf2RwdOD9i
T9RRw1PaB2L6D33ViHlvv8h4Q/FUdW24ebZrLwb8bNE6wHV9cYEt13v7gH2C
4rGPNOHqf51qfHjAXvPADrnW14E73tk/2cOxTmWuxgFRsAXv7KVnXKjo+KV+
4OwZEHhjzzeFwe1NuDpc3tZbXiRgq9qBahGQwBv7mybe9zcLqR3QBFvwxn53
de1a8QLVA0FgC17YSxpkVFWfVTmQngYCz+x/5um539dSOSAPsl7uqf3DrjAR
5w7lA2DnXn9s37p898NlT5UOzJoJAg/t4/7qrOdyVoKqv2qfxzunJm+BItT9
5+zNFn/zvPRXAeqeLfbLIlzFzaIVoPpX2u+WsT9pXCgPlW+x11wpmvJbWw4a
XgwMgtyX/h16JgOXX/C/f2bXQmm4PAC1WNi0
            
            "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
          {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
N7ZPo+nGHRVEugJ8d2pj3do6jUJnMpridBQgw0bIlATTKMnCethKUwHeNHX9
3lw7jcqFuim/FBXg6Mh9rOfWNPqd8bJ4+2YFcDLgPuN7bhrF5zaWVU/JQ+Sn
XLdvaBoJdJHqyT/kQXVIumm/3jTKXIvoiP8uD4vBMFGjNY1uu+lM2XyVB8bF
M6khqtOoU6pGZeGDPESPmaVXEafR5tLKyh0t8qAZ9GmL2u8pVFpR9KgmSx5Y
Rbd+/Fs0hS4077DamykPpVGlhUJ5U8i/u312+Io8TDc9tJPOnkKa87PyvJfk
wfr4xRCtS1Po6Q69684J8nBQf/Mmqcgp9KmxJ4YlSB6u0QRE/1lOIeFXHCZm
e+Wh5uyR93dXJtHi4LXRIRN52Mzuziu2OIk+TiudOWkkDxeojJsxc5OoYKNl
/Y1d8mBXVL2sOzaJVK1yVZja8lCZ3lwd0DWJTD7u2JQhIw/6V25XPs+fRNHj
XgOfV+XAu2tLNBc2ia6LVFtgK3IQs7yBS117EtUg1md5S3KgvJnD5QB1Es1e
y7nr9ksOtmWrO0VLT6KDJt1RXyfk4CD5+MZYrkmkX6YjOdYjB++69Pq3vf6B
2Pz4PafL5CBbTLHhqc0PlDj7YGbZVg5eOY3w7DOfQGvLGrOJ1nLQvi7NKbZ7
AgVzV8+KWsrBo3SRukG9CXSIUsNUM5eD3oB5vX3KE0jXqv6nu4EcOPIOOPXz
TqDZRy0LHWpy8DTQ70zy83FkF92zep1bDr7WFx100h5HsvwLAnp1srBPsNpC
nOM7mjx85uD7GlnAzHpUtZfH0P3HApX+1bJwevxrnuncGKJ7yB0oqJSF/ZXK
Wg6fxpBVvf1lzlJZ2LNp505y9RiK8anf0n1ZFricax4g9zHU33pa8sgxWfj7
u2JxqXYUJUfz0S5JykK4CAm7fOAbkntSavAxTAZMOHe7Pu0aRtYieoeNPm8D
O+ype3F3P6rStjteprkNdli3tQrLvUUZM1fNRDS2wS0i++A3nrcouLhXLlp9
Gwi1x8s+nepGWoK2wweUtgHtvfyewgfdqPa79YElyW1wlbagvsboRk1XLTWM
N2wDQUem25OHXaj9l/ni6Fdp+KYl+KRi5yt0uyz5ncWwNJz4fpfDkO0VOu/W
WVH7SRqoww6ua686kNmrvd7JfdKQaL/COe3WgV4XmfVvfy0N3LEi4ZXnX6J3
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
P/8/ICLzUg==
            "]]}}, {}, {}}, {{}, {{}, {}, 
          {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[0.01], 
           Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6b+gXXuD6tE1r23
Z1q48rDddz24vE/ZmYWLQhB8t9q4DrZNugdi+g991Yh5b+99d7dgFr8uXL+/
dcG/szk6cPmIPVFHDU9pH+C6vrjAluu9/SLjDcVT1bXh6m3XXgz42aJ1ID0N
BN7ZB+wTFI99pHngMFB3/6G39r9ONT48YK8Jl3+yh2OdylwNOF96xoWKjl/q
B0CmuT98Zc83hcHtTTiCb+stLxKwVe2AKNjCZ/Y3TbzvbxZSg7rnuf3u6tq1
4gWqB+RbXwfukHtqL2mQUVV9VuUAWPr6Y/ufeXru97VUoP65b/+wK0zEuUMZ
Kn/ZvnX57ofLniodmDUTBE7ax/3VWc/lrAQ1f7t9Hu+cmrwFigfeAE1vfb3R
3mzxN89LfxUOVIOcVzXFflmEq7hZNIK/W8b+pHGhPDS8GRg0V4qm/NaWg/MF
uS/9O/RMBs5f8L9/ZtdCaTgfAOa307U=
            
            "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
          {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
Yvx821VFky1TATKqr1rzEO+HQgEd/XgVaO9NzWzPZSOlX632HbEq8MV9m4kr
7k7tKH/XaBUIEo/wnsxhI7nGPw+DLqiAXdUlfh7cHUN9xCdnVAAm3L/pZuPn
3dZ8LqqnCnwfKFoTk8FGped1361lqED1qR7PR8n/t19/T13TUYGpejFQwL2O
79EGsrYKbKw9En7/Bhu5pJMMGWoq4OhBJ965zkYc5VzPAuVUgMvqeWdMEn5+
THTcHhVWgcwA3RDtBPz82evp1TytDAGSp2VEI9mof0T208FJZfhT8M4oMgKP
P3BKf2lMGQ5HiJdOX8T3Q/JpcfqIMvx6YRQKF9io4FPsm/ReZWAV2xTuD2ej
43uL1I83K8PtYfTy9Dk2+ms3typ8Vxky7la2i5xgo5lvz4+VZCnD1cO/d/sc
x+sREP55d4YybHQs+Vfth89/Y31p+E1liIj7t+B2jI1qPoodGbuiDJN8X/Qz
jrJRlB3WXhWsDIE+DmrTnmy02S42zWOvMhSaP2ged8T7b4V7oMVGGZjXTH/x
4z5VEEVR3aMM++Zl1mk7sNGn1YuF/3Yrw/dLWlPn9+L9WRRanYyUYVXvVCSX
Df59Zp3/cJOCMuSwQu5372YjxnNXOcU1ymDUQa64rYuv71DfsWsrSmCtxnc5
Uwe/j7a4PJn/pwQhSa+3Z+1gI84jjroNf5Qg3uKE320t/LwUtLXYP6UET0LV
82LU2GjvMZOTV7uVILD24QpBgY18SWqVvx8pgfeVj+VGovj9XDgSF/NQCZJW
frJVtuH9pXXTWaxACWgpnF+3ieDxWi4tYveUoLaAOjYqxEatIU3M+HQlMHrx
xdZ/C95fPS715Fgl+Fx93sZ8HV7fpMgOS3cl4BpU3/Z7hoVOSmjdGd6vBDLG
Os5PfrHQ0v2xEwH7lEAimkQ5/pOFhGotBW45KMHRpD69b9MsZDC9be+IhRKk
Mtv8qsZYKHt30edgHSX4NxdnSB1kIVfOzpH7gkqAmS86vmxmIXLBzivr+JXA
QSgzU76JhUb3FGse5lOCwwLN3240sNDxzNgYKo8SWGYveXm8YqELO3TlMpcV
QTXh2MYfL1go7/gd3+tjinABu3gt4RELsXqPzoTWKMJUW1mu1jUWenqxK72v
ShHspauFDlxlobNyhoa6zxVBytKfHnmFhTjOSCTPlyqCN3zwabrEQoICbzX9
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
iG/buUiGJR+FaMWTPChKwuqQ2xwZTv+K9WzQXIdsi0torBkybK98uRypwI3I
+gLLoT/JUFR9XDpXgQtVe35KSZ8kw931Z3stzTlR/Jymh/w4GSb+iYzy+K5B
TrE3VSq/k+F5AskiIpkDzRa6NHd+IYMlSzP2yLoVrI5RfePQEBnm06SsvK8u
YUkdBPff/fh4gu3NG+X/YUozwwv8PWR4lrdIy7q8gC1GGjTe6SSD+87YPVZ2
81jL1nvXVD6S8d+v03Sq/B/skI6XgkUHGY4kH1g7s/QbU2tr+dPbRoYbal19
PX9nMI79CvVHX5PBeM2htc85Z7CMC9P7Yhvw/EzU6p3Q+on5CO6RE6kjA3X9
0elCYGE77j2evVdLhrqHEdKFctPYp+aAK3UvyFA6LmY5SJ/Acpw7nW0qyXDp
XmfL6fdj2MlJLZnhcjIceiSfxxXxA+Pbsliz/JgMpJU3L0lCo5jCxJG+tGI8
PxSu553z3zDTxo/z6kVk6BXwt1Kb+IpFhDyi+dwng8anL5tj5oaxOw7iltx5
eLyrmX0H+Iaxanrs0ewcPD6H43YGBwexPz/cc7oyyXDhz14AlT5MqP5Nzanb
ZDieV5n/vvQzRsvS7dt0C48vM1vom3kP5rtXWNgwmQwXu2JKMp50YnGqF2mD
18igoKJikRf2CcvnZVmcu0oGbca+0uPOH7FhaI4uiSeDAefWmAPM99jybY0c
szgy6OVK7ZQ2eoeJn71bMxpNBvE/RVWfSzowe+WQ+e0XybB1b/1FcdM2zJ9n
TKginAyOV8pPhTx7jSV920uzDSUDd0rigp5uC9Z6S+Vo3Fky7LPlFXsV1oj9
CLwdLXmaDCU+7IJkvQaMy5onp8afDDd1fMZGeOsxtO5r76wfGSh6NX8TegFz
/WI1f9UXr++L9Y8vP63FgqurhBSPkiHtb+/Zc+0vsTL/FIuDh8hgGCImKmT9
AntvyXl06SDez/UHbPgqKjGW3Inom25kWLufykPSrMDkh0xr3riQ4Unh639v
TpVhxi/Ke72d8PkcK77TVEqxQynU+bUOZFAs+xytufwEyzJfUtW1wcf3SLoQ
klWCVckctei0IkPrebWF7uxHWM+aLu+TFvj6eQRdya8eYnP9BtEbzcjQU9K+
89lyASZYWXI334QMaP5A4hb7B5jqDYmanbvIICbjm1LemI9ZHL/U229AhmHt
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
z1zpbjvFOf/zebmyPIP59f/z/wOgVT0Q
            "]]}}, {}, {}}, {{}, {{}, {}, 
          {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[0.01], 
           Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/wADGHyw
Z1q48rDddz0436fszMJFIQi+W21cB9smXbh+77u7BbP4dQ9wXV9cYMv13t7f
uuDf2RydA+lpIPDOPmJP1FHDU9pw/iLjDcVT1bXh6m3XXgz42aJ1oNAWJPLW
PmCfoHjsI80DZ8+AwBv7X6caHx6w1zzQ+jpwh1zra/snezjWqczVOBAE4gW+
sJeecaGi45c6nM83hcHtTbg6VP8Te1tveZGArWoHZs0EgYf2N028728WUjsA
Vr7jnv3u6tq14gWqB+TBFly1lzTIqKo+q3Kg/9BXjZj+S/Y/8/Tc72upHKgW
Afl4i/3DrjAR5w5lqP519q3Ldz9c9lQJKt9iH/dXZz2XsxI0vBgY8njn1OQt
UITzzRZ/87z0VwHOXxbhKm4WjeDvlrE/aVwoD+drrhRN+a0tB+cLcl/6d+iZ
DJy/4H//zK6F0nA+ALLzxyI=
            "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
          {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
/wNNa/Ok
            "]]}}, {}, {}}, {{}, {{}, {}, 
          {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[0.01], 
           Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAA1/XFBbZc7+3VRacb3Z6pf4ABDD7Y
My1cedjuu96BmP5DXzVi3tv7lJ1ZuChE70B6Ggi8s3erjetg26QL1+99d7dg
Fj+C729d8O9sjg6cH7En6qjhKe0DmmAD39gvMt5QPFVd+8AEkPH9r+xt114M
+NmidcAOrOGVfcA+QfHYR5oHHlaJrHN/+Mr+16nGhwfsNQ/skGt9Hbjjmf2T
PRzrVOZqHDh7BgSe2EvPuFDR8Uv9wKyZIPDQnm8Kg9ubcPUDokDdVSL37G29
5UUCtqpB3XPd/qaJ9/3NQmpQ8/bZ766uXSteoAp13x57SYOMquqzKlD12+1/
5um539dSOVANck7VFPuHXWEizh3K0PBiYGhdvvvhsqdKcH7cX531XM4Ifh7v
nJq8BYpwvtnib56X/irA+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L
/w49k4HzF/zvn9m1UBrOBwAmj8B/
            "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
          {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJxF1nk0lN//AHBRKllCJAqzWQczUol5nmsrOyEqLSJRClmSIpKlkiTZImsR
RYgiqd7ZU1QqZEm27DNCKsT3+Z3zO5/mj5nzOvc89973+77f9xmSk6f1UW4u
Lq5Q4uv/fv3N3J8Un1CHnubm38McDtpb2Jcf4KYOurOnTn8mvE1k750dx9Xh
zIJHxyvCs216MV9c1OGpMv/BZMK+RyTcljmpwx5mlq4JYc9z1Zus9qpDfsRF
j2w2B7nkbgifNFCHDeHtIUYTHLRzzfWACn11OKzU945JmOax3DtMTx0K+Ty5
pQgPbOYcktBRB62z19ZNjHOQ48saTR1tdXBlMEeuEz7Q6jl+nakOPN5qW9+P
cZDN8jobNWl1uGtl7Ko1ykHNvhJbezaqg5Sje8MmwiaDbhLXpdThQ+0izzLC
enVC3WwJdTgVeXd1/QgHqV/e5/JQVB1q30QaWxFeyz/hr7JaHap6HT0PDXNQ
k+i6NOUZJkicONy37zsHGYW5XOicYkKqTztdk3DNTLnT1R9M+CMlZipOuPLz
QfkxNhNOJswsaxnkoPzEe0X3R5iw99GgtSHhSCntasUeJtQlHjZXHOAgQ4rT
sHwjE/i156caejloMrR5LbuBCWWuMv13CCcNaG0vrWfCrXP92UGER7NFI3Vq
ifkL3bM2E45WqFXeB0wwo5z0SvnGQa0qCp6RT5hQFIy2OPUQ+ddk/xzPYsLs
5M6yxi4OErplL12SScRjyo5MJ1z+p27n2QwmPAqqUvQlzPcsPXFFGhMOveDU
byT8ELPaLn2LCdqZOsEnOonz1ysNtLzOhF3i79MXv3BQuPk5nkcBTFCtjG74
00qsbz1uE3SOCXYV9MAGwnJ7D901OcsE2/CSmQTCDU56O/r9mMBr47h5M2E+
f75L67yZwNTx7Tn2mYgnK5nvzDEmrB9fV9LwkYMSflUIs2yZsKrcQnvvew76
vkB3WrWbCXLsxQVpwtu40x99smaCxznZc4PvOKidP9TGfRcTmp+fyvYiLEk2
jU8zZYLhtE5ZRDMHpZt1SizTY0Ke6bagO285KDdzXqZOlQkk/oTt2Q0cFF9q
csBfhQktRVLSBwlfrL+VpERnAnliRfY6wgcmtglfV2TCt35q0sV6ol62+3Lv
pTJher0Gr30dB515Pz4wsoEJgbffx81WE/W+1J0nsIJYT7Ripu8FB20WUfn+
kofYvwUXI5qwLC2Q7M3NBOuqg381Cc+ZSKa0LjGAx1zB7NpzIv8JdlHpcwxY
sre/z6jkIDHVdx7MSQa8LHo34viU6JcDsNm2kwFX1hy3cSvhoEUHxSebOhiw
YWXffgHCEkdiNb+3M0B5P99M4SMOMjvujJ1pZUAJ2+LDdDEHPT69yvDWBwYk
Wzcz/Io4KCJ6l313PQNuTL/hO1rAQfLw7cLRUgbE+8vqDeUQ/VNtzKNawoAk
lw61AMIH6h6FzxYzYEu6Zoog4Zi3YZGXChnwztFneHM2B/1uV4jLu8+Aygul
pv53iPP/cereRAYDqG3JeUPpHORGWdZ8+hoDnCjvsQNJRD40DFnUKAYYeE1v
+JTIQW0G1+63RBLx3XUzMCVs4LLhktplBvAegQvbEjhIOo+pM3KRAdI9z86v
jOOgFlWnRwf8GXDS/nVF2HUO0tKqTtA/wgB+hlXsRDjRXyarV0w5MuDPaw1X
c8L39lv6ZBxmwHrJayfywzho3flOy78HGbD8rPuiaygHsV9Oryrby4Dr+Q5q
ny9wUNYOaoCSBQO20U2aIgI4aLVVuIPwdgYUegvS0SkOOsb74WftNgasFXHU
jfDkoLpnG6PObWXAVOaC21sPop7kSsv7NzNgIsdr1tadOO/5PuEnqgyo+VnR
dNCN6O8cnRp7KgOi7Y75ImcOerMwr3BXiAE+s9Q1ens4SOmR4cu9gsQ4K876
uB0HXXa9aSsgwACji3cirtsS+WlRuujHxwDBDMPCdhviPrq3r9NoBQPyFT91
HdxF3O/ZHlKdP9Ugu4p2Wt2YgzZYDQ64v1WDJy/p2XPbOYhxuyiVp1ENJkYr
+wUI7xwKsLtVrwbcCa/5ZDU5yPu8SENNlRqIelgJ6G7loLd56IHUUzUovpsK
p9U56AJ3stfrbDWIpD56matE9GuJxSI1WA1mcz59UJbkoIXFDWUVgWrwylc2
YcMGDhI1GfTcdU4NJCYW1/NKcJDOt4DegNNqYI+VWnSKcVAyf15Nywk1mFNz
d/AT5iDzozxXL+xVA1R/vMZ9FQeVipev72KqgXfmqgW7n2zEcx7LxdTU4HT8
z5LFaTay7q/STKerQWH9/JO7U2z0o7Bpn5O8Gsjb/Iof47CRqnF/yvBGNVgY
Tgt0HmWj3ABB2Z8r1eDNjwD+ZT1slPLNWUHwqyoYDI6Xfq5jo9Gdo+WenaqQ
/v52vF4tG2kVeBp/aFeFa0XdZwuq2aj97Dm3uI+qgOz89c8DG60TjcmXfK0K
0Q+MEpdXsFH0jmcM+VJVuJ/iKFmUz0YX7wtv14kk5t+Dvz4Ww0b0H422zZdU
oZA9k1cUzUaft4V5HwhXBZ8R08uzUWykUDv7wP+CKmTxcDQCr7BRc0+ndLGf
Krz3kRLyvMhGkmI5y8lHVOGA7ZGGSR82KgnWes/DUoVgjuaAjS2b6Nfp8Rvb
VaEpo2nBzoaNeAUKVstuU4XrR5zq91ixkX2yjD5LXRVyRYKPWZuzEdfj5U98
FVThVnbOTeUdbGQ22pwyuI6Ip2/J4oQGGw3sPuJaP6ECdeJWQwLCbNQ1IP/J
cUwFfrmsftMkSOzfd1xnYVgFXiYpyF3lZ6O6uNOSzAEVcFzLrbm4ko3yPl1q
Su5QgdX9HsG1ixPIY3f+Zo96FUhP3qTTOjaB/tj8XFqXqQKKYVfkJ6on0FT/
05OFaSpw1cjrvt2rCTTqE/TF+LYKnDeNNX3+YgJ13VxZEpSoAlc2vOwKeTqB
Xnzc4DJ8TQU+xswNDT2cQGE2+Ntn51TguBPvctqtCSRocynJabcKrG/eO2x+
YgLpLK7obrBSgV5EurTu2ATyygsjqVmqQPJdGfM25wn0aSnk/ryxCgiHsXCr
QxMoOT+wMg6pwD23Mh1xqwlE4/X+VqekAmdrjCR7t0wg1tMDCsrLVEB31Gb9
gYVx5OHcefLGIh3qlu10Sv89jtKF7It/zdNh1WZHk68z44jbZY9WzSwd9C7x
fLOYGEcNItZmB8fp8Cfje+Zc9zjafdLw1PU2OjDElgf5vxhHJ2TUy6cL6KDV
6vBjPGAczd4fuBzxgA5noj+KDZ4ZRxe3Ju7bkEeH/RJ+39t9xlGy+cIcfpcO
CV5BgSUnxlFjQB0WmUwH/k8l/Br7x5FCu3217CU6pNYH6ThsH0cDMaHN5ofp
8KIw8ZHu1Bg6tXFr+reDdFhosE+4NzGGFu4Ne/rsp8N6l5q7q0bGkOhLc+Fb
dnT4WfyTUdkzhvQm1u8eMKODwKJv7PDbMZRhnP/l3HY6mNPxj9Y5Y+gA9+eB
eyJ0yN74sM/SdgzJ5ule411Lh6tCa5WyLMfQoOXDLUcF6JDvKkRjG48hj9RL
EeRVxH7akKwPPoYuaGoppP5VhuPHa28y5MdQtkf6idhhZRAMzSn2/TWK2B3H
pwJfKEOgzP7++dhR9CikNbnzmTIg9RzSuahRdEZBX1/rqTL0Wee5/AgfRVx+
G+N+lSiDZpYPp9F/FIkIv9vinacMouRnLoqHRtE2Q42zrnHKsK0owfC6/Ci6
ULK4ZOWmDHvf+TM6SkdQ3B2/35WuytAWIdZzo2AE5d5kT8ofVYbJhmYNvZwR
9M7na+9fB2Wgq72qikocQdIaL6rzbJUh0eL5YMPZEfSs9PylZbrKEPZ6GH1h
jaDZxwuCxeuVIXjsobj282HkXj63aW2tEswVn0qRyRlCXZdzsu5VKQE9Ou58
cOoQMtlnLY9ACW6XNZPa44aQ3Fwew+OZEoxdjb3nEzqEvmrv039brARL28pP
2BweQhYvy45dTlOC7K0bhEslhpBqnW8Jl78SrGNNVk+Efkfsj2yjH0pKwKUl
xlxtMIjiX+7O3q2gBGpHft98oDmIWA8qlpXTlKDpt7PGDpVBdOViREWQrBJI
PxfafEh8EFGZ0nR+cSX4Un3ESn54AO2PNheSX6YE8Z39ResjB1CDUf7nA22K
kOP10Ci0vh9lPT/u1BCqCBEd5YZ+in1o5HnX5aohBQjsF6Q8LuxGR6JaUx/h
CjAvLLyvf+4zynmY9fhJkjxoKRhiVupNKPLlFmvTBHlwNbwVTF98i9zfN7B7
bsqDtkTpLrnGt0hjii2/+ro8/MKLpM44vUWvtmgn7w+XB8lOncLEuDeoq/Jj
EJe3PLyUbHgtt/QaibxZbmRiKg8+SvjneU4dmu1MHPhqJA8Hj1k/3Q916Mu4
UojPTnnIaCnxGYypQxmCVhW3deVBf8+2sjPqdUjFOpXO2SYP2DufkxlnapHR
ly3CcVR5KA6dUjPiq0Hnh1w6uv/KQYoWZcW89SuULFpqgc/LQewB3d33aK/Q
E7SsOu23HERO+0de/w2InZjywGFaDsix7l3r0gEdMnof2DssB2+icw1mu18i
nbztMoMf5SD09++yAY3niPsEv/N4nhxIt+esMtEvR9KJ+9rN7snB5Pop7hu/
y5BWdY5ZwV05KP7gm3HwYRnyltLd4pEuB7Twd08vS5Wh/jeneSfj5ECPPedM
X3iMaug9udPBcrDioITAu9YSdIldPDFnKwdrp9AVnoFCtDinzr5kIwe+o4v5
Qv6FyHdlKXudlRwcUtaxXylQiA7LPuGomskBS+e8Zvn2h0jLuuKHk54cNAZ+
1Vmflo/Yj6t+NqrKQfffMQvf2DzkXKU/u4cuB14Lj2YEtuShzuaa2QFFOWAP
qFyJas9FDUN1vxapciD4ukdtKzkXZW1480ddSg7azwaaKUEOsjv/8W/ySjmg
Wqbm/qXdRW+v7F6UX0HE178nLbH1DtJP+LxYyi0HtavL8TWX7yBGYdtS818a
DMTvXB84kYX4ejuX8czQQFVh7sSJqkz0wmBgxYlvNDi1ODS5Xz4daVgd5f3d
TQPJc8cDh7PS0IOD33nDO2kg0mSZvFo2DSX5Da9Mb6WB+0Xxb1wyqcg7d3z1
x7c0uMiTeSJcLQXR+H8KaD+lwdGxb/TepEQ06hhy6NMTGgyL8BtVqSaiojKB
QvdSGgyl9hstr0tArCNyuzIKaTB4WsY/83c8sq7YE7sihwaNdvjqv+5xKOhY
hfj7WBqIzTzftTbxBjJ4sdP1eAwNQJW9o0P3Blq97mMZdzQNqj1fHu6eiEFx
L8f2brlCgxOlM/fDjGPQA/FNKcnBNBB+HyW5SToatdcEyxw9SYP+ZwXpFzOv
oDRJ/lOLx4n43aIv1UpdQUdOJUGiKw20f9RqyyVdRmypYsdGJxo8mXRPUU68
hFb49N1R20cDkqGERFFBOGps8JhpsCPydVXczFQzHMVIzxs47aaBoHTB8S81
YWhjo+j3OEsauF7S/VXeH4rUSTsU5nbQwLf2zQvOtovot98H/5v6NMi/Vp4a
9SEEPX978DVdlwbHHI88+3EyBBn5+7k5sGjQuQUuLeVeQA7v7uXXqNNgzavE
t8onglDUeT7mdRka5LXdzmFpnkWR7F37ZjbSoMtI51dtrD+64pAYsk+SBmdZ
d8SfT55BEbrUFooYDdo1V2S+euKHglfgPuV8NJhqFm17ddwXBfmFpWxaRYPr
D5xl93z1QYFDjdUXV9CgmzTT/NPWB/m/3rPOnIsGY80rb0lbeCPva16Pe39S
wdtVlNV0+BQ6tVjWvXOaCjOD6+fL2z2Rp+fiivxJKhgIJxcq//RAJ62u2vmN
UUHRYn1jMeaOXMSyf/H1UmH+xRaTBj435BwxJnPqKxUWPLzjBU2OoyO/mEaf
O6ngJ2W0f/baMXT4y4uk9FYq8Jt0Nu2muKJ9qe3bNd5S4eTxMDvui85or6CM
063XVDi/7rbQqoEjyC74aORiHRWCH355strkCLJ2nOpoeEWFpllXhUckJ2RG
4w88WEaF2SV8YW7OAZkkWN+tKqXCiZkqvui5Q8h45a238o+osEGTvjjCdQjt
HKFtmsqngptDZYk76QDSKUAvIrKo0K4qP/a5YC/CpSO+j6VTYYy87sLXnj0I
u/5W0CqVCtG3W+hp6/cgLa99DlJJVJh+ezi3KtEWbd7iw1V0jQq5sRS2Zps1
8Rp/qiB2lQp715u8ub7ZGjHWc1mdu0yFJx4ZbnlxVoj+JyrTIJQKsKzUr8R5
F5J7nqP3xZ8KeguV0freZihYkPTLzY8KS/E6jOUXTVG7Q8qDBR8q2G+QuZGS
ZIKucMesk/WkQregHV/BFyPUZ8P3uvgkFYy2Oq5s5zFCWtlh5/XdqDAngl3V
1jBE44Znv7scJdZr5aGJ3duBDG5NJ/92osIt+5A9uiMGKHXU3TLyMHH+a8oM
RZgGyOKaU3nBfiocO3wsTeyDHipuMY2csaJCfWbwpzELHcRHrcMjLKnQ+LLA
ivc0Qk6ndabXm1PB+OT79BO2OFonseWAthEVGHcMqoYYLHTyeOHaph1U+KTi
aHlZWRvVVijWHtKnwi562oS3qhbyOyitehGnwr1kuvdOM0307mFSnyiLColP
r6hXuWxDClyiidnbqaDwvru44PJW9CVrJddrDSp8l9peuaJPA7GGJz8IKVMh
gb7kZj3IRPHbT0RkKlAh8mrD+64tTMSOHNTaLEeFiMSLHNsoBkpX6bhjR6IC
p1rCujlOFf0O2r13WJp4vmha3e6ICtr1vpn/3EYq+Ja5Nrux6Ijbp/p06noq
0LoDLRf5ldD+GkxJTYwKk33b2vp5FFGpWPlXEKES/0/bLCnLFdDR8nzDAQEi
v2IBozEycqjhb/wG5eVUyFu2oJdfQUYky7XNlcuocDrD1rhjhoTOZURetFii
wKfyTRctt5KQsn7wmNccBW5MWesZ35ZBYXF/0nl+UyDd5XsBzUgadQ367I7/
SYHHvlyZr7k2oejLx56XT1LgFh+2/1WCJPr+pc/LhE2Bs/S7r4x8NiCkfFCu
a4wCDBrz46K9BJpssrq+9J0Cxsvv9weYiCMbUW3Hnd0U8JRdyhxLF0EDwZ4T
dzoooPFi7ancCmHkN37n7LJ2Cjjskday7lmLbtXyx1a2UMBfIJev+4ogUlLX
lZZ8T4F8m+Beaz4BVJl2+v6ZJgqUi55cW5OyBvWc+Vql3kABasufA3/Yq9Cp
ARHLmFoKbEaeSQGFKxG3lWHnRBUF1jDlyaeDeBFNqWg69zkFtnskxIXuWI6e
JAwE8z6jwAhH4FowiwcZ8Wzgdy4nxisjiwFxoxNdIVSZEsLLFSnrjnOhBaMn
RYFFFJgSh3znjUt49ONRVkcBBRybFy7ZB/zFi6NtbONzKTC+lSd80WcO15u/
1DuVTYGv850uvPx/8E+ule677lBg2zXdxnOPf+G/dGgRa9IoIK2R8PXh9p/4
5YJ9IsdTKLD6a64Aj+gMLikZnVaXRAH7p5ctx+emcGx69knITQrU3ejlmpye
xJsdlPV7YiiweJix0MIziR9+6/COFU2MG2UHlSE2HprdMPTrMgWGTVXph2dG
8XUif31sIyhge/Muc8BjBM8JYnKVhFKgI+Z0c9TfIfz1nmQJjyAKePDzRSXY
DOL2Nc133wRQgK9TgnfLhgF8nMHDVDxL1FPnfZo3pw8X4jtpPOBDAfZDcmF2
4zc8wy/js64XBUomG03R7R5cvf+TY7oHBTpvHI8+/6Ibt63Eztkfp8CAb1BS
rGUH/l3Bm7fchQL94pLGo8/acf/4nFgxZwooxPeLXcPb8BQPoQfvD1GA5H+m
wfjiJ5zeqb9N9QAFVoZGFJvrfsRfGPpXX91HgULT8mZPkRa8V7a3c+duCiw7
oO9T3fwO974mduyuFQWwjjveYy1N+PI545lllhQI29Yxd2jmDS7/8RH/c2MK
pM0qnhS50oCXo6EkSUMKaAn23vb9U4eb5EvR/A0o8Hoh5NTRkFq8S2JX8Wdd
oh73yqpnyNTg7uFh2GZEgQ+BSs2clip88Uf56xgWBfxWatNVk1/hMYcmbNnb
KRAgcCZa3xfwkm12HnkaFBDIv72p+GklHjcRbyKqTgEcE3L36azAfe98ljuv
RgGx5X/Oy0g+xW33ifEM0Yn4vm8sk/Qtw7cK2fbsUqJA6dP5pa9Dj3Hx2rhn
FfIUCLwt1vXHpxT/de5TIpVGgauTh6PXrC/By7/b7PotQ4GCb0amE7eL8Fu3
b9KdNhH1+EE2OnfuIX7O+uOqt5JEPbj3TFb25OP2q0QHt0gQ+cVer1r4fh/X
fmH9Kl2MAs1Cw1dcBPPwjb6xqatFKbDVP1tHYvc9fEGx5azPWuK+qDRs2vkk
G38Rb6VuuIYCSs/uN7q9zsLTTG8IFq+iQCbYD+meycSDl30YleSlgNXG7kU7
7Qz8cNna+jAeChhcSeRNV0jDdYjuYHMR90fDE6xh2W2cRIkJ3rtIhk2HhC6+
XLqFc395t79qngwb9sydwGST8GoDy3UJs2S4/eXFR2uIw+/ORU8uTZNha+hI
2x/tm3hYUfPb4z/IAH9zTum33MCPEkF8ZJMhdUc983xIDL5zo0U4Nk4GExEJ
sY0x0bhcyzXHeyNkED9t2D9iFIWvvNyECQ+RoR0p615XisQbps1mB3rJYMA1
ld9/MALPzYtqseghw+nKL8vL74fhVxzePizvIsNqk3iN++KhuJsY/1VyBxl0
x4xU7qWH4CZvTF2j2sgw/+H52Ur9C7hyyFX92U9k6A7d/ZXOHYTzb3sjc7iF
DLldG0YWHgTgTVkm7ZubyGCb+bPJ9MIZ/OHeyNLURjIofFexmL17Go8WbIxZ
2UCGqpmoM4ITPrhnzWp3r1oyHC/+8FnKzhvfdc7YuLOKDP55q6uau0/hDMYV
2g4ggw2uMjfP44kLf29YVvicDIw+p09GISfxFiujiovlZHAsenbt05pj+KOV
lxPGH5OBXSf+RE/EBb/5vN7broQMnt+/W88iZ9zXZ6UlFJFBayp/v0isE75b
0VBZ6SEZ9qWZeY+tcMS39ESsjHtABkW1qpTV6g64eHxd/99cMvyh/M6SjD2A
t3HtvP3hDhksQ7/W97H34OVPwv21M8mQuUEN6+i3xZNO1u7OTiMDjXeHujzP
bvwseQVT6DYZ3r3If3Td2Bq3bzcQOHuLDGU3B8LXle7CtaLDRvoSyCDBdTq/
I9gClzKoqTWLI4Prd2Eq32dTvKtQP0j2OhnOuzL0RWiG+PqdZd+fRJGhJ/zj
T9PtO3DrLiVL80gyOBVNDZj56uPXvNPK+i8R+d2tLaL+URdvWCUiey6cDIa1
4VxmNjo4T3r45bWhRLwHNau2DmA4vuXPZM4FYn88XN9T7LXxUsdvrz4GkIFf
An2r+7YV5/yyUXI7SwZnu76llmENXCm6PpbrDDG/M+OvvORm/ChVez7Blwyd
G5J2x3ox8YyKh0dUvMnA7JI+rtGuhnfuIr+t9iSDzPjjgUUBFVx8KF7D3p3I
5yIedCJYCd91fnXqpBuRP0nrzVXyCvhV0fMrLh0j4iX9nbrLLYfX5U26b3Ih
wx1s1eHV/FScS8e5teQIGSK86H/Udci4dmsbbuJIhrh7DpkFKbK430nTe98O
kSE7yXjFja3SeDH3S6EzB8ggaqESRfaXwseT1P0F7In+2GutmT4rgcur5Xy7
s4cMbUkvZLkLxHGn2g3GWrbE8/qDhvcT1uGp+68Vv7cmw1W6hZ1NoQje/oNL
0nUXGfgY51sEp9fiopd9L/41J8O1d723AyoFcQvp4dGbpmT4GD3NK965Br9S
ut9GyZgMJZ0yDxq1V+M1Ju+ewU4yKM8c8PzZzosvfdOj7jEgQ2KIaqtLwXJc
68yTqAldMswMe8vvL+XGTwso/QxFRP2Wx2p6j3DhRXdSD0piZCgcTb5peWMR
G9suXFekRYaD98e7k27PY3Lvw1QNNclwK5z359+J35ijy++E7i1keO/zqMYs
eBa7vXBiyWczGf7eDKe3m8xgbbE9rnxMYn3fHxfcTacwEUWb9xmqZLBT39xi
EjiJmb+s09xGJ/I35tGm/GgCu2yrldmkSIblO8oX7z0bxarHClY7y5MhzyGo
t1pgGFsMIXnPUclwWZj/REfmILZdIr4jhkwGlvrpCx1e/Zjvw1X68rLE+pt5
27X8e7FCg8AHzzeRIemY44Vuhx5stIMjuluKDCk/310pU+jCaF5HAkcliP11
/tyZofcFO7yybeCCOBlka3gXprNbsZRUE/P168gwfXT+wgvTT1jr5hePC4TJ
QP8kZJuv0oIJNzKlDYTIEHLErH9hx3vM7HB2RAc/GZo3savGpJuwS7MSnFN8
ZOhQzjtWyNeIVUVF7Vm5igyPN1GvZu+sx/6SuSB1BRnERMS85xtrMM2nPgoa
PGSIvl/9LSmmCvOxHIpp5CKe98GShW4A9nDQ/s/hRRIwHTZHSlx7jo0ENDv+
micBHjgid2NPBUYV0Wu89ocEkREhyn/PlGGHch+rU3+RIN60UrdisBS7hSum
VMyQoK/P+Mhc0iOMf9Kuc+MUCSRtSs0GDxdhFzLDpII5JFg1JRp55FM+NmP9
aH/vOAmI2g803J+HHVv+LUV/lARY79iXCOMcrOuxQFf2EAlOGj7hxN68g+1y
1d64apAExov3hCXVMrEaieMH3PpIINu+6NZMS8O2NSbcfttDgtsdrQ5X3JOx
+wE1XardJPhFSkuqlkvEpFWmNt7oIIFEWf2v0wZxWOxXmYPTbSQQdGp9vurZ
DYw3xjzV9jMJplLSX+7juo6d0w3oLmshwVrsi5+32FWMPZW7SfI9CSq6TRPF
sy9hTndbDwY2kWDs0a+1rRlh2Gfb5WlfG0nQxHpl1D8fghmtVP+q00DMj+Iv
vrENxirLHaTv1JLgpca1vizDAIzhdu3QimoSkM9/uBv27Ax2V+pZmiuQgNs7
5nxZpi8m0TT89fVzEvzGcv3txr2wqCBxGfozEgjkPAzYLu2JcTEMHKLLSVD5
0a3efdEN8+n1Sp98TIIDam9C1V1cse+x6T3WJSTY+IYW8tjAGbM3aJJ5XESC
oKduDvJXHbHmn3MO6x+S4M+5ZxyufYcwvXsKGWcfkOCSrFdYkpY99mSv3bfO
XBLIWO5Z+zPHDlPiC5PFc0iQGXE64USUDZb2rPhwxh0SqL37kBHYuQsTdu/J
4M4kQeypZ2Y0AXMsTFqg1zmNBEJtlWXXeYyx3++0SPUpJND8eGHn0fAd2MmQ
Y46Kt0gw+MGg2vOCHvZNPSHzagIJ6vvmD0S+RtjugereiZsk2GqXGs9lrI01
xP8g7bpBgtL2m7+5XbdhLEMZp0fRJNDf1y/lIaiBFf42y1oXRcxv3CjSTmdi
5Pvn+vyukOCg/I8oH2cVLGF/LvlLBAmgdI/pDpIixifQ6qQdRoKiANe50TM0
LOgFz53UEBJ0Dxm229uQsSlPZv9SEAnuTV4SytWTwVxIDhSnQBI0/vKY470r
iXW0RB2pOUvEL7N3+7FCccw8rOKO3BkS5Gbkegqbi2KwZbj/si8J9ll1Xjh/
bC2mMSRGHfMi+qEhPr6vZw2Wm6TvbO5JgpZ7Fs+1c1diG0287haeJEFSq4Fa
qtByLGY+bUDYjQRWje0s/SUubHnBW6qvKwmun4o3l6tfYPkfmnNudSZBuNDM
3wN7frPGhBSyNZ2IcR/brYqxM6xDr2wHkx1I8GUrKs449IPV4h1K+3uAGF/R
n1BlMcHaSS0+6mBPAosY13bF0mFWxeev2a/2EPV0hfZyTfMAS/US/3eKLQnk
1lqJhob0srI0teQirElgdCLVQ9qzmyU+6uoybEmCaMzt8dqn7awrKfE5JuYk
OF3xQ9/85SfWXpVf3l9MiP4NW2J9uvWBJfdyLzpmRNTbmcaeZW1NrJldFWt+
7SDOr7uvzXrna1ZVn1R7uD4JDNEnGXHnWtYh3p5Td3ASeLcLIVrsC9acYtbq
V9uJ++eIoqxj3WNWwzOeVsttJDCjyjd02D9iJZgfzfqqQfTX+FnO1rGHLHUv
Be0FNRLk+R9WlejNZnHxRK68qkICA7cJUpdjFqs5buzjBmUSOLe6jbV1pbHc
yh+e3CZHxOvFNdFUHM/SNFm7vY5C1BN6Z3xBKZbF2+W1wpZEArbTBCXjaDQr
a0kjzXsjCUjZa1IWNMNZHTufvSsQIUEJXT1P7Jwvy/RzvTp1SRZENHN7k3dY
syRdFZceLcgCy2StlTTdgjX8O/KN7pws9Fz1XbrRb8QK22jh7PBTFtyL17RE
9euwKo98ik8ekwXNP8MDmVWqLPrUt99r22Uh/0hy39lDq1gCQnMv/hbJgn0I
XfCx3lNtpVGXzqSHstD0ejCY16xU26j246/N+bIQ65OX/dKkSPtiQAHD7Z4s
OKrVPW+YuKs9O3Q4qzVVFqxoQSfrBG5of4P68MJIWbj9bLW7edhR7VLveDNH
Z1m4FSmUSMtdo23fyuioWS8LTpF3/9pM62qVtHXV8/RLg10o+G1ii2p2qBn9
rM7fBIuRPs8HMs22uFJfLXke2AhRCoF+rCxFptROJaoTWQq877WGca3oVnYU
0rQIZG+AJ2F7s0aCW6gCp21sL2ZIQHTq2T2koEOSvSsd/JqPrYcK/H0izwsu
Aclt/r6868WB6/8/gwJb/V3erPvP7cID8fwJov+Z+Sg9Jm2nyH8uDjbN9hMQ
/s8RI9uCJ0qF/rMf/4x7raTAf358JSZGsYDvPzMkBmessv45P2f7vnOJ/5xV
3Ud6E/LP0X81Sk7a/fMxry+fC5dW/2fJfWSprdb/HD/kF3zI8J/X+r3pj2D9
M+9N3/w2uX+efluHnZ1f9Z/f6pw4XHn3nw3fvawZuPXPVQfXKQpc/+en557/
OHj2n3NKhUKXzP+ZpO88JK//z7c/lJvu0vznWLbjukzyPwucf+L/ev0/X16z
pvsH/z8vT3bQleT+52CF0my9Xyv/8/8AH6ojvA==
            
            "]]}}, {}, {}}, {{}, {{}, {}, 
          {RGBColor[0.24, 0.3531726744018182, 0.6], PointSize[0.01], 
           Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/8AOudbX
gTve2TMtXHnY7rveAa7riwtsud7b+5SdWbgoBMF3q43rYNuke0AepFzurb33
3d2CWfy6BwptQSre2vtbF/w7m6NzoFoEZMMb+4g9UUcNT2kfANnm/vCV/SLj
DcVT1bUPLCkAaXhhb7v2YsDPFi04P2CfoHjsI02o+U/tf51qfHjAXhOq/5H9
kz0c61Tmahw4/FUjpv/QVXvpGRcqOn6pH3gTCPLBRXu+KQxub8Jh/IP2tt7y
IgFb1aD8jfY3TbzvbxZC8HdX164VL1CFuneKvaRBRlX1WZUDDFDwM0/P/b4W
gv+wK0zEuUMZzm9dvvvhsqdKcH7cX531XM4Ifh7vnJq8BYpwvtnib56X/irA
+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L/w49k4HzF/zvn9m1UBrO
BwAckL5B
            "]]}}, {}, {}, {{}, {}}}}},
      PlotLegends -> Automatic,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-18.4206804291575, 0},
      BaseStyle->30,
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{
        FormBox["\"NHEJ\"", TraditionalForm], 
        FormBox[
        "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm]},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
         Automatic, Automatic}, {{{-16.11809565095832, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-20.72326583694641, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{-16.11809565095832, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-20.72326583694641, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}}],
      FrameTicksStyle->30,
      GridLines->Automatic,
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->800,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{0, 1},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], Automatic}], 
     TemplateBox[{
      "\"1000\"","\"5000\"","\"10000\"","\"25000\"","\"50000\"","\"100000\""},
      
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"N\"", TraditionalForm], TraditionalForm, Editable -> 
                True], {
                Directive[
                 Thickness[Large], 
                 GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         Directive[
          Thickness[Large], 
          GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
        Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.1960695736042402], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.2941043604063603]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.2941043604063603]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.2941043604063603], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.1648000000000001, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24720000000000014, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.2952621124003028], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.4428931686004542]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.36467577519939387`, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.5470136627990908, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.4, 0.22461366279909056`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.6, 0.33692049419863584]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.6, 0.33692049419863584`], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.23544844960121214`, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.3531726744018182, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.3531726744018182, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.3531726744018182, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.37551056200151484`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.5632658430022722]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.5632658430022722]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.5632658430022722], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.2844273255981813, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.42664098839727194, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.42664098839727194`, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.42664098839727194`, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.1756347868021214, 0.4, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.2634521802031821, 0.6, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2634521802031821, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.2634521802031821, 0.6, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.3156968992024241, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.47354534880363613, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.47354534880363613`, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.47354534880363613`, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.3442409883972732, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.5163614825959097, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5163614825959097, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5163614825959097, 0.24, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.20417887599697054`, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.3062683139954558, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.3062683139954558, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.3062683139954558, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.25588323640333216`, 0.4, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.3838248546049982, 0.6, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3838248546049982, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.3838248546049982, 0.6, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.3959453488036374, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.5939180232054561, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.5939180232054561, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.5939180232054561, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.26399253879606255`, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.39598880819409377, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.39598880819409377`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.39598880819409377`, 0.24, 0.6], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", "20"}], "]"}]}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.683309981247534*^9, 3.6833196226368427`*^9, {3.683320302677781*^9, 
   3.683320339322033*^9}, 3.683320374513915*^9, {3.683320406749206*^9, 
   3.683320417796981*^9}, {3.683320450623795*^9, 3.683320458599041*^9}, 
   3.683399786768236*^9, {3.6833998414613953`*^9, 3.6833998664534903`*^9}, {
   3.683401371839611*^9, 3.683401381409481*^9}, 3.683401425515087*^9, {
   3.683401475287101*^9, 3.683401589050007*^9}, 3.6834016305865593`*^9, {
   3.683401679535369*^9, 3.68340168437558*^9}, {3.6834017189677877`*^9, 
   3.683401804202456*^9}, {3.683401873649777*^9, 3.6834019415233727`*^9}, 
   3.683402357237966*^9, 3.683402414839511*^9, 3.683404127258224*^9, 
   3.6834043914746437`*^9, 3.683404683840962*^9, 3.694164304123733*^9, {
   3.694229947229665*^9, 3.694229984804885*^9}, 3.6942300382946997`*^9, 
   3.694230244582837*^9, 3.694432663604786*^9, 3.6946937545274343`*^9, 
   3.6947773573800297`*^9, {3.694777425646763*^9, 3.694777450299719*^9}, 
   3.694778409275042*^9, 3.694993142733162*^9, 3.694993758429678*^9}],

Cell[BoxData["\<\"NHEJLog.png\"\>"], "Output",
 CellChangeTimes->{
  3.683309981247534*^9, 3.6833196226368427`*^9, {3.683320302677781*^9, 
   3.683320339322033*^9}, 3.683320374513915*^9, {3.683320406749206*^9, 
   3.683320417796981*^9}, {3.683320450623795*^9, 3.683320458599041*^9}, 
   3.683399786768236*^9, {3.6833998414613953`*^9, 3.6833998664534903`*^9}, {
   3.683401371839611*^9, 3.683401381409481*^9}, 3.683401425515087*^9, {
   3.683401475287101*^9, 3.683401589050007*^9}, 3.6834016305865593`*^9, {
   3.683401679535369*^9, 3.68340168437558*^9}, {3.6834017189677877`*^9, 
   3.683401804202456*^9}, {3.683401873649777*^9, 3.6834019415233727`*^9}, 
   3.683402357237966*^9, 3.683402414839511*^9, 3.683404127258224*^9, 
   3.6834043914746437`*^9, 3.683404683840962*^9, 3.694164304123733*^9, {
   3.694229947229665*^9, 3.694229984804885*^9}, 3.6942300382946997`*^9, 
   3.694230244582837*^9, 3.694432663604786*^9, 3.6946937545274343`*^9, 
   3.6947773573800297`*^9, {3.694777425646763*^9, 3.694777450299719*^9}, 
   3.694778409275042*^9, 3.694993142733162*^9, 3.69499375909892*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lin", "Subsubsection",
 CellChangeTimes->{{3.683290068376093*^9, 3.683290071528596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"functions", "=", 
   RowBox[{"fits", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listLineProbabilitiesPlots", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thicknessLow", "]"}], ",", "i"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "colors"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "frame"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "frameTicksStyle"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<NHEJ\>\"", ",", 
        "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(P\), \
\((extermination)\)]\)\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"FrameStyle", "\[Rule]", "frameStyle"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", "gridLinesStyle"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "aspectRatio"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitProbabilitiesPlots", "=", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"functions", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", ".01"}], "}"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "thicknessHigh", "]"}], ",", 
           RowBox[{"colors", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"data", "//", "Length"}]}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"Show", "[", "#", "]"}], "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"linFits", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"listLineProbabilitiesPlots", ",", "fitProbabilitiesPlots"}], 
     "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<NHEJLinear.eps\>\"", ",", "linFits", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"functions", "=", 
     RowBox[{"fits", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"fitsPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"functions", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", ".001"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thicknessHigh", "]"}], ",", "colors"}], 
         "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"fitsAndPoints", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"listLineProbabilitiesPlots", ",", "fitsPlot"}], "}"}], 
      "]"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.683040458451652*^9, 3.68304046323837*^9}, {
   3.6830405116926622`*^9, 3.6830406061938477`*^9}, {3.6830406475186462`*^9, 
   3.683040764705077*^9}, {3.683040822086425*^9, 3.6830408241052*^9}, {
   3.6830408896196127`*^9, 3.683040938429751*^9}, {3.6832891259872847`*^9, 
   3.683289324966419*^9}, {3.683289386101541*^9, 3.683289447777945*^9}, {
   3.68328958606822*^9, 3.6832896938034897`*^9}, {3.683289732454377*^9, 
   3.6832898011393023`*^9}, {3.6832898407184143`*^9, 3.683289953538587*^9}, {
   3.6832900783700523`*^9, 3.6832900955695047`*^9}, {3.683290134630295*^9, 
   3.683290190753317*^9}, {3.6832903687456207`*^9, 3.68329038914192*^9}, {
   3.6832964226109543`*^9, 3.683296443945176*^9}, {3.683300810614674*^9, 
   3.683300811221867*^9}, {3.683306853880156*^9, 3.683306903439151*^9}, {
   3.683307087402128*^9, 3.683307117534184*^9}, {3.683307182807588*^9, 
   3.683307290454123*^9}, 3.683307322636756*^9, {3.683307586545405*^9, 
   3.683307611286193*^9}, {3.6833076612432127`*^9, 3.683307678467977*^9}, {
   3.68339988547672*^9, 3.683399888076646*^9}, {3.6834023703439007`*^9, 
   3.683402375629871*^9}, {3.683402466960752*^9, 3.6834024715600023`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
      0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Ph3Ozy/c8vdy9gI4n+33O5+A/mVw/iy2qvPO
/9bZrXN/WCWy7r19z7fX8apeWxH2fzbK6LTfC+erqpwsdxc/Auc/mZC07+vM
03Yx/Ye+asS8t/fpuKm98esluLyh9UpHOZ5bcHlXL++nGU8ewvkvjf3/r5ny
wo7r+uICW6739n4brs9rfvTBThTsoHf2WVdmp8YbfYfLT76TK+1+7z9cnv17
1jKWJ6z2MP6izaf/vhPis9cEW/DGfvt3a+PaFSL2HiDvub+0f60cuLc4UcZ+
1kwQAPJnb925s07ZfgLIOf2v7Bfu11mQcELLHmzd9cf2lWujdXelGtm3vg7c
Idf62D5AadLtUDdLe4j/HtgvWfH1cU+Moz3Egbfsr85wzGe/5Q6176L9n5Uf
L/kmBdgvARm3+IA9AEGI0sU=
       "]]}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
      0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Pt1unfvDKpF17+3zC7f8vZy9AM5n+/3OJ6B/
GZw/i63qvPO/dXYx/Ye+asS8t+/59jpe1Wsrwv7PRhmd9nvtuK4vLrDlem+v
qnKy3F38CFz9kwlJ+77OPG23Q671deCOd/Y+HTe1N369ZCcKtuCdvaH1Skc5
nlt2Z8+AwBt7Vy/vpxlPHsLlXxr7/18z5YVdtQhI4I2934br85offbDTBFvw
xj7ryuzUeKPvdkFgC17YT76TK+1+779dehoIPLNn/561jOUJq708yHq5p/aL
Np/++06Izx7s3OuP7bd/tzauXSFiP2smCDy0f60cuLc4UQaq/qr969lbd+6s
U7aHuP+c/cL9OgsSTmjZQ9yzxb5ybbTurlQjqP6V9gFKk26HullC5Vvsl6z4
+rgnxtEeFoNXZzjms99yh8v/Wfnxkm9SAFweAECB4Z0=
       "]]}, 
     {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
      0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXbr3B9Wiax7
b//hH8dZ1tBOuPzxh4VCi9MmwvlFLlk7Hj6fbhfTf+irRsx7+/zCLX8vZy+A
62f7/c4noH8ZXH4WW9V553/r7LiuLy6w5Xpv3/Ptdbyq11a4+refjTI67ffa
paeBwDt7VZWT5e7iR+wOA3X3H3pr/2RC0r6vM0/D5X06bmpv/HoJzje0Xuko
x3PLDmSa+8NX9q5e3k8znjyE818a+/9fM+WFnSjYwmf2fhuuz2t+9AHqnuf2
WVdmp8YbfbeTb30duEPuqf3kO7nS7vf+24Glrz+2Z/+etYzlCas9xD/37Rdt
Pv33nRCfPUT+sv3279bGtStE7GfNBIGT9q+VA/cWJ8rYQ8zfbv969tadO+uU
7d8ATW99vdF+4X6dBQkntOyrQc6rmmJfuTZad1eqEZwfoDTpdqibpT0sxpas
+Pq4J8YRzr86wzGf/ZY7nP9n5cdLvkkBcD4AceDcng==
       "]]}, 
     {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
      0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZMd
TP7DP46zrKGdcP7xh4VCi9MmwvlFLlk7Hj6fDtefX7jl7+XsBXZc1xcX2HK9
t2f7/c4noH+ZXXoaCLyzn8VWdd753zo4v+fb63hVr61w9W8/G2V02u+1K7QF
iby1V1U5We4ufsTu7BkQeGP/ZELSvq8zT9u1vg7cIdf62t6n46b2xq+X7IJA
vMAX9obWKx3leG7B+a5e3k8znjyE6n9i/9LY//+aKS/sZs0EgYf2fhuuz2t+
9MEOrHzHPfusK7NT442+28mDLbhqP/lOrrT7vf92/Ye+asT0X7Jn/561jOUJ
q321CMjHW+wXbT79950Qnz1E/zr77d+tjWtXiEDlW+xfKwfuLU6UsYeF+OvZ
W3furFOG8xfu11mQcEILzq9cG627K9UIzg9QmnQ71M0Szl+y4uvjnhhHOP/q
DMd89lvucP6flR8v+SYFwPkAPhzQCw==
       "]]}, 
     {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
      0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqO67riwtsud7bv/3EcCujoMkO
Jv/hH8dZ1tBOu5j+Q181Yt7bH39YKLQ4baJdehoIvLMvcsna8fD5dLj+/MIt
fy9nL4Dz2X6/8wnoXwbnz2KrOu/8b52dJtjAN/Y9317Hq3pttZsAMr7/lf3b
z0YZnfZ77SAaXtmrqpwsdxc/YvewSmSd+8NX9k8mJO37OvO03Q651teBO57Z
+3Tc1N749ZLd2TMg8MTe0HqloxzPLbtZM0Hgob2rl/fTjCcP7USBuqtE7tm/
NPb/v2bKC6h7rtv7bbg+r/nRB6h5++yzrsxOjTf6DnXfHvvJd3Kl3e/9h6rf
bs/+PWsZyxNW+2qQc6qm2C/afPrvOyE+e1iIbv9ubVy7QgTOf60cuLc4UQbB
n7115846ZTh/4X6dBQkntOD8yrXRurtSjeD8AKVJt0PdLOH8JSu+Pu6JcYTz
r85wzGe/5Q7n/1n58ZJvUgCcDwCxqclo
       "]]}, 
     {RGBColor[0.24, 0.3531726744018182, 0.6], PointSize[
      0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZPd
DrnW14E73tl/+MdxljW0047r+uICW6739scfFgotTpsI5xe5ZO14+Hy6nTxI
udxb+/zCLX8vZy+wK7QFqXhrz/b7nU9A/zK7ahGQDW/sZ7FVnXf+t84OZJv7
w1f2Pd9ex6t6bbVbUgDS8ML+7WejjE77vXC+qsrJcnfxI1Dzn9o/mZC07+vM
01D9j+x9Om5qb/x6ye7wV42Y/kNX7Q2tVzrK8dyyexMI8sFFe1cv76cZTx5C
+QftXxr7/18z5QWUv9Heb8P1ec2PPsD5WVdmp8YbfYe6d4r95Du50u73/tvB
Qoz9e9Yylies9jD+os2n/74T4oPzt3+3Nq5dIQLnv1YO3FucKIPgz966c2ed
Mpy/cL/OgoQTWnB+5dpo3V2pRnB+gNKk26FulnD+khVfH/fEOML5V2c45rPf
cofz/6z8eMk3KQDOBwCnqscq
       "]]}}, {}, {}, {{}, {}}}, {{{{}, {}, 
      {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], Opacity[
       1.], LineBox[CompressedData["
1:eJwVV3c4F94XVhqShjIipeGrSEa0pPuq7JC9smXvvcfn45OQSlZWEpJkZWVU
ZikNeySFysxIlMj4+f1z73Oe95x7zz3Pc9573v2mjmrma+no6LRXl//vJ6X+
TPgyjZ/10rx0fGVlCttOViY8rXhDxL59PZnZMoUDl+uCAis+krgjcpcj06cg
YC/rZlYxSppkjgYJyE1BxGOTg2bFPEnxDa31jplEkc+YjXLFJvCp/ZxgPT2B
2UW9UYUKDjyu9yVf8scwqZPAsyeUE8e2MJ88GTaGkeIuoynN3chvwZHXpmP4
ZKfRGT3NhWMNYbWRbGMwmcw0cWDZB6808R9FQaOQM0xVfnrxII46lEYuGY6A
lUQflq/gA6VRA5HnhsC/yUquh48fJzJ0uVL3DkGyXcLKNoEfD6oYWof+DcLG
ZujhDa8jsK+65sj+dBDVcacPtZ44CrcMXb5FoUGUzk1F5eoK48D+zf/Cj3yH
qUrc7ROdongfKiQULfsVEyVB+1e2iKGIIZdzgP8rvHbbPmmQFgOns8AO/a1f
cWMILTolYsg2q2Ps7hhAmd/odt+Y4/gp4U7ptxjA1kcSkVVqJ6GctnZgLrIf
5Wu+3ZRrEkdc3azi9IYvmNW6/tKQ/gyOqpZE/ej5DOEc0UW3k2fA8q3XlDf/
M7K0aNb3750BZ67DYX2dz4h//J/UgqMEOslh5he5vfDStJp/vJ2AVzdPd/OV
T0hq//Nk4yNJVB9sSrJY7MapFYX3O+pW7R7KRH1XNzr57o3s+SyJtK6iGZ2i
buwIlOUWYz6HYnb2b/tsuxHOFx9h7H0OvvJB7w997oJPwGnLcvnzMBBrQlNj
J/QO+3HZjl1AmUC2cUhjO1I5Yxxn6KXgvedEZXpOO4aYcmp990hhA/MXxvGb
7XCe/mQVoSKFcKPPUYvq7QitOFOSWyqFnnLLRLb+NpQq/lP6SZXGQuRNhYWV
Vuxw9gl03y0L3u3SLlP6LdAxi2pdEpNFfYXJuYULLUjRzP4vRFkWEvzGPw8f
aQGfeM/bOIoscnwY9k3PN0OSXnxX2bAsLO1VxQ4lNMMhdr5goUgO633k9y9V
NqGx3OtroKICHj1n/MxG9x5aO/eeOGalgPrJwbyB1nf4alcX9j1YAbtut87/
evAOC9xbReQrFfC+kUtqWPEd+ELSA3fwX0RekG4zY8pbhKp94HqwURGC6Zqc
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
WVHg/AUS9DtbcsCHhoLiYf8DHy+Q/wFM57Py
        "]]}}, {}, {}}, {{{}, {}, 
      {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], Opacity[
       1.], LineBox[CompressedData["
1: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
thwaBzd+FJ9bJpdR/B9M4lOC
        "]]}}, {}, {}}, {{{}, {}, 
      {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], Opacity[
       1.], LineBox[CompressedData["
1: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
9YY=
        "]]}}, {}, {}}, {{{}, {}, 
      {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], Opacity[
       1.], LineBox[CompressedData["
1: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
gofnImJYSwYFzP8ARUXQ/A==
        "]]}}, {}, {}}, {{{}, {}, 
      {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], Opacity[
       1.], LineBox[CompressedData["
1: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
+D99rwci
        "]]}}, {}, {}}, {{{}, {}, 
      {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[0.0075], Opacity[
       1.], LineBox[CompressedData["
1:eJxF1Hk01AsbB3BUZB/NGNuMsRsq0TbK/H6PV7JNV1NMZC415BaNnbGMfSnb
KCoZeV23btx0LZXlmqREcnuFRKRSyPqSyNLi6t73nPfM7znnOc/5/PGc8zz/
fHW9gw77SklISGT90/+bNNvlWb7CDJKlGvHq5vc5UKbdFdaL/kTtT3ZzmcnD
oMduSUwQvUTfjE1ctzF5Dl4C18JnjFFU4VBZEvlzK2wJsA/3EU2hwtBemesL
dRBnRC6LIXxEC7g7aZ9JN+BEPvFiC+MTuj9juFDIvwJO0rgkhZRldJtwpTIK
nwMWPNlAlugLipbhCWvhiaA+LsUunl9FPzztEJ6RCoXvpmvXwggS8Nt1h9Hc
Wh9YGInRVK+WBFZCvXx5LgvGC1fONzLWwWw+vrKy0B5eHg6X4Uysh8W2oOXX
vXugQ24+bkOKNHzKNOYN2G6BBw8DFm9ob4Rv3S5Pa+a04U7MtL+zSBYOGPVo
J87ioHT7yeEFljxwsg4VnzwjBYXTo26X5xXAcntTzvv9i6jg6vFOK4ESxOqz
lgu3jaPWFYF6wQQcvGw2f3rGfgDdK1vhaTOCA8WJcsf1eU/Qnb7/LSBUq0CQ
246lAfw91KzZpHc8bhNY3E4tQnqqUGPyKeUGBh7qeEuXw/1+QXWiS52yNAjA
363LUlK6gGr2vU/znCCA1mqjvPtgKkqw0G/eVqsKkYde++N6eKiSgLMqmUIE
KznuZeaXU+jGqZ9pvUw1YB93r73oykYl9w+Flmqrw5j1KPpo8gf0awmpMmpG
HQLru4pLPK3RxVWPKSeRBgSc23pvcdIC/eAuNCCna8LRuGue+UJ9dLKm/9gc
Swu+3Zy5KBemio7giFea9UnArDSN3xwtg77iur64ME+CkE/3rc2rvyC97Xkq
P90ng+/L5f5a0gzSafDsgKVAG+pbmyrbW4aQ9kTldDk2BQRmzbmRfd0I50Mp
J5CgA52itVRN7kPEi2SX4MbXgb/U03RJJjWIh9NYkfWIDnxdOmijhStF3KJS
RSaOuhCyyKYpGRYgrqX6A5uqdSGr3Fqawc1EDvU+XPpG1APyj3qh56djEWcp
b/xYnB7ENz15o3w9CGGYS1p0vteDNzRQamRyEAevEud6hj4QNsj/KvHpMLI/
G7glt/Xh5sfEwcZGW8RGNJSRoWEAz+OFyuW3diPoZFxZaKIBDD2pz3/VR0Ws
iORH7AkDeIze2vV4qxZiads4YutsCEca3wU6NykiO0PZEma1hrBBt4t1wk4C
sSj5SlYjGQG+Xt/sbNc83axTaCWRYgR2nOS8h3Gj9M2rlkenpozg8hWXgnzX
PjrVdIDXwzSG55SqkX63x3RD98iLd+uNQf7HnqL6rAa63hni7V+1qdDNYe7q
WLxJp9TUdgnSqKB233RGs6CYThpxneXNUIH75bV+7r3zdFX0AtVRZAJ6JaLc
WIVwuqnsKYdBE1OI71dpl3x1gm7dSz91WmgKLhpVR17cYtH9/cfLBFGbQaP3
D9fH0TT6g/w9xj27t0KhgyBDOu6bVd3KXF7FUXNQxc0dNRxItvJm5ufufrED
VnT4tq51uXsbJEdzHLr2QungKLmVUWXpQY0lnZ7eBy0fVl+gXOquJw1RIwkH
nOAyr2SfV1KNhXfOhG9mEROK0tR4+0KXti6IQuyq+l2g5GD2We8Anql992+W
BHc3YLIe3d1BqzC6NOiur9PuAYkbZonU6EW95bcT0dJ/eQL180RFbnUsRXFC
JST/7nEYf9q1hy/XoHWDTXlFZHtDZLIby3twl3qzk1+z/4IPtFScC7ia2kqg
V2ZUe/3uCwxj6ljqdxkV63PCvvsOJyGwaagwEpetWPY+YV2zjB+g8fLJ+JBW
2cyaqxWXmvyBtuXYlrn1OOkVyVpBvxsXPOb4xmmaQqm2ln/zGvCBoK4hny75
T95S1vEubbwdBBL/rwB23hC/IVjsjIWz5m8uhYjt7xBBjvAJFTt24KmSp02Y
2C7G2lf4m8LFPnUneyxlCHNl9E87X9+NELthjaZ9OpMn9tK9cAUn/0ixg0Rd
f2yyi8L2I/QkNuGjxdY+/Y7BmcfsQsnfPvEgRuw2nH//kWw+dj/9RiLRL1bs
50bvWhVocdj/jGRFF2K82B1mpPmuccx+B3vzdt9JEJvUxy/iOSSKPc6RRWar
MP+Z1fFWXidJbEZvMYeSg3nb6ox55yLmLc3BUoYnksXO8g3WVevAnEFNoKxZ
pIhdkt5CEZRg1mhPCaiXSRW780Q3IVUWc6okuZEpj/nj3jq5aSXMbRWTZSQi
5tALP4wkGWDu8FJzO/AvzMnffNbU92GmFVRfH7PFfPWZ42K8A+Zo29jcWwcx
G5kO/4fohfl129aw0WOYc31iNKs5mFeL8H6OvpifK9tJx3Ixp/+eV+EQiBl1
fOuqGoy5PDnqWmUY5uOUR078CMyqjSoL9pGYn7h7CQnRmBOXyq2HYzD/DfZd
LJE=
        "]]}}, {}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->30,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm], None}, {
     FormBox["\"NHEJ\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0.5], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->15,
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Thickness[Tiny], 
    Dashing[{Small, Small}]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->800,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.0005103055915}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.683309981702841*^9, 3.6833196229198236`*^9, 
  3.68339988878587*^9, 3.683402376638363*^9, 3.6834024723928003`*^9, 
  3.6834041306929007`*^9, 3.683404393668167*^9, 3.6834046852935953`*^9, 
  3.694164307634616*^9, 3.694230245925989*^9, 3.6944326649234047`*^9, 
  3.6946937563029757`*^9, 3.6947773586304607`*^9, 3.694778410606193*^9, 
  3.694993144796413*^9, 3.6949937596181173`*^9}],

Cell[BoxData["\<\"NHEJLinear.eps\"\>"], "Output",
 CellChangeTimes->{3.683309981702841*^9, 3.6833196229198236`*^9, 
  3.68339988878587*^9, 3.683402376638363*^9, 3.6834024723928003`*^9, 
  3.6834041306929007`*^9, 3.683404393668167*^9, 3.6834046852935953`*^9, 
  3.694164307634616*^9, 3.694230245925989*^9, 3.6944326649234047`*^9, 
  3.6946937563029757`*^9, 3.6947773586304607`*^9, 3.694778410606193*^9, 
  3.694993144796413*^9, 3.694993760239279*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grid", "Subsection",
 CellChangeTimes->{{3.683289398875513*^9, 3.68328940317494*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"linFits", ",", "logFits"}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.683289408658018*^9, 3.683289428497558*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Ph3Ozy/c8vdy9gI4n+33O5+A/mVw/iy2qvPO
/9bZrXN/WCWy7r19z7fX8apeWxH2fzbK6LTfC+erqpwsdxc/Auc/mZC07+vM
03Yx/Ye+asS8t/fpuKm98esluLyh9UpHOZ5bcHlXL++nGU8ewvkvjf3/r5ny
wo7r+uICW6739n4brs9rfvTBThTsoHf2WVdmp8YbfYfLT76TK+1+7z9cnv17
1jKWJ6z2MP6izaf/vhPis9cEW/DGfvt3a+PaFSL2HiDvub+0f60cuLc4UcZ+
1kwQAPJnb925s07ZfgLIOf2v7Bfu11mQcELLHmzd9cf2lWujdXelGtm3vg7c
Idf62D5AadLtUDdLe4j/HtgvWfH1cU+Moz3Egbfsr85wzGe/5Q6176L9n5Uf
L/kmBdgvARm3+IA9AEGI0sU=
           "]]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Pt1unfvDKpF17+3zC7f8vZy9AM5n+/3OJ6B/
GZw/i63qvPO/dXYx/Ye+asS8t+/59jpe1Wsrwv7PRhmd9nvtuK4vLrDlem+v
qnKy3F38CFz9kwlJ+77OPG23Q671deCOd/Y+HTe1N369ZCcKtuCdvaH1Skc5
nlt2Z8+AwBt7Vy/vpxlPHsLlXxr7/18z5YVdtQhI4I2934br85offbDTBFvw
xj7ryuzUeKPvdkFgC17YT76TK+1+779dehoIPLNn/561jOUJq708yHq5p/aL
Np/++06Izx7s3OuP7bd/tzauXSFiP2smCDy0f60cuLc4UQaq/qr969lbd+6s
U7aHuP+c/cL9OgsSTmjZQ9yzxb5ybbTurlQjqP6V9gFKk26HullC5Vvsl6z4
+rgnxtEeFoNXZzjms99yh8v/Wfnxkm9SAFweAECB4Z0=
           "]]}, 
         {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXbr3B9Wiax7
b//hH8dZ1tBOuPzxh4VCi9MmwvlFLlk7Hj6fbhfTf+irRsx7+/zCLX8vZy+A
62f7/c4noH8ZXH4WW9V553/r7LiuLy6w5Xpv3/Ptdbyq11a4+refjTI67ffa
paeBwDt7VZWT5e7iR+wOA3X3H3pr/2RC0r6vM0/D5X06bmpv/HoJzje0Xuko
x3PLDmSa+8NX9q5e3k8znjyE818a+/9fM+WFnSjYwmf2fhuuz2t+9AHqnuf2
WVdmp8YbfbeTb30duEPuqf3kO7nS7vf+24Glrz+2Z/+etYzlCas9xD/37Rdt
Pv33nRCfPUT+sv3279bGtStE7GfNBIGT9q+VA/cWJ8rYQ8zfbv969tadO+uU
7d8ATW99vdF+4X6dBQkntOyrQc6rmmJfuTZad1eqEZwfoDTpdqibpT0sxpas
+Pq4J8YRzr86wzGf/ZY7nP9n5cdLvkkBcD4AceDcng==
           "]]}, 
         {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZMd
TP7DP46zrKGdcP7xh4VCi9MmwvlFLlk7Hj6fDtefX7jl7+XsBXZc1xcX2HK9
t2f7/c4noH+ZXXoaCLyzn8VWdd753zo4v+fb63hVr61w9W8/G2V02u+1K7QF
iby1V1U5We4ufsTu7BkQeGP/ZELSvq8zT9u1vg7cIdf62t6n46b2xq+X7IJA
vMAX9obWKx3leG7B+a5e3k8znjyE6n9i/9LY//+aKS/sZs0EgYf2fhuuz2t+
9MEOrHzHPfusK7NT442+28mDLbhqP/lOrrT7vf92/Ye+asT0X7Jn/561jOUJ
q321CMjHW+wXbT79950Qnz1E/zr77d+tjWtXiEDlW+xfKwfuLU6UsYeF+OvZ
W3furFOG8xfu11mQcEILzq9cG627K9UIzg9QmnQ71M0Szl+y4uvjnhhHOP/q
DMd89lvucP6flR8v+SYFwPkAPhzQCw==
           "]]}, 
         {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqO67riwtsud7bv/3EcCujoMkO
Jv/hH8dZ1tBOu5j+Q181Yt7bH39YKLQ4baJdehoIvLMvcsna8fD5dLj+/MIt
fy9nL4Dz2X6/8wnoXwbnz2KrOu/8b52dJtjAN/Y9317Hq3pttZsAMr7/lf3b
z0YZnfZ77SAaXtmrqpwsdxc/YvewSmSd+8NX9k8mJO37OvO03Q651teBO57Z
+3Tc1N749ZLd2TMg8MTe0HqloxzPLbtZM0Hgob2rl/fTjCcP7USBuqtE7tm/
NPb/v2bKC6h7rtv7bbg+r/nRB6h5++yzrsxOjTf6DnXfHvvJd3Kl3e/9h6rf
bs/+PWsZyxNW+2qQc6qm2C/afPrvOyE+e1iIbv9ubVy7QgTOf60cuLc4UQbB
n7115846ZTh/4X6dBQkntOD8yrXRurtSjeD8AKVJt0PdLOH8JSu+Pu6JcYTz
r85wzGe/5Q7n/1n58ZJvUgCcDwCxqclo
           "]]}, 
         {RGBColor[0.24, 0.3531726744018182, 0.6], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZPd
DrnW14E73tl/+MdxljW0047r+uICW6739scfFgotTpsI5xe5ZO14+Hy6nTxI
udxb+/zCLX8vZy+wK7QFqXhrz/b7nU9A/zK7ahGQDW/sZ7FVnXf+t84OZJv7
w1f2Pd9ex6t6bbVbUgDS8ML+7WejjE77vXC+qsrJcnfxI1Dzn9o/mZC07+vM
01D9j+x9Om5qb/x6ye7wV42Y/kNX7Q2tVzrK8dyyexMI8sFFe1cv76cZTx5C
+QftXxr7/18z5QWUv9Heb8P1ec2PPsD5WVdmp8YbfYe6d4r95Du50u73/tvB
Qoz9e9Yylies9jD+os2n/74T4oPzt3+3Nq5dIQLnv1YO3FucKIPgz966c2ed
Mpy/cL/OgoQTWnB+5dpo3V2pRnB+gNKk26FulnD+khVfH/fEOML5V2c45rPf
cofz/6z8eMk3KQDOBwCnqscq
           "]]}}, {}, {}, {{}, {}}}, {{{{}, {}, 
          {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVV3c4F94XVhqShjIipeGrSEa0pPuq7JC9smXvvcfn45OQSlZWEpJkZWVU
ZikNeySFysxIlMj4+f1z73Oe95x7zz3Pc9573v2mjmrma+no6LRXl//vJ6X+
TPgyjZ/10rx0fGVlCttOViY8rXhDxL59PZnZMoUDl+uCAis+krgjcpcj06cg
YC/rZlYxSppkjgYJyE1BxGOTg2bFPEnxDa31jplEkc+YjXLFJvCp/ZxgPT2B
2UW9UYUKDjyu9yVf8scwqZPAsyeUE8e2MJ88GTaGkeIuoynN3chvwZHXpmP4
ZKfRGT3NhWMNYbWRbGMwmcw0cWDZB6808R9FQaOQM0xVfnrxII46lEYuGY6A
lUQflq/gA6VRA5HnhsC/yUquh48fJzJ0uVL3DkGyXcLKNoEfD6oYWof+DcLG
ZujhDa8jsK+65sj+dBDVcacPtZ44CrcMXb5FoUGUzk1F5eoK48D+zf/Cj3yH
qUrc7ROdongfKiQULfsVEyVB+1e2iKGIIZdzgP8rvHbbPmmQFgOns8AO/a1f
cWMILTolYsg2q2Ps7hhAmd/odt+Y4/gp4U7ptxjA1kcSkVVqJ6GctnZgLrIf
5Wu+3ZRrEkdc3azi9IYvmNW6/tKQ/gyOqpZE/ej5DOEc0UW3k2fA8q3XlDf/
M7K0aNb3750BZ67DYX2dz4h//J/UgqMEOslh5he5vfDStJp/vJ2AVzdPd/OV
T0hq//Nk4yNJVB9sSrJY7MapFYX3O+pW7R7KRH1XNzr57o3s+SyJtK6iGZ2i
buwIlOUWYz6HYnb2b/tsuxHOFx9h7H0OvvJB7w997oJPwGnLcvnzMBBrQlNj
J/QO+3HZjl1AmUC2cUhjO1I5Yxxn6KXgvedEZXpOO4aYcmp990hhA/MXxvGb
7XCe/mQVoSKFcKPPUYvq7QitOFOSWyqFnnLLRLb+NpQq/lP6SZXGQuRNhYWV
Vuxw9gl03y0L3u3SLlP6LdAxi2pdEpNFfYXJuYULLUjRzP4vRFkWEvzGPw8f
aQGfeM/bOIoscnwY9k3PN0OSXnxX2bAsLO1VxQ4lNMMhdr5goUgO633k9y9V
NqGx3OtroKICHj1n/MxG9x5aO/eeOGalgPrJwbyB1nf4alcX9j1YAbtut87/
evAOC9xbReQrFfC+kUtqWPEd+ELSA3fwX0RekG4zY8pbhKp94HqwURGC6Zqc
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
WVHg/AUS9DtbcsCHhoLiYf8DHy+Q/wFM57Py
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
thwaBzd+FJ9bJpdR/B9M4lOC
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
9YY=
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
gofnImJYSwYFzP8ARUXQ/A==
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
+D99rwci
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJxF1Hk01AsbB3BUZB/NGNuMsRsq0TbK/H6PV7JNV1NMZC415BaNnbGMfSnb
KCoZeV23btx0LZXlmqREcnuFRKRSyPqSyNLi6t73nPfM7znnOc/5/PGc8zz/
fHW9gw77SklISGT90/+bNNvlWb7CDJKlGvHq5vc5UKbdFdaL/kTtT3ZzmcnD
oMduSUwQvUTfjE1ctzF5Dl4C18JnjFFU4VBZEvlzK2wJsA/3EU2hwtBemesL
dRBnRC6LIXxEC7g7aZ9JN+BEPvFiC+MTuj9juFDIvwJO0rgkhZRldJtwpTIK
nwMWPNlAlugLipbhCWvhiaA+LsUunl9FPzztEJ6RCoXvpmvXwggS8Nt1h9Hc
Wh9YGInRVK+WBFZCvXx5LgvGC1fONzLWwWw+vrKy0B5eHg6X4Uysh8W2oOXX
vXugQ24+bkOKNHzKNOYN2G6BBw8DFm9ob4Rv3S5Pa+a04U7MtL+zSBYOGPVo
J87ioHT7yeEFljxwsg4VnzwjBYXTo26X5xXAcntTzvv9i6jg6vFOK4ESxOqz
lgu3jaPWFYF6wQQcvGw2f3rGfgDdK1vhaTOCA8WJcsf1eU/Qnb7/LSBUq0CQ
246lAfw91KzZpHc8bhNY3E4tQnqqUGPyKeUGBh7qeEuXw/1+QXWiS52yNAjA
363LUlK6gGr2vU/znCCA1mqjvPtgKkqw0G/eVqsKkYde++N6eKiSgLMqmUIE
KznuZeaXU+jGqZ9pvUw1YB93r73oykYl9w+Flmqrw5j1KPpo8gf0awmpMmpG
HQLru4pLPK3RxVWPKSeRBgSc23pvcdIC/eAuNCCna8LRuGue+UJ9dLKm/9gc
Swu+3Zy5KBemio7giFea9UnArDSN3xwtg77iur64ME+CkE/3rc2rvyC97Xkq
P90ng+/L5f5a0gzSafDsgKVAG+pbmyrbW4aQ9kTldDk2BQRmzbmRfd0I50Mp
J5CgA52itVRN7kPEi2SX4MbXgb/U03RJJjWIh9NYkfWIDnxdOmijhStF3KJS
RSaOuhCyyKYpGRYgrqX6A5uqdSGr3Fqawc1EDvU+XPpG1APyj3qh56djEWcp
b/xYnB7ENz15o3w9CGGYS1p0vteDNzRQamRyEAevEud6hj4QNsj/KvHpMLI/
G7glt/Xh5sfEwcZGW8RGNJSRoWEAz+OFyuW3diPoZFxZaKIBDD2pz3/VR0Ws
iORH7AkDeIze2vV4qxZiads4YutsCEca3wU6NykiO0PZEma1hrBBt4t1wk4C
sSj5SlYjGQG+Xt/sbNc83axTaCWRYgR2nOS8h3Gj9M2rlkenpozg8hWXgnzX
PjrVdIDXwzSG55SqkX63x3RD98iLd+uNQf7HnqL6rAa63hni7V+1qdDNYe7q
WLxJp9TUdgnSqKB233RGs6CYThpxneXNUIH75bV+7r3zdFX0AtVRZAJ6JaLc
WIVwuqnsKYdBE1OI71dpl3x1gm7dSz91WmgKLhpVR17cYtH9/cfLBFGbQaP3
D9fH0TT6g/w9xj27t0KhgyBDOu6bVd3KXF7FUXNQxc0dNRxItvJm5ufufrED
VnT4tq51uXsbJEdzHLr2QungKLmVUWXpQY0lnZ7eBy0fVl+gXOquJw1RIwkH
nOAyr2SfV1KNhXfOhG9mEROK0tR4+0KXti6IQuyq+l2g5GD2We8Anql992+W
BHc3YLIe3d1BqzC6NOiur9PuAYkbZonU6EW95bcT0dJ/eQL180RFbnUsRXFC
JST/7nEYf9q1hy/XoHWDTXlFZHtDZLIby3twl3qzk1+z/4IPtFScC7ia2kqg
V2ZUe/3uCwxj6ljqdxkV63PCvvsOJyGwaagwEpetWPY+YV2zjB+g8fLJ+JBW
2cyaqxWXmvyBtuXYlrn1OOkVyVpBvxsXPOb4xmmaQqm2ln/zGvCBoK4hny75
T95S1vEubbwdBBL/rwB23hC/IVjsjIWz5m8uhYjt7xBBjvAJFTt24KmSp02Y
2C7G2lf4m8LFPnUneyxlCHNl9E87X9+NELthjaZ9OpMn9tK9cAUn/0ixg0Rd
f2yyi8L2I/QkNuGjxdY+/Y7BmcfsQsnfPvEgRuw2nH//kWw+dj/9RiLRL1bs
50bvWhVocdj/jGRFF2K82B1mpPmuccx+B3vzdt9JEJvUxy/iOSSKPc6RRWar
MP+Z1fFWXidJbEZvMYeSg3nb6ox55yLmLc3BUoYnksXO8g3WVevAnEFNoKxZ
pIhdkt5CEZRg1mhPCaiXSRW780Q3IVUWc6okuZEpj/nj3jq5aSXMbRWTZSQi
5tALP4wkGWDu8FJzO/AvzMnffNbU92GmFVRfH7PFfPWZ42K8A+Zo29jcWwcx
G5kO/4fohfl129aw0WOYc31iNKs5mFeL8H6OvpifK9tJx3Ixp/+eV+EQiBl1
fOuqGoy5PDnqWmUY5uOUR078CMyqjSoL9pGYn7h7CQnRmBOXyq2HYzD/DfZd
LJE=
            "]]}}, {}, {}}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->30,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm], None}, {
         FormBox["\"NHEJ\"", TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->15,
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->800,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.0005103055915}, {0, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TagBox[GridBox[{
        {
         GraphicsBox[{{{{{}, {}, 
              {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1:eJwV13c8lV8YAHCjMjLuskf2XtfIvO8xElGJJCRlNkllyywRDT+lQlFGEZU9
i8dMKYmQEVkZcUVWCr+3v+7n+zn3vue9z3me55wj7nrOxoOJgYFBnpmB4d9n
4F6vssIz6lB+31Szd3MO2b8cyQ85rQ4BBOWt/6xNss80PaUO55z6u77gXu4x
Tuj1VAf+I/H+/+zrxn+a0VUddptRS3twnwtuELG2V4fh43ay3bg9cwSif+5S
h9JHmwMduHdvvxVSZaIOHLc0n/yztPeWC1eM1SHht8y5fx7TmHPmN1SHpk1j
hn92qW3UMdTHnze6f8cn3E7d52ZuUdWhxtHrwEfcB7c0H1QVVYdPbqcvteJu
8+XfOSSsDq3BFtr/bDF+mv+WkDq8ufNx/h1u42bur3R+dRBaaPb4Z/VYB88X
ZHX4TDy65y1uAsdsoDKbOgh2VG004/5ApqQpLlJBKb1StB63+RXPiP4FKijk
mH6ow924WOEaP08FxmDPkH9+1XVU9gedCuvG7t2AO//e04JnU1QYe28YU4s7
Tki/QX6ICkueG52vcJtJuk7KvqOCS8VJnnLcPy+3EegtVBBkbqsuw31/TE+3
5A0VGqhNLv88nU2OM2yiwhaRE/mluG/KNSk6ABVea502KMHdrSx3Lq6MCt/v
/tpd+C/+OvSlmQwq3A8QY8rDzZ3sKFr8mAqjxJfJz3BX/G7eHfSICla2r9X+
mb06/d7WNCqsOdgdzcX9gmatK5pMhanVkwVP/62/ccklq1v4+4VH0bJwR+8L
Zi4KocLF0hn6g3/z28wcDAumwhfHOwH/LGPvnGURRIUBvfzNVNwtrsamo/54
PJfkuf6ZPZA9hnKBCpIqFlLJ//5PRgp7wEkqtLdHaibhvrtSRTQ4RAXj73VD
13F//6vkympLBbY/hEP/rM2UXvTZhgq3/1a8jcf9hePyQa8DeHzTCYVxuAUl
LJPSLPH55VoCYnGn7+3nZzSmgvCOzLHLuHMe/9nRrEIFKTPFncG4k0osnAKV
qSDEuC8mCHfUm+T7CkpUkFOO6wn8l3+z2sRb8lRQUbXxC/iXL7q+TPZSVKhs
W8n2xR3QPjM2JUCF+vX4Pu9/+b75NZdzKxXiavliXXFrkJS/1zJT4Y3t7ioX
3GLSlyQuMFFh19SJH8dxr1kIpnZvqsHvW2EWx/7F/67d9fQ1NeCZ6/hzBDeP
ykdv6k81CGvukz/0r16cQONQvxrYkARzd+PeOCZfJtKnBg+rud+Y4uZ3S9T5
/kUNpKvmR3fh3nvKnRbQrQYFvn6CJrhL/VjNkj+pAb3ULhjhvnrzgOPXN2og
UWu9RQe3LHyL8ChRA9U9Ttpy/+qnYQ+zSrEavFGiqsn+i0dzUfRyoRpY7GiS
lcGd8P5KXMxLNWgiSpGlcK9+kbuT+0wNHk0m9u34t/7zPk9nH6nBWcbPCny4
T0sytvndwN9PLrhpy794aJoZSF1XA81zR4OYcffsuvGsI04NaoqvKTLh3uUp
EKMaqwam4iVxmxtzSDSXajgVpQbVDgTNNdwdKq5FToFqIJnYpzaHW0+v4a6J
Gx6v+qK6Htw/Ldi2LrioAZcBj1437qdHrC4+Oo7Pz3Wh4DNuSmi/1fpRNahi
Idz7hJte+4u13F4N4h/8Z9mKO8NUKkRhvxowdBtZ1eBms44+RtRVgxPqZs8z
cJ/c9mmpSRtfj4j5iUe4m6uFrwfvVAOmOCuxdNxRMiUVoxpq8GNIMC4V99qf
EWKZihrky6QY3cE9/cSw0VFKDTIL4mjRuFv//pHL4lYDdb0+Gw/cCkVmtfZc
apAVNkFzwx174vYhTk58PTSNZFxw7+pQiPJnV4POmVa6E+5XTx36zbeqgbhl
v7Mtbvtsb6H+JVWoCa0oN8YtYD0+5vVeFXYJyaqL4FZ7UPCQ+Z0qlOl2TAni
3j0RYpf8RhVKtavS+HFfCCW1NNargrqPBgMF9/tclCdUiY8bnn3MjjuCKeX8
22xVSDZdclhZx+u1eP+GVLgqZKn4xbXh/rshUF51SRWup86PtOImW4yfOxCs
CgWgrfMWt+G3kOEQP1X4nknsbcCdwpHb2HFGFaR6bvyqwL3Pgzk+wl4VDkbI
xWbgLuGt4BugqkIVmiRdxM0cSsuhqarCjvPDledw24zW66QrqYLLiJ/TWdzz
Lz84uMqqwnFvhzseuFX2jKZOCqvCn4kTbYdx54RwiS2x4J709tTHnfrNXY5r
UAXm+76vbfzF12f3dMW5fhW4vHiF7Q9uvefn9nz6ogLVXsukFdxfgoJP3+lU
gVArHd453BRyQr7gWxVQvhnwdRD3TdNqNdkSFWghNZ58jTvqGVHXME4F6A65
yB+30vy7Q20xKuDdyTJ9HneX9pULTtEqUEXlu+WFW65pOS8wQgWYklTeuuNu
G+oXLfRXgVGG2L82uAV5nmyRcFMBfuntjiq4i8P12pkNVCDz2dvab3/+1euv
mf90VSDFjrO4H/c2zudsYtoqsFQj/qgbt2PKDhMDdRXQuph24j1uhtItZb5y
KuAuTcwrx713ui11nKICbLfY16/jHrN1O/FmVhlCHjXdUcc9MCb72eWHMjx2
8W5Xwt3lO2P4d1IZhNsUtsribr7jJ0gdU4Zwj9cOQrhzP8d8SOlTBslo5xfM
uL1t8zW83yjD5jzvRsfaHPp9cGmT8lgZzqqf+30G98Jo5dmXacpwbur5bg/c
0xfDevc8UIYTZiPxzrgHbrMUh91TBkf7rRsHcNd0CnhO3lAGrnHJCC3cVw5i
76uDlUG8nPLr7+85xHUw5r6rrTJYjn6xjMZtuLH1a4u1MrT9Ceq7hPt87hVx
VStl+N4l5OyL+/Nm5LM/e5Rh7yW5XW64U/IvvbqDlMFBt/2aIW7pbRe+NSso
w1VHH/rq6hwyqHSSU2RUhtfU7MLjuL3d+8/+t6EE9veUG+xwp3M7Fq78UYKg
juY3e3EzeR7Wa1xWgizXyVwd3C0km71HZ5RgbN/2dm7ctmfNfG71KIGPQsad
6pU5dGaHesWv50pQ7j4VwYp7+dlY7NU8JZjN7UhZX8bza+c9B4FcJVBMCHu6
gDtl3981LEsJRKe+3h/A/S6kmRaXogTjsou9L3HLfXFsEItRAs77rG8O4h5L
uNy277gScJXSPycszSEf4Z3p344qAe1StMwV3H+fTp67eEQJdpiWngzATa7d
R0y2U4INtqSao7iNZ/lsx/YqgfuzXS/kcT/ak98brIt/fyHxes0ino9MXWNP
SUoQWhtV2f8L7/+5Rje2EZSA2rinqhX3uNULLQ9OJcg2Z3xSjdv7YcxVCVYl
mKF30FJxR+joyT1cV4SEaz/POODO9k4/kzipCN+FBHM/LeD9u+/UwqUaRWDc
E9BTMD+HiiK7U/qrFYG9uX39Ie4AORMTvUpFKO503B6Pm8Ff+M5KsSKQyWH9
7rhJxI9aF3IV4cCQx14+3NpmmkEn7ijCpRvWBwN+4vMXb2xan1YEJTVeRsm5
OXQn03/11QlFiLM10ODEnXOb/lPWQxFQoc6eFfoc+nhxcHj9mCJoFkqIteIW
1axpyD2kCC/7y/3O464uCY1hNFKEHBPF9IpZfD1L/3IV8inCtvt7+lVn8PPS
E18WYR5F+HpJF+PFLXp3ZvMqSRHWufgi/v6YQ6b+Az+dOBWBmvEzvQX3nZ2v
OliZFWH40AnLY7jVy0PuHqcrwJfkNYWr03PIq2JNhNCkAGubeR8qJvH6iX2S
8bReAZSxltoHuC0cbGQRKIBCqHhCBG6ZtVw172oFQDD5zgz3oL6DyftCBdjk
OpD1eWIO7a8tPxmbpgCHGjjrJ77j/bXZt5ghUAFk9qCQhbE59OCumM59PwVo
nS0Z+YSb/cT7V6oXFUCEsiRRiPs7i1Szs7cCDObwK5/Dnban88srdwVY/VPl
OjWK1+sH6kagtQJUHhGX7x7B17eTbj6voAD0XHLjrW/4+a3WNttWTgHST/G/
9MRtkFfFWCGtAGE/Yt1puK9FXa0KE1MA4oW7ytNDc0iKKqrEwasA2oEFaka4
j9zcxy3LqAD2NkKvxr7i9Wee3+XUIw+rfKaDm334/UaThF8W5GGqdCD2I25e
scCbkh3y8IPgv5iG223FxGz6vTw8L/HkpOHeyO6vCKiXB+lULZp/7xzSYt7+
IPG5PJgf7bUY6MHPE69PubZcloeOY2xVvp/nUOY1Zkv7SHkYrzv8DOHOOvRQ
YzJMHlTVFRzZcT+Zbd/CGiwPvaKSK2mdcyhPROepmY88SPS9EWnqwPfD0G0z
zU7ykNRR1bPlE95vaZl+TVry4GOkUmn1YQ69YaM5H9KQB7uyoj9E3C1d3bvH
1eThprrhr873eD/wYuffqiQPidwcDIdxf3x4vmqXhDzkHD551aEV39/W0WYD
lzx4dnYsWr2dQ1OvB2LrJ+QgxWJ32WbjHJLIVtsjOi4HLQu3vxbidrp+hS14
RA6UWa+nueFud1SKo36Vg7cl7j+aGvD7x0pI/KMOORhdWngcXY+fZ6hCN8Ne
y8HneCH2+Vo837IdbuvdlgMzZ+fBi1Vz6Pj15wfvJsiBVnG7Aj/ulIuMlIUb
+Hjs0EZ1JZ4fxrl3cmPlQMz0mD4T7qXB1ST+MDmYYru9GFuO39f4799fPikH
lIQbfWEl+Hpd735YhMmBrVjZEMuLOTTzSuuFoIEcWNyW6n34fA75z96pidKV
gzBZCQsN3LH7Dw7ZaMpB9GdSglM+fr8jtIv9kpeD5v9u3895NocW77zN1OCR
A9LL2E3pp/h+8/BVbskPWSj5bU8qTJ9DnG1CVcJTspDyhvBAE/fdjeB3V77L
QuXsRHR5Gt4vjun+sB2WhamhN/7VD/HzlXiZ0lK3LFyP/1ZWnYqf/5+8fKlV
Lws2D2p/P7iH58OLjNKy+7LAvy81beAmfr+s1bKxvCsLV0UxV1vcXu0t9KHb
snBwdT2q9cYc0lygy7LdkgU51c9fyq/PoTot/ZQj0bLwx+0JxMbh9f+qM4zh
giyQ/N0+s1/F+1/rFnMLS1kYy7QLiruE96P+e2OD5vj39zw6MhMyh3pnFCIv
7paFFr79kftwP+KyrnpgJAuXQo7f5gyeQ8o2D5XmtPH5n81XXgnA78+9WsQ7
UrJgT+S02H9hDoVOePZ9XZcBbN8ou/kJfD3JJfuxPzJwx0RHJNJzDpUhxoa0
VRnIm51RqfTA6/1eat6xXzJws93FUsZ9Djmbt18anpQBl0cpuxaP4/t3ru6O
8U4Z+D6iTHF2xPfTMxzuM7kycDeyuejYXrxf3nP4svepDBz7miPib4mf3xqe
7H2eJQNjjIZO8Rb4+VbISMs7XQZO0p/sLzKfQ6Otftt+3pGB8oz8wfldeP4o
DeX8CpeBn8Me9jtpcyiGXji7dkgGXucPVrxVwut9TZ0ec1AGMrOfd79VnEO+
LCV0irUM2KZl1bco4PkrVjanslcGzBJDNuvl8PltquZdjWXAyO/WeI4U/v9K
65feqchA4CMbKV3hOWQX2rmewiIDJmHt4i7seD5cs92Q3SoDup+WtXTY5pDJ
3a6NEiYZSNrXNsnJip/fX/Zstq1LQ2WiplTpVry/DvczMi9Kg2zV78YFBvw8
tGts65lv0lCh+NBIfoWOpDmWOPUrpeHn5Tb3gBE6mnaJdP5cJg277jh+kx6m
o4JyzpdeJdLgTjL83DFERwZuMgcevZQGvnEjUbmvdGRTdThx6xNpYOCZYoce
Ogo7WcXbnigNC12oNvM9HX1pDN/hcVYaJpIKfiuX0lGaIIfPxilpGFv25s4p
piM3n/tw74Q0pFr7uIkV0RFdqNDlnas0/IdCa7a/pKOtF0cyVR2kwWZahP1D
Dh2pi5vKrZlKw/UZisFqKh1dD2Wn3tohDZN/i1pGIugojn7AYVFYGqQdvYPX
wujo2rF7kQ6C0vBX0PYDdygdXTWS6pDkkYZTPb6WGkF0FL4Vu1jBLg2X6nY5
Hj1PRxdunC8dXpKCuB+njPVd6Mjh4RddzfdSkOY0nMWG6Miea4dr8lspSGUP
HvhoQEd24R5xG81SsNlia3dbD4+Hy0JfS50UOLErbCHtpKO90hyXjpZLwTVV
wblZJToyfI5qrmZIQfMnIRURQTqSef3EuDdQCrQPlXMYL8yicC7xldP+UuAx
HZTZPTeLvhxLzft7UQqsEhmDT87OomtMCRSxc1KwvfBT3+XJWTRjFvTd00MK
nsWzCCYPzqLCDsu4RWspMDtl+0fv3SwymPz5iVtRCpSS6pTM0mdRku6Zq4/l
pKCF2LMY+mAW0ePG9TRkpED9y63UwuRZlK7cl2knLgVv2sQDue/MIqaLDX4P
+aRgZbOKnB07i1rWkwQUt0iB4l7zv5rnZ9FBsr7L7q+SoGu7dX87mkVj4edm
M/skIV5/I++wwSzyn8kMYvwiCaMvMgf7dGZRchNH4qsOScjgEin4TJ1FQwGD
9eotkpDEo3o1SXIWnRmIlNpRLAmMc4Ys5ttm0eXslomVWEm4XjqwYtUygyik
9YuHrkpC2vI6257GGfQkjMpQfFkSsiYWjtBgBr09nMLvHSYJz6xm8/gqZhA3
+9k9YxclwQTdvZj4dAalenPntTtLQphpz8EH0TOoWNvOO1dTEh7NEu0HaTPo
zmySBVldEq4mZSRb6s4g38wumVBVSVj2tssv1pxBO7kPDR1QkAQkfY3qqziD
Kr4fPLC6QxLMVw5Qy/hnUE2StbrZdkm4+DGtUHfhB2r5tXd5bFgCSD6JBUKP
f6Cc3Osd+4ckgMtw54Xe1B94fr5/UTEgAW2ND9z/u/sDWbRanrjeIwG8wqZv
5uJ/oA8ZFl80PkiAcsWnRQ//H6jD2rwqqkICFAQifTUsfqCBlyZhYrck4NPw
ga2qs9OIb3f597LrEmBjMfMtYWIa2QwoWO2Lk4AoNLRjdngatbCSxIKjJeAo
m2D5ne5pVOLyra4zRAKCJ8W602unUTw5dGvMSQlg8HJRz0iYRnoBZddnjSTg
9EmBC3oq08iPU2HpMpIA7aIfBd9kp1FB5sOjgjQJuFSj9zFCfBrJtF9RMdOR
ADFejZQXlGlEkj/Y/khFAtTXDX7Xrk2h6b45sq2QBPCYPDte1jSFkjH51KpF
cSALs8R2200hjp92/cIL4hBzaWIPr9UUinh8RSh8ThzezSmY7jebQie3fEs1
mRaHuAnU9UR7Cmm/u/vg/ZA4PPiT3/ebbwp1HdqSNvhOHMSKT8dI9kwiotfQ
I6bH4pAqMIydsJpE11KTnljsE4cOPl2dfpkJZK+8cqHXQhz+69qxWSAygWRq
7dFJc3EYkcnTCqdMoPoRoS/RJuLA9q5wegvTBFqTz2Cr0xUHEyLv7tKB7+h0
xYuz2jLiUHFLwz8n4Tuy7HqjLrUpBmKqImvtC+OIk3utZr1ADBpFI1eFHo0h
x261vkY+MXD7XrKToWgYFfcMvGEeFYXncbHkTeoA6lM1X2rIFwGgpr8O4e9C
J6TqNs85CcPRJ5/Hb51oRfQWm5aYw8Kwq6q98aNGK/L1GktItxGGuirMW52h
FUWVsUh8NBcGq8AnmS7J71Ca+f5dKlrC4NV9QvjCh7fo89n+2BlOYdA1NlB6
YdCCjEqXiKdqhUChV6SSpNeEWhxi+iKqhMBsl9+rY9ub0P4N/sz7pULwm4X5
Q99AI3IyM9BsyRMCDinM3imiEQX2RtnJ3heC45e31CW9bUAv1rlTx32EILRn
olLKox4J7VaQcpUQgndq96RQdC0yDO24nigiBPWNkW+276xFniXBS/X8QmBi
ZGVvNFGDCiRamyW5hSCuzbBj0qIG7do8c2r8jyCsP0vM0OB7jc5WPH9xsksQ
PmncpmxrrEI1ClTdc7GC8JdXn+OhTxkadel9nH5ZEHz3DnlLqJYh1uRI9vYw
QQgdolkK0EuRDUtHv5qfILyfj/l5xKsUTYxeCFtwEQQ17tBJ7fMliPCwpMFP
XxCsWgU7HW8WIRdunf2X6ALQmWPan2PwAq1esvXcNSUApxrlhxM/PEc3p33C
OMYEoN/u4perx56jV025Lx70CkDF4rbvcVfzEe8lIe7XjQJg+3ZKdvnbM/R+
cuPjeooAjPxXp9HX/BS52QlNNiUJAFefhYLkyadorUGb4WaCAPAblXufZX+K
ZNN91ESvCgDR9H72X+snKOrQSAJ2XgAep22b/DOThbTrm6zDzQRggV9uT5Z1
BmpTHTllZiwAG3a7g6KZMpD7w41IbpoAdI9jVw6XPEaJgdpF6eoCQPYdSHor
+BjNqOSSQEQA7rYycV4bT0cZqdc7GRb54fnLlZ611FSky5b7o4XOD+tR8vZF
gqmo3b+J+b8pfmjIX6+XSE1B69YbGuJD/HBisIdR8nEysmf1uWP0jh8O7JlU
OVB3D3H6HTwU9Ygf3tP23K61uoPsM3uiM1P5oY3b9H7A3G2U9elIWeNdfjAz
5KyLTriN9FTc+Vhu8MMnL+vtKd2J6OSEb298ED+oM57KsL/wHyrm+c323Jcf
AsRWNwOE/0MbJqF6bef4QYq0ZPblTQJKehSdSvDkB/1d0w0HJBJQvcPdo0k2
/KDbqWj6rPUG4owVvFm2jx/c8mb0jmncQPZlaTU95vzANHTb7PTD62iO9HSH
IOIHZ/H+yLOB8Uj4fflwmiI/CPNl/4recw0FYL0eOVv4IVFVX1zxYDSqP3v0
7ttNPtj4/CEg++sVxJU63Dy9xgcFZ0VzhE9fQVkrU7LK83ygtKXR+EfsZdRR
sDZV+JUPJNuTfb2+RiKRoTDBzi98YPfX+al6QCQ6yclsudjJB3rd21ALKRJt
ntqev/MdH2SIS9/ebxWBlCSFvavL+MDIKDXdqSoUBVg/Shso5IOWW6+Vq9hC
UX241Mf1fD44ltsr6eJ0CTkMKKkZZvJBjetB7Pj2EHQ1ibbQeIsPbnYy6q3e
DETDLMf8207yQcn0qRpnSV+UdvawXYwbH9T93fAvvncROX6y2mnozAeimNCd
HdwX0ecUw+XCg3zgNvzRfzvLBdSiLOGfhPHBFZ36nV0CPig6UdBuvy4+nsCd
z215DhmvkHayaPLBVP6K4+AJb/QKmJcD5fmAzyF+w77wLCo4OO7nROEDjf0D
flqRp5BXxddDPNx8IPZ4Yd6u7iRSEOnWamPjgxsn5OTkt51EWd+bl9AmL4i+
/ugf89AT3QvK8ZOc5gUPteQtbQzuyHbw0aGBMV6Q6unT4HV3QwSTZK2kIV44
6251zL3VFcVxxC1t6+IF7jnz3LpsFxSWfsZvupYX9p5tdMvnOob0t7gfyqzi
BcFDckmmRGe0etJJy6mUFy79zGEvFjyKLqjvW/rwjBeO7I9gCDQ6gjyaVPwK
k3jBaN/SZF3fYSShIHvodAIvaD27nE8kHEaDN3doScbzwv37wa3ClnbI3p6w
dCeCFwY9u74Nf7JFe3/M+wae4QV/lkfzeaI2iO3AtC3VkxfyfBZeHg6zRs0l
I5rTx3mBIUJ6onHkADIM61w8YscLumeKh4cuWKH1kdbPFGteCLg2yjdttx9V
mTWWfLDkhWvnNI/fMdmHNIilvsiIF5jFKnN+almin37PbVf1eWHlgVatjr4F
yu/L1izcyQv37n8i7jPfg2Sy7i5KKPGCutAtIASZIUHtQN9tfLzw8Vaof7Hq
LuSnErPYQ+QFOpedRvh5E9Qufdc3l4MXXIHrqUulMYqhlPjuZeKFWe3ZsmZH
IzSyvWFRZJ0HKvZM2/wuNkQYc4fv3AoPUD0/Pc4gGaLF+TnfxFkecKydm7hc
S0NWUxuLbpM8IP3Z+vhAqgF69o3TT2uUB+6Luwj+idRHxz8q+n35wgPmQgv1
vqd10Yf8E36ijTxw9N3ZFo5sLSSX5b80V8MDNZuTqYYtmuhKarRfXSUP1KWV
cWr80kB6cZl+7i95QK2rOuL0MXWUFFm0pPWMB6wKS6jYIyr6GVjnx5LNAyFK
lj2zE2royYkhv2cpPLAatLZfgFcVMR6jL4Uk8UBx/vlk+ffKyMlu3W9fAg/I
rjdlHbqphMimQv4/o3mgxcGoL1xLAUVIHPbfeZ4Hph/GXuTfKoP6BTyXWc7y
gEmxnu48URrtJPr593rygPoShOyQk0Izm4n+l5x4oFdlebfJOQlktvJ4ed9h
HmDxkjzxOF0cZdAL/HfY8EBUK4eYzBcx5PC1zb/ejAd2Oq+I8NSJopLPX5dv
G/PAprWuc9MxEUR4P+PvQeMB42uvbbI4hFFzFXsAqwYPLEl0vVu9KYDU7+8O
2C/KA1M55uzs8jzoxq1DKzsEeKBzmn9YUomCJq+6B8yTeYDLxT6tT5eM0v2i
Au6w8UCqxsUbty8S0drZ/1Y8tvBALb9Gek8aAdm5PwrQ3qTANKfNqcAn3Ijj
YE1A3yIFLDh7T1LyOdAJiw8reXMUMF67Sr1vth3VGw0EhE5ToK8272nNAhsK
VFsLEPtGAW7t2qGbfiyoU5Ztdb6PApldr3NIe7chlR38gQ1dFLjPcI4+o7oV
jXPuDPRspcDbN/bfr4swo8WmfMJ/zRRQVTt0K2EnE9oSJplbXUeBhgdL+gEO
jEiKTugjVFDA49NNyRH/TUzzScwF/WIKnBV+o576ax3b5bzB7vmCAv4+HRdR
5F/Mve2HfnUWBcyOyTK8fP8b873q+nk8nQKxKXMf9K6tYlew3rOEVArc3n4g
Vt12Bct80fzQ4z8KHMAmD4iRl7AiT9rOhOsU0BYfZGbYtojVi5a0VcVQIOBs
3lPRrb+wkZuPN7nDKFDrlX1rh8w8trCb/75eEB4PUWYzgtlPjGnzppqHLwWI
nuUKlWN0TPzcJZeq0xTY/A+Sst//wNRkf/0e86AAu7//0GGnacxw6FQitwsF
WKT29ISuT2LHrQ43uB+mwNTtW1Ya579jPixtR27ZUODItR7/I8bjWETtrsXK
fRTgl2RXlpMYw9JV1aW5d1HAYSU1TW77CPZiIue1LsLXr8LMWY48jNWk77Bz
16NA2weSjbvsN2yQmzOmUo0C6OiZkPaxAYz+5vKOMUUK5OShOpsD/dhG+Fo5
lywFGCRJJ6jtvZjIz4lJNxEKPFC4H3SYrQdTynGOvMlPAVKdk+E36MIMjncJ
VJIpYJIqH2h27TPm1F5vwcWOx3v/i5w7ezqws7G6ozpbKRBd1/iewfATdsmw
IMSNgQLCCxSZw7vasQcFD/MrlsmQVaTlbTr5Hss/STEdnSfDx1zy5WKDVuyV
WPxXzlkyjJQ5mP19+hbrTwjkchslQ3s1sJXVNGPT5nNPbgySYfTQhRTiySZs
jcETVfSSoedjD6+wVCMmeP6gD2c7GQYsJ31utddhCvLvWHVayXC1bTemXwuY
3rDhY9dmMmzGdRJ3BtdijtYqHeWvyPC4mAwfmqux02zZp0fKySDseLeonlKF
BdcJMXPiY+7XaicPh1RgcUGJqdovyNDHUqxn+rsMS6ayabrmkoG9+8o36xul
WM5U+PvrWWRojdn96eDOEqzi8bJ7eToZBqMiZFV/FWFfiGNJHHfJ8Pbuf+mm
WQWYI8PHr20JZCCNCD/lYXyJ9dMrpf+LJ8PJqPgDo4P5mNPXLK+DV8nwAtus
rx96hg223irliSSDboez/yPGXOxYVfB6TwgZXIKjTkcbP8W+5XiYpviTwXFx
+4ekR9nYaLR+l+hZMnBziL/a8zwDc/eVERn2JMO2XFfhIvvH2HdXokemCxnO
KUrofxB8hJ2w/pvv4UQGNezQuVNjD7FJNLEoe5gM1mo1eUrVqdhplQ6DaWs8
XrKhqx7lydgP4ddX8veSoZvvW1B19z2M/juRQjUmA4OVn8uG3x3MZzLU6ZcB
GZh2Dd34Op+IzXefzCrVJoPBgpNKZex/2IWmgzMB6mSQ2Aj826GTgC0WY5p6
ymT4clFYl4vxJuaXIX/prywZ4q2/nk16FY8tJ1AaayTI8JRXi3bo8TXst9f0
QRN+Mnivco/W90djwU5dqVvJeD6sBHoGK13B/lrA6BtOMtTNZhwJehCFherm
KcaxkoHtmyU1Qz4S25C9e3EvMxly4gylFzLDsQjeyGquDRL8tdJn3CUbijFu
Pcv8aZUE4t18LDW9wdiWEaPbh+gkMDtX/sKm1h+72q7UzzdFgkBO/YLLM74Y
Sy2fZN8oCeqT7W4z0y5isc+ZzjwYJIGWpOV1mxfnMfYHs0XOvSSwdrOuEMR8
sPi4L2tin0ngsMygf+SzF8YR1GA82kaC1n27kpldzmDcdskdJxpJ4EO0OzLJ
egJL2HVFUKGWBL3bwcxCxAMjaZxznakkwXKxGMcFezfstrjjsxclJDiRkJcR
Ue6CUQimCz4vSeDitvrwrfZx7O6Gqp7GMxLM6RbNpT8/ivHNCkYtZZFgqHJY
+KrUEUzw3U9icAoJ3kocZ1jMs8MeVPQ7GCSRYE2zLrWhxBYTedr8eOMWCW4n
3StY+G6DpSUVTkEcCTz0Qhn3IWtM7MoD6uVoEvj+6NQu9rPCMi7EBJlGkODq
+cC3z5/vxSRdLtSxhJBA1uByg5e4BZZldZTtnR8J1NlZg7Xfm2EymLn1dR8S
RH2MXc/JNcVylDSS958hQfudY8vFpSaYvJDoMMGTBIkBv4fvzRhhz9jY5DuP
kyAmJTJ/wMIQU1r95ZN0BP89R6lJagoNe/59sOKwHQn2LTO7Tg3rYSpdbxkE
rUkgSvJaU/TUwQoaSswHLPH36Rv0OSyxE6MWpSek7SbBn7yB6EaiJnbCZeFn
pRH+fA5/SuN+dewhwdS6y4AEFxhTOYIK1bDO2nuFP7VJ0Nn9UqTNSwVjOzdN
5NAgwfutv42SKhQxJEq7IKuC/171T5ACJo/5fbjVYSxPgk8R2ww7f8tgeZdG
1J2lSCCIzeepTUhhw4pat4N2kKCw1eivDpMkxtcf8+uOIAk4PzfEUc3EsX1x
fQcLePDnVYTutfHYgV3WVS5pJZDgZvzzu+NRwljlZDhlYjsJJFb7vIyGBbC5
ex2+TCwkUFw4kLwZzIdJm0l3iTCR4AEje7KMJQ92ZDlAS3edCG8Z7bLF95Gx
/7LfJdmuEiGQNKxbeYmIvbEVWT73iwicaX928+dzY+vMPnbxdCI4ZAsSSXkc
mEZxfdmTKSJkcme3tM+xYadcefjqx4hwsqanf58vC5ZOPBnwdYgIF7hVWhg0
tmJdUNWz2keEhrh47y4ZZmy7D6cOpZsIopGdfJKWjJjRjuP3VT8R4Z78VwNz
7U1aQFvRqsV7IkRtdrgNyP2lPQ/d6uD5hginbyzbdrv9po0q2VdG1hMBWZU3
ZQ0v0wQGngk8fE2EK7nvRE0fLNKs4teDKiqIkOvHQ9G5uUCL1jvQ11lMhM1N
K96Aop+06qkMvbkXRGCNnhDtYqXT5u8vpbA/IwLP/a/ldZvTNFlz8z/S2UTY
gea/bzeepB1dSTli9IgIj/l9Tpe3jNNuP5mtdkolwiCr2z2PG6O0t4cMhQPv
EqGsxV3fPG6Ytrnl9qXb/xHBKj2cVdF3iKZVMj7w4joRQj6PlPxWHaCdcdOh
vYshAn91r64u6qU9JsU/HI8iQpO5+ZH55G5aT93XdYYwInRwT4eN6nymcZ5X
cxYOwuPXafIimKeDZiJ2uUbblwgGr2ZGX8m304I+dokePEeER7+ieUO+vae9
DJML9z5NhIqU5zslWt7SxpVDhq55EEGO7bv3ZcY3NKGvH1D2cTx+Ug5R1640
0qyviz2CI0QYiE5JHNlTT4vRv8gwYEeE2e1RD+gWQHs93XR8xZoI6VL5Q87M
r2m/kvnrSPuIwLCticX3UyVNfs8ZcRVzImwfjhe0WS6jHVt9HbnHhAi9v+L8
xU+V0JKeEkbcMTzf2qvYJsSLaK12bsYRukQoDiQNnRMooDFuK8tI1SSCzNOE
2UuJ+TTtUlbmclUifHFXj/lll0vzcj/i1qFABKXzt2yr/Z7QMskvGmalibCV
37XZYTyT1lvPIMUmToRIkYeG5g8f07gvHLwiJUyEjfMK5ysV02mm4k/GEB8R
RgPejZ9MSKWFtK/uOkIiwoOL2h5GTvdpheGW2f6cRLh2YfSowpUk2tW6kuxn
rESo4TQrkGW/TXNkFn0yyEyEV4XTVtndCTQV05gnpE0ChNnzCSk13qAxxfx8
snuNANrWbiuelnG07haHp8FLBJB/f+PD550xtDz2hqcvfhJAzyvaMDHkCi1i
r1LOyA8C8KWdmhjkjqLZ3kzK4Z0gwNize+EM3eE0ufaNHIsRApiM32vaz36J
9pd4MjfsKwG+WPKHFL0IpLUf/JRb9IUAd/WypIvK/GjZSXrPvncSgGyjIa7A
d5EW3JP5TPAjAc6WtP8n3+xD2y/Ambf/HQGunbgcne3nRZM44p8X1USAU1OV
JqF9p2jLD4byyoAA7voFAs35nrR3g+b509UEEFrIcVgZcqOliRXli5YTgO7V
t2v6pAvtgqvQc5siAmwXF5Q7FeJMM8u68vzqcwJ4rN++w5nnSBP+Pvu8Kgd3
bNOkkPVh2k/Zwy/omQSIuSDIWHjMltZ4Cl5IpBNA9xNPfcg7a9r9PPmXdikE
2EdI/ijBaUU7O5v4Mi6JAOq9InXXKZY0Q9W/L2sSCKDlphjOm2JGo5z3KFiI
J0AnllaTcnMXbaqorUAmhgAjlhG5pWNGtJpF7ULHKAJs1bwdJC2OaIk7Hxfe
DCVAkuyDLRHc+jTPQPai+kACiCy0anFEadP0qi4WLV8kgOf9Ns1rJzVpXH8H
ihTOEeDv0pOrWSVU2ghtd7HzaQJo8EnPRhWr0MrCXxYnehDg/JVarxvJCrT4
Ov6S5uMEGL5OkB5lkaUdZ44qWTtCAEq4mLrTrCRN0/RHicphAjyMSgie0BOn
scbYlrraEGDHjdWSe80itIGW16V39xFgbkXyy7dSAVoBu2zZO3MC3Gejmtqp
8tKu7E0o2zDB40l/TFQQJ9Psb/4uU0cEWOZ9xfYmhEBTbnct99QjwEIEZs3v
xkFjIr0vT9EiQJYjkUXMi5XWfVCrok2NALHt5fHdDFtpz5LSKpiUCLDqJTtB
4mCihfWwVO6UxfOR5r30d33DwEbgfOVpCQL8vrFGvndvzUDmSF9lmggBCh4q
sk29XzZYe2BS1cFPgBc3S8S2Xftl8HEwv2obhQDHru4fqq78aZAlxlutx43n
6/Sr4YtpMwaBruHV3uwEsI8IengtYNJgb9ZkdcZWAnDx91aOfh8zEPtu/aqb
AR//KVHf0zNsMGXlH8Szyg0xBl72f3wGDRI7zYND6dwQmbV3Pmeh10DvsFDI
+Bg3SFXrXRoT6DYY7ZsN2dfPDXs2AyIufewwuO4Ml0o/cYPrRPPpjxsfDTRH
EkNFWrjB/jSlrESt1eCrh0dYdA03+MEZ5w7eNwZXp7TDZ0u44VeeV5bPvQaD
tHfPMeFH3LB7Obg+16naoDRPcsMinhtE2egBl9mKDQwfDB4dieAGsnhB+3jZ
S4P315NfB/lzQ6pENec592cGY17coTku3JC2ecthWjfDwMf53QA6zA2sHQe+
0FGawd/90QY9e7mhNu3mATFKsgFZ7c+frTrccKhSicaj9p+B8cL3YDcubnDM
GhjJ/BFu0DbyuG+NmRs4HI/LfDMPNnDsdNJL/M0Fog7OO53S/QzOl3T8hjEu
+EIOYTiu7GXwyL8mULSaC+TKYjWuY44GG2tJ/r0nuEBZeHC6R1PTIO7HgW6f
o1yw4M53ltlZzYB3YPtO1oNckHJgvf/GJQUD5deRSzsxLghLsRvrNBc3cAr3
8r1D4QIx/mJfLm5Ogypm0wtWdZygc6LL19lvVN+fY9GrSZATzg2n7Vbpi9c/
Exa2wUXkBCb7QKgSuKp//CfrLXsWTvDneRx05kqkvsVnkYIfvzgg55vg4fk5
P33RB2YLxA8cUNQGDtt/H9dvVkz1dw7ngLv3g7OYDDT0eS2Nw1dGt8Nh76Vw
hYxOvdJrCQnyz9nB+6JpOPfquq4a//iidQY76DbYunLtWNLNf6LrEHyPHZ6P
JN62L5/VzWgYEW+NZIdrDeMhnOir7s11zeKzduwQ78icqVlYrXvyfG/Xy002
sLj7XOdomr+uoIOE0E4bNqiUoR+T9hzTSZrwD3c2YwONPSFM5xf7dAj+raNX
DdjgrKrAEmvTJ51tt33ze2TY4Nm8q3XCyxqdX++baUF/WKGoKen92K67Ou8N
zxx/lcUK9Uzk5iOMpjpmH2sbx5JZQZ71Ie1HnZ5O/VGKPOctViBVxAd6M1B1
KoNfzx8NYgU2idNfqMZCOk9KuC9v7mMFjtYXD+lM89riJu4TsiaskBGTUG5h
OK794FOF5QEdVjikONhKDenTTqS7UB5LsMKTy0mctScatTlDywLf8rFC/zY6
O82gUjt2+/av8xyswOrq6MQl/lJ7S8oxI0EmVlj/Y3w6TiZTO1yuJNt4hQVE
/1jQoyPuaf8P7LsVkA==
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62Tbpwvvfd3YJZ/Ai+v3XBv7M5OnB+xJ6oo4antA+s
c39YJbLuvf0i4w3FU9W14fK2ay8G/GzRgvMD9gmKxz7ShPN/nWp8eMBe80BM
/6GvGjHv7Z/s4VinMlcDLi8940JFxy91uDzfFAa3N+EIvq23vEjAVrUDXNcX
F9hyvbe/aeJ9f7OQ2gFRsIPe2e+url0rXqAKl5c0yKiqPqsCl/+Zp+d+XwvB
f9gVJuLcoXxAE2zBG/vW5bsfLnuqdMAD5D33l/Zxf3XWczkrHZg1EwRe2ufx
zqnJW6B4YALIOf2v7M0Wf/O89FfhANi664/tl0W4iptFKxxofR24Q671sf1u
GfuTxoXyUP89sNdcKZryW1vugB3YgbfsBbkv/Tv0TAZq30X7Bf/7Z3YtlD6w
BGTc4gP2ALZfydw=
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
/IWHQJBcyRPD5a2glv9zLPibpsD/ACvcPcI=
                
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62TboH1rk/rBJZ997e++5uwSx+BN/fuuDf2RwdOD9i
T9RRw1PaB2L6D33ViHlvv8h4Q/FUdW24ebZrLwb8bNE6wHV9cYEt13v7gH2C
4rGPNOHqf51qfHjAXvPADrnW14E73tk/2cOxTmWuxgFRsAXv7KVnXKjo+KV+
4OwZEHhjzzeFwe1NuDpc3tZbXiRgq9qBahGQwBv7mybe9zcLqR3QBFvwxn53
de1a8QLVA0FgC17YSxpkVFWfVTmQngYCz+x/5um539dSOSAPsl7uqf3DrjAR
5w7lA2DnXn9s37p898NlT5UOzJoJAg/t4/7qrOdyVoKqv2qfxzunJm+BItT9
5+zNFn/zvPRXAeqeLfbLIlzFzaIVoPpX2u+WsT9pXCgPlW+x11wpmvJbWw4a
XgwMgtyX/h16JgOXX/C/f2bXQmm4PAC1WNi0
                
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
N7ZPo+nGHRVEugJ8d2pj3do6jUJnMpridBQgw0bIlATTKMnCethKUwHeNHX9
3lw7jcqFuim/FBXg6Mh9rOfWNPqd8bJ4+2YFcDLgPuN7bhrF5zaWVU/JQ+Sn
XLdvaBoJdJHqyT/kQXVIumm/3jTKXIvoiP8uD4vBMFGjNY1uu+lM2XyVB8bF
M6khqtOoU6pGZeGDPESPmaVXEafR5tLKyh0t8qAZ9GmL2u8pVFpR9KgmSx5Y
Rbd+/Fs0hS4077DamykPpVGlhUJ5U8i/u312+Io8TDc9tJPOnkKa87PyvJfk
wfr4xRCtS1Po6Q69684J8nBQf/Mmqcgp9KmxJ4YlSB6u0QRE/1lOIeFXHCZm
e+Wh5uyR93dXJtHi4LXRIRN52Mzuziu2OIk+TiudOWkkDxeojJsxc5OoYKNl
/Y1d8mBXVL2sOzaJVK1yVZja8lCZ3lwd0DWJTD7u2JQhIw/6V25XPs+fRNHj
XgOfV+XAu2tLNBc2ia6LVFtgK3IQs7yBS117EtUg1md5S3KgvJnD5QB1Es1e
y7nr9ksOtmWrO0VLT6KDJt1RXyfk4CD5+MZYrkmkX6YjOdYjB++69Pq3vf6B
2Pz4PafL5CBbTLHhqc0PlDj7YGbZVg5eOY3w7DOfQGvLGrOJ1nLQvi7NKbZ7
AgVzV8+KWsrBo3SRukG9CXSIUsNUM5eD3oB5vX3KE0jXqv6nu4EcOPIOOPXz
TqDZRy0LHWpy8DTQ70zy83FkF92zep1bDr7WFx100h5HsvwLAnp1srBPsNpC
nOM7mjx85uD7GlnAzHpUtZfH0P3HApX+1bJwevxrnuncGKJ7yB0oqJSF/ZXK
Wg6fxpBVvf1lzlJZ2LNp505y9RiK8anf0n1ZFricax4g9zHU33pa8sgxWfj7
u2JxqXYUJUfz0S5JykK4CAm7fOAbkntSavAxTAZMOHe7Pu0aRtYieoeNPm8D
O+ype3F3P6rStjteprkNdli3tQrLvUUZM1fNRDS2wS0i++A3nrcouLhXLlp9
Gwi1x8s+nepGWoK2wweUtgHtvfyewgfdqPa79YElyW1wlbagvsboRk1XLTWM
N2wDQUem25OHXaj9l/ni6Fdp+KYl+KRi5yt0uyz5ncWwNJz4fpfDkO0VOu/W
WVH7SRqoww6ua686kNmrvd7JfdKQaL/COe3WgV4XmfVvfy0N3LEi4ZXnX6J3
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
P/8/ICLzUg==
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6b+gXXuD6tE1r23
Z1q48rDddz24vE/ZmYWLQhB8t9q4DrZNugdi+g991Yh5b+99d7dgFr8uXL+/
dcG/szk6cPmIPVFHDU9pH+C6vrjAluu9/SLjDcVT1bXh6m3XXgz42aJ1ID0N
BN7ZB+wTFI99pHngMFB3/6G39r9ONT48YK8Jl3+yh2OdylwNOF96xoWKjl/q
B0CmuT98Zc83hcHtTTiCb+stLxKwVe2AKNjCZ/Y3TbzvbxZSg7rnuf3u6tq1
4gWqB+RbXwfukHtqL2mQUVV9VuUAWPr6Y/ufeXru97VUoP65b/+wK0zEuUMZ
Kn/ZvnX57ofLniodmDUTBE7ax/3VWc/lrAQ1f7t9Hu+cmrwFigfeAE1vfb3R
3mzxN89LfxUOVIOcVzXFflmEq7hZNIK/W8b+pHGhPDS8GRg0V4qm/NaWg/MF
uS/9O/RMBs5f8L9/ZtdCaTgfAOa307U=
                
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
Yvx821VFky1TATKqr1rzEO+HQgEd/XgVaO9NzWzPZSOlX632HbEq8MV9m4kr
7k7tKH/XaBUIEo/wnsxhI7nGPw+DLqiAXdUlfh7cHUN9xCdnVAAm3L/pZuPn
3dZ8LqqnCnwfKFoTk8FGped1361lqED1qR7PR8n/t19/T13TUYGpejFQwL2O
79EGsrYKbKw9En7/Bhu5pJMMGWoq4OhBJ965zkYc5VzPAuVUgMvqeWdMEn5+
THTcHhVWgcwA3RDtBPz82evp1TytDAGSp2VEI9mof0T208FJZfhT8M4oMgKP
P3BKf2lMGQ5HiJdOX8T3Q/JpcfqIMvx6YRQKF9io4FPsm/ReZWAV2xTuD2ej
43uL1I83K8PtYfTy9Dk2+ms3typ8Vxky7la2i5xgo5lvz4+VZCnD1cO/d/sc
x+sREP55d4YybHQs+Vfth89/Y31p+E1liIj7t+B2jI1qPoodGbuiDJN8X/Qz
jrJRlB3WXhWsDIE+DmrTnmy02S42zWOvMhSaP2ged8T7b4V7oMVGGZjXTH/x
4z5VEEVR3aMM++Zl1mk7sNGn1YuF/3Yrw/dLWlPn9+L9WRRanYyUYVXvVCSX
Df59Zp3/cJOCMuSwQu5372YjxnNXOcU1ymDUQa64rYuv71DfsWsrSmCtxnc5
Uwe/j7a4PJn/pwQhSa+3Z+1gI84jjroNf5Qg3uKE320t/LwUtLXYP6UET0LV
82LU2GjvMZOTV7uVILD24QpBgY18SWqVvx8pgfeVj+VGovj9XDgSF/NQCZJW
frJVtuH9pXXTWaxACWgpnF+3ieDxWi4tYveUoLaAOjYqxEatIU3M+HQlMHrx
xdZ/C95fPS715Fgl+Fx93sZ8HV7fpMgOS3cl4BpU3/Z7hoVOSmjdGd6vBDLG
Os5PfrHQ0v2xEwH7lEAimkQ5/pOFhGotBW45KMHRpD69b9MsZDC9be+IhRKk
Mtv8qsZYKHt30edgHSX4NxdnSB1kIVfOzpH7gkqAmS86vmxmIXLBzivr+JXA
QSgzU76JhUb3FGse5lOCwwLN3240sNDxzNgYKo8SWGYveXm8YqELO3TlMpcV
QTXh2MYfL1go7/gd3+tjinABu3gt4RELsXqPzoTWKMJUW1mu1jUWenqxK72v
ShHspauFDlxlobNyhoa6zxVBytKfHnmFhTjOSCTPlyqCN3zwabrEQoICbzX9
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
iG/buUiGJR+FaMWTPChKwuqQ2xwZTv+K9WzQXIdsi0torBkybK98uRypwI3I
+gLLoT/JUFR9XDpXgQtVe35KSZ8kw931Z3stzTlR/Jymh/w4GSb+iYzy+K5B
TrE3VSq/k+F5AskiIpkDzRa6NHd+IYMlSzP2yLoVrI5RfePQEBnm06SsvK8u
YUkdBPff/fh4gu3NG+X/YUozwwv8PWR4lrdIy7q8gC1GGjTe6SSD+87YPVZ2
81jL1nvXVD6S8d+v03Sq/B/skI6XgkUHGY4kH1g7s/QbU2tr+dPbRoYbal19
PX9nMI79CvVHX5PBeM2htc85Z7CMC9P7Yhvw/EzU6p3Q+on5CO6RE6kjA3X9
0elCYGE77j2evVdLhrqHEdKFctPYp+aAK3UvyFA6LmY5SJ/Acpw7nW0qyXDp
XmfL6fdj2MlJLZnhcjIceiSfxxXxA+Pbsliz/JgMpJU3L0lCo5jCxJG+tGI8
PxSu553z3zDTxo/z6kVk6BXwt1Kb+IpFhDyi+dwng8anL5tj5oaxOw7iltx5
eLyrmX0H+Iaxanrs0ewcPD6H43YGBwexPz/cc7oyyXDhz14AlT5MqP5Nzanb
ZDieV5n/vvQzRsvS7dt0C48vM1vom3kP5rtXWNgwmQwXu2JKMp50YnGqF2mD
18igoKJikRf2CcvnZVmcu0oGbca+0uPOH7FhaI4uiSeDAefWmAPM99jybY0c
szgy6OVK7ZQ2eoeJn71bMxpNBvE/RVWfSzowe+WQ+e0XybB1b/1FcdM2zJ9n
TKginAyOV8pPhTx7jSV920uzDSUDd0rigp5uC9Z6S+Vo3Fky7LPlFXsV1oj9
CLwdLXmaDCU+7IJkvQaMy5onp8afDDd1fMZGeOsxtO5r76wfGSh6NX8TegFz
/WI1f9UXr++L9Y8vP63FgqurhBSPkiHtb+/Zc+0vsTL/FIuDh8hgGCImKmT9
AntvyXl06SDez/UHbPgqKjGW3Inom25kWLufykPSrMDkh0xr3riQ4Unh639v
TpVhxi/Ke72d8PkcK77TVEqxQynU+bUOZFAs+xytufwEyzJfUtW1wcf3SLoQ
klWCVckctei0IkPrebWF7uxHWM+aLu+TFvj6eQRdya8eYnP9BtEbzcjQU9K+
89lyASZYWXI334QMaP5A4hb7B5jqDYmanbvIICbjm1LemI9ZHL/U229AhmHt
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
z1zpbjvFOf/zebmyPIP59f/z/wOgVT0Q
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/wADGHyw
Z1q48rDddz0436fszMJFIQi+W21cB9smXbh+77u7BbP4dQ9wXV9cYMv13t7f
uuDf2RydA+lpIPDOPmJP1FHDU9pw/iLjDcVT1bXh6m3XXgz42aJ1oNAWJPLW
PmCfoHjsI80DZ8+AwBv7X6caHx6w1zzQ+jpwh1zra/snezjWqczVOBAE4gW+
sJeecaGi45c6nM83hcHtTbg6VP8Te1tveZGArWoHZs0EgYf2N028728WUjsA
Vr7jnv3u6tq14gWqB+TBFly1lzTIqKo+q3Kg/9BXjZj+S/Y/8/Tc72upHKgW
Afl4i/3DrjAR5w5lqP519q3Ldz9c9lQJKt9iH/dXZz2XsxI0vBgY8njn1OQt
UITzzRZ/87z0VwHOXxbhKm4WjeDvlrE/aVwoD+drrhRN+a0tB+cLcl/6d+iZ
DJy/4H//zK6F0nA+ALLzxyI=
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
/wNNa/Ok
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAA1/XFBbZc7+3VRacb3Z6pf4ABDD7Y
My1cedjuu96BmP5DXzVi3tv7lJ1ZuChE70B6Ggi8s3erjetg26QL1+99d7dg
Fj+C729d8O9sjg6cH7En6qjhKe0DmmAD39gvMt5QPFVd+8AEkPH9r+xt114M
+NmidcAOrOGVfcA+QfHYR5oHHlaJrHN/+Mr+16nGhwfsNQ/skGt9Hbjjmf2T
PRzrVOZqHDh7BgSe2EvPuFDR8Uv9wKyZIPDQnm8Kg9ubcPUDokDdVSL37G29
5UUCtqpB3XPd/qaJ9/3NQmpQ8/bZ766uXSteoAp13x57SYOMquqzKlD12+1/
5um539dSOVANck7VFPuHXWEizh3K0PBiYGhdvvvhsqdKcH7cX531XM4Ifh7v
nJq8BYpwvtnib56X/irA+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L
/w49k4HzF/zvn9m1UBrOBwAmj8B/
                
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
Be0FNRLk+R9WlejNZnHxRK68qkICA7cJUpdjFqs5buzjBmUSOLe6jbV1pbHc
yh+e3CZHxOvFNdFUHM/SNFm7vY5C1BN6Z3xBKZbF2+W1wpZEArbTBCXjaDQr
a0kjzXsjCUjZa1IWNMNZHTufvSsQIUEJXT1P7Jwvy/RzvTp1SRZENHN7k3dY
syRdFZceLcgCy2StlTTdgjX8O/KN7pws9Fz1XbrRb8QK22jh7PBTFtyL17RE
9euwKo98ik8ekwXNP8MDmVWqLPrUt99r22Uh/0hy39lDq1gCQnMv/hbJgn0I
XfCx3lNtpVGXzqSHstD0ejCY16xU26j246/N+bIQ65OX/dKkSPtiQAHD7Z4s
OKrVPW+YuKs9O3Q4qzVVFqxoQSfrBG5of4P68MJIWbj9bLW7edhR7VLveDNH
Z1m4FSmUSMtdo23fyuioWS8LTpF3/9pM62qVtHXV8/RLg10o+G1ii2p2qBn9
rM7fBIuRPs8HMs22uFJfLXke2AhRCoF+rCxFptROJaoTWQq877WGca3oVnYU
0rQIZG+AJ2F7s0aCW6gCp21sL2ZIQHTq2T2koEOSvSsd/JqPrYcK/H0izwsu
Aclt/r6868WB6/8/gwJb/V3erPvP7cID8fwJov+Z+Sg9Jm2nyH8uDjbN9hMQ
/s8RI9uCJ0qF/rMf/4x7raTAf358JSZGsYDvPzMkBmessv45P2f7vnOJ/5xV
3Ud6E/LP0X81Sk7a/fMxry+fC5dW/2fJfWSprdb/HD/kF3zI8J/X+r3pj2D9
M+9N3/w2uX+efluHnZ1f9Z/f6pw4XHn3nw3fvawZuPXPVQfXKQpc/+en557/
OHj2n3NKhUKXzP+ZpO88JK//z7c/lJvu0vznWLbjukzyPwucf+L/ev0/X16z
pvsH/z8vT3bQleT+52CF0my9Xyv/8/8AH6ojvA==
                
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.24, 0.3531726744018182, 0.6], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/8AOudbX
gTve2TMtXHnY7rveAa7riwtsud7b+5SdWbgoBMF3q43rYNuke0AepFzurb33
3d2CWfy6BwptQSre2vtbF/w7m6NzoFoEZMMb+4g9UUcNT2kfANnm/vCV/SLj
DcVT1bUPLCkAaXhhb7v2YsDPFi04P2CfoHjsI02o+U/tf51qfHjAXhOq/5H9
kz0c61Tmahw4/FUjpv/QVXvpGRcqOn6pH3gTCPLBRXu+KQxub8Jh/IP2tt7y
IgFb1aD8jfY3TbzvbxZC8HdX164VL1CFuneKvaRBRlX1WZUDDFDwM0/P/b4W
gv+wK0zEuUMZzm9dvvvhsqdKcH7cX531XM4Ifh7vnJq8BYpwvtnib56X/irA
+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L/w49k4HzF/zvn9m1UBrO
BwAckL5B
                "]]}}, {}, {}, {{}, {}}}}},
          PlotLegends -> Automatic,
          AspectRatio->1,
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{-18.4206804291575, 0},
          BaseStyle->30,
          CoordinatesToolOptions:>{"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Part[#, 2]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Part[#, 2]}& )},
          DisplayFunction->Identity,
          Frame->True,
          FrameLabel->{
            FormBox["\"NHEJ\"", TraditionalForm], 
            FormBox[
            "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm]},
          FrameStyle->Directive[
            GrayLevel[0.5], 
            Thickness[Large]],
          FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
             Automatic, Automatic}, {{{-16.11809565095832, 
                FormBox[
                 TemplateBox[{"10", 
                   RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
                FormBox[
                 TemplateBox[{"10", 
                   RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-6.907755278982137, 
                FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
                FormBox[
                 TagBox[
                  InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
                  NumberForm[#, {
                    DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-20.72326583694641, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-9.210340371976182, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-4.605170185988091, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {0., 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.302585092994046, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}}, {{-16.11809565095832, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-6.907755278982137, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-20.72326583694641, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-9.210340371976182, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-4.605170185988091, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {0., 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.302585092994046, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          FrameTicksStyle->30,
          GridLines->Automatic,
          GridLinesStyle->Directive[
            GrayLevel[0.5], 
            Thickness[Tiny], 
            Dashing[{Small, Small}]],
          ImagePadding->All,
          ImageSize->800,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{0, 1},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{
            Charting`ScaledTicks[{Log, Exp}], Automatic}], 
         TemplateBox[{
          "\"1000\"","\"5000\"","\"10000\"","\"25000\"","\"50000\"",
           "\"100000\""},
          "LineLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    FormBox["\"N\"", TraditionalForm], TraditionalForm, 
                    Editable -> True], {
                    Directive[
                    Thickness[Large], 
                    GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
                   Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[
              Thickness[Large], 
              GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.1960695736042402], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.2941043604063603]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.2941043604063603]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.2941043604063603], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1648000000000001, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24720000000000014, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.2952621124003028], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.4428931686004542]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.36467577519939387`, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.5470136627990908, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.4, 0.22461366279909056`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.6, 0.33692049419863584]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.23544844960121214`, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.3531726744018182, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.3531726744018182, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.3531726744018182, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.37551056200151484`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.5632658430022722]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.5632658430022722]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.5632658430022722], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2844273255981813, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.42664098839727194, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.42664098839727194`, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.42664098839727194`, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1756347868021214, 0.4, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2634521802031821, 0.6, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2634521802031821, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2634521802031821, 0.6, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.3156968992024241, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.47354534880363613, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.47354534880363613`, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.47354534880363613`, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3442409883972732, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5163614825959097, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5163614825959097, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5163614825959097, 0.24, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.20417887599697054`, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.3062683139954558, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.3062683139954558, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.3062683139954558, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25588323640333216`, 0.4, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3838248546049982, 0.6, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3838248546049982, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3838248546049982, 0.6, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.3959453488036374, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.5939180232054561, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.5939180232054561, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.5939180232054561, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.26399253879606255`, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.39598880819409377, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.39598880819409377`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.39598880819409377`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"N\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", "20"}], "]"}]}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.68330998193155*^9, 3.683319623073605*^9, 
  3.683399915379375*^9, 3.683404131743441*^9, 3.683404394585929*^9, 
  3.683404686059205*^9, 3.694164310104722*^9, 3.6942302471805573`*^9, 
  3.694432665765273*^9, 3.6946937574040337`*^9, 3.6947773594418583`*^9, 
  3.694778411433631*^9, 3.694993149948045*^9, 3.69499376054405*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Breaking Points Calculations", "Subsection",
 CellChangeTimes->{{3.683040231884252*^9, 3.683040257451212*^9}}],

Cell[CellGroupData[{

Cell["Linear", "Subsubsection",
 CellChangeTimes->{{3.683297065713427*^9, 3.683297069377862*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confidence", "=", 
   RowBox[{"{", 
    RowBox[{".5", ",", ".75", ",", ".85", ",", ".9", ",", ".99"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"breakingPoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"fits", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "#"}], ",", "x"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", "Quiet"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "fits", "]"}]}], "}"}]}], "]"}], "&"}], "/@", 
    "confidence"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popCoords", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"popSizes", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
    "breakingPoints"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"popSizeRho", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"popCoords", "\[IndentingNewLine]", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thicknessHigh", "]"}], ",", "i"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "colors"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"Frame", "\[Rule]", "frame"}], "\[IndentingNewLine]", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "1"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "frameTicksStyle"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N\>\"", ",", 
       "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(NHEJ\), \(crit\)]\)\>\""}], 
      "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], "\[IndentingNewLine]", ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", ",", 
    RowBox[{"FrameStyle", "\[Rule]", "frameStyle"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", "gridLinesStyle"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"ImageSize", "\[Rule]", "800"}], "\[IndentingNewLine]", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "aspectRatio"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<NHEJCriticalLinear.eps\>\"", ",", "popSizeRho", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6830402472388*^9, 3.6830402483891697`*^9}, {
   3.68329294047583*^9, 3.683292948623348*^9}, {3.6832929909871798`*^9, 
   3.683293009628076*^9}, {3.683293065514639*^9, 3.6832930906241703`*^9}, {
   3.683293222306614*^9, 3.6832932225113297`*^9}, {3.6832963065035677`*^9, 
   3.683296348344186*^9}, {3.68329646281913*^9, 3.683296513186754*^9}, {
   3.683296559736968*^9, 3.683296586968258*^9}, {3.68329680226416*^9, 
   3.683296810706636*^9}, {3.683306741554631*^9, 3.683306741731435*^9}, {
   3.6833068429544287`*^9, 3.683306848517926*^9}, {3.683399939539809*^9, 
   3.683399947004806*^9}, {3.683402268135734*^9, 3.683402283549775*^9}, 
   3.683402506434601*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
     0.019444444444444445`], Thickness[0.0075], 
     LineBox[{{4781.199815078831, 0.00008806019563931354}, {5000., 
      0.00007147455495111493}, {10000., 0.0000355456201602714}, {25000., 
      0.00001430011749095143}, {50000., 7.128219304432178*^-6}, {100000., 
      3.5256070261296334`*^-6}}]}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
     0.019444444444444445`], Thickness[0.0075], 
     LineBox[{{3143.8715209774655`, 0.00008806019563931354}, {5000., 
      0.000029664620548979047`}, {10000., 0.000014752765301634697`}, {25000., 
      5.9350850028381355`*^-6}, {50000., 2.9584783144227106`*^-6}, {100000., 
      1.4632591235647644`*^-6}}]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
     0.019444444444444445`], Thickness[0.0075], 
     LineBox[{{1000., 0.00008785067925428384}, {5000., 
      0.0000167582996552065}, {10000., 8.334212846563312*^-6}, {25000., 
      3.3528806745551557`*^-6}, {50000., 1.6713197471940141`*^-6}, {100000., 
      8.266323456059548*^-7}}]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
     0.019444444444444445`], Thickness[0.0075], 
     LineBox[{{1000., 0.000056953321657514184`}, {5000., 
      0.000010864353455177681`}, {10000., 5.403044222783985*^-6}, {25000., 
      2.1736620952522835`*^-6}, {50000., 1.0835113850284135`*^-6}, {100000., 
      5.359031742433074*^-7}}]}, 
    {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
     0.019444444444444445`], Thickness[0.0075], 
     LineBox[{{1000., 5.4327753338780954`*^-6}, {5000., 
      1.0363502909410244`*^-6}, {10000., 5.153961968699432*^-7}, {25000., 
      2.073455502083846*^-7}, {50000., 1.0335611260667918`*^-7}, {100000., 
      5.111978479295407*^-8}}]}}, {}, {}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->30,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(NHEJ\\), \\(crit\\)]\\)\"",
       TraditionalForm], None}, {
     FormBox["\"N\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0.5], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->15,
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Thickness[Tiny], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->800,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100000.}, {0, 0.00008806019563931354}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.683309982187716*^9, 3.6833196232146473`*^9, {3.683399933012144*^9, 
   3.683399960630541*^9}, 3.6834022847786627`*^9, 3.683402507686521*^9, 
   3.683404132366951*^9, 3.683404394804983*^9, 3.68340468615584*^9, 
   3.694164310922964*^9, 3.69423024756469*^9, 3.694432665877386*^9, 
   3.6946937577730503`*^9, 3.694777359607173*^9, 3.6947784115463457`*^9, 
   3.694993151552619*^9, 3.6949937608167143`*^9}],

Cell[BoxData["\<\"NHEJCriticalLinear.eps\"\>"], "Output",
 CellChangeTimes->{
  3.683309982187716*^9, 3.6833196232146473`*^9, {3.683399933012144*^9, 
   3.683399960630541*^9}, 3.6834022847786627`*^9, 3.683402507686521*^9, 
   3.683404132366951*^9, 3.683404394804983*^9, 3.68340468615584*^9, 
   3.694164310922964*^9, 3.69423024756469*^9, 3.694432665877386*^9, 
   3.6946937577730503`*^9, 3.694777359607173*^9, 3.6947784115463457`*^9, 
   3.694993151552619*^9, 3.694993761344923*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse", "Subsubsection",
 CellChangeTimes->{{3.683297052432386*^9, 3.683297057882598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"breakingPoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"fits", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "#"}], ",", "x"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", "Quiet"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "fits", "]"}]}], "}"}]}], "]"}], "&"}], "/@", 
    "confidence"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popCoords", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "popSizes"}], ",", "#"}], "}"}], "]"}], "&"}], "/@",
     "breakingPoints"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popSizeRhoInv", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"popCoords", "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thicknessLow", "]"}], ",", "i"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "colors"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "frame"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], "\[IndentingNewLine]", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "frameTicksStyle"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1/N\>\"", ",", 
        "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(NHEJ\), \(crit\)]\)\>\""}],
        "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"FrameStyle", "\[Rule]", "frameStyle"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", "gridLinesStyle"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "aspectRatio"}], "\[IndentingNewLine]",
      ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"popSizeRhoInvLeg", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"popSizeRhoInv", ",", "\[IndentingNewLine]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"colors", ",", "confidence", ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<Crash Confidence\>\""}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", "Gray", ",", "20"}], "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.683296528834141*^9, 3.683296542585759*^9}, {
   3.6832965975864964`*^9, 3.683296639921522*^9}, {3.683296669990782*^9, 
   3.683296674200671*^9}, {3.683296795292104*^9, 3.683296855072673*^9}, {
   3.683296900368039*^9, 3.683296917587624*^9}, {3.6833002087893753`*^9, 
   3.68330020918705*^9}, {3.6833100099091167`*^9, 3.6833100102653427`*^9}, 
   3.6833999725049057`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
         0.019444444444444445`], Thickness[0.001], 
         LineBox[{{0.001, 0.0003746852801920321}, {0.0002, 
          0.00007147455495111493}, {0.0001, 0.0000355456201602714}, {0.00004, 
          0.00001430011749095143}, {0.00002, 7.128219304432178*^-6}, {0.00001,
           3.5256070261296334`*^-6}}]}, 
        {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
         0.019444444444444445`], Thickness[0.001], 
         LineBox[{{0.001, 0.0001555084417074939}, {0.0002, 
          0.000029664620548979047`}, {0.0001, 0.000014752765301634697`}, {
          0.00004, 5.9350850028381355`*^-6}, {0.00002, 
          2.9584783144227106`*^-6}, {0.00001, 1.4632591235647644`*^-6}}]}, 
        {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
         0.019444444444444445`], Thickness[0.001], 
         LineBox[{{0.001, 0.00008785067925428384}, {0.0002, 
          0.0000167582996552065}, {0.0001, 8.334212846563312*^-6}, {0.00004, 
          3.3528806745551557`*^-6}, {0.00002, 1.6713197471940141`*^-6}, {
          0.00001, 8.266323456059548*^-7}}]}, 
        {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
         0.019444444444444445`], Thickness[0.001], 
         LineBox[{{0.001, 0.000056953321657514184`}, {0.0002, 
          0.000010864353455177681`}, {0.0001, 5.403044222783985*^-6}, {
          0.00004, 2.1736620952522835`*^-6}, {0.00002, 
          1.0835113850284135`*^-6}, {0.00001, 5.359031742433074*^-7}}]}, 
        {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
         0.019444444444444445`], Thickness[0.001], 
         LineBox[{{0.001, 5.4327753338780954`*^-6}, {0.0002, 
          1.0363502909410244`*^-6}, {0.0001, 5.153961968699432*^-7}, {0.00004,
           2.073455502083846*^-7}, {0.00002, 1.0335611260667918`*^-7}, {
          0.00001, 5.111978479295407*^-8}}]}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->30,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(NHEJ\\), \
\\(crit\\)]\\)\"", TraditionalForm], None}, {
         FormBox["\"1/N\"", TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->15,
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->800,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.001}, {0, 0.0003746852801920321}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{"0.5`","0.75`","0.85`","0.9`","0.99`"},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"Crash Confidence\"", TraditionalForm], 
                TraditionalForm, Editable -> True], {
                Directive[
                 Thickness[Large], 
                 GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         Directive[
          Thickness[Large], 
          GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
        Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.1960695736042402], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.2941043604063603]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.2941043604063603]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.2941043604063603], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.1648000000000001, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24720000000000014, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.2952621124003028], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.4428931686004542]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.36467577519939387`, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.5470136627990908, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.4, 0.22461366279909056`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.6, 0.33692049419863584]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.6, 0.33692049419863584`], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.23544844960121214`, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.3531726744018182, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.3531726744018182, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.3531726744018182, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.37551056200151484`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.5632658430022722]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.5632658430022722]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.5632658430022722], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.2844273255981813, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.42664098839727194, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.42664098839727194`, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.42664098839727194`, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.1756347868021214, 0.4, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.2634521802031821, 0.6, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2634521802031821, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.2634521802031821, 0.6, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.3156968992024241, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.47354534880363613, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.47354534880363613`, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.47354534880363613`, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.3442409883972732, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.5163614825959097, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5163614825959097, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5163614825959097, 0.24, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.20417887599697054`, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.3062683139954558, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.3062683139954558, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.3062683139954558, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.25588323640333216`, 0.4, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.3838248546049982, 0.6, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3838248546049982, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.3838248546049982, 0.6, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.3959453488036374, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.5939180232054561, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.5939180232054561, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.5939180232054561, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.26399253879606255`, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.39598880819409377, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.39598880819409377`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.39598880819409377`, 0.24, 0.6], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Crash Confidence\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", "20"}], "]"}]}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6833099823846188`*^9, 3.6833100110236063`*^9}, 
   3.683319623340214*^9, 3.683399973202965*^9, 3.683404133680924*^9, 
   3.68340439585161*^9, 3.6834046868897533`*^9, 3.694164312828476*^9, 
   3.694230248605631*^9, 3.694432666591075*^9, 3.6946937588114433`*^9, 
   3.694777360308269*^9, 3.694778412197916*^9, 3.694993156639439*^9, 
   3.694993761683723*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear (Inverse) Fits", "Subsubsection",
 CellChangeTimes->{{3.683308706675156*^9, 3.683308711889504*^9}, {
  3.683309188925645*^9, 3.683309193692389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popLinearFits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"#", ",", 
       RowBox[{"m", "*", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "c"}], "}"}], ",", "x"}], "]"}], "&"}], "/@", 
    "popCoords"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"popLinearFitsNormal", "=", 
  RowBox[{"Normal", "/@", "popLinearFits"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitProbabilitiesPlots", "=", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"popLinearFits", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "//", "Normal"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Callout", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"popLinearFits", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "//", "Normal"}], ",", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"popLinearFitsNormal", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<1/N\>\""}]}], "]"}], ",", 
           "Top", ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"12.5", ",", "Gray"}], "]"}]}], ",", 
           RowBox[{"LeaderSize", "\[Rule]", "10"}], ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<None\>\""}], ",", 
           RowBox[{"CalloutMarker", "\[Rule]", "\"\<CirclePoint\>\""}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"White", ",", 
              RowBox[{"Opacity", "[", "0", "]"}]}], "]"}]}]}], "]"}], "*)"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", ".001"}], "}"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "thicknessHigh", "]"}], ",", 
           RowBox[{"colors", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"Frame", "\[Rule]", "frame"}], "\[IndentingNewLine]", ",", 
        RowBox[{"FrameTicksStyle", "\[Rule]", "baseStyle"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<1/N\>\"", ",", 
           "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(NHEJ\), \
\(crit\)]\)\>\""}], "}"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"BaseStyle", "\[Rule]", "baseStyle"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"FrameStyle", "\[Rule]", "frameStyle"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"GridLinesStyle", "\[Rule]", "gridLinesStyle"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], "\[IndentingNewLine]", ",", 
        RowBox[{"AspectRatio", "\[Rule]", "aspectRatio"}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"popLinearFits", "//", "Length"}]}], "}"}]}], "]"}], "//", 
    "Show"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"legends", "=", 
    RowBox[{"StringJoin", "@@@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToString", "/@", "confidence"}], ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"\"\< :: [\>\"", ",", 
          RowBox[{"Length", "[", "confidence", "]"}]}], "]"}], ",", 
        RowBox[{"ToString", "/@", 
         RowBox[{"StandardForm", "/@", "popLinearFitsNormal"}]}], ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"\"\<]\>\"", ",", 
          RowBox[{"Length", "[", "confidence", "]"}]}], "]"}]}], "}"}], 
      "]"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legends", "=", 
   RowBox[{"ToString", "/@", "confidence"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/e9XdltU4WvHnKPLekH0kVuh00H0hYblC0D0bqln
S0A0z2n2FSB6zpyru0C0yB6u3SD61BOvAyA6haHjEIgu3HnvQzyQfie+/QeI
1mqRVUgA0ivmKINpg6sMkSB6otb3KBCt08ij0w6kOeR2G4Docwc/W4DoZRIu
ViC6atU1OxC9yW6PPYh+ZHnMGUQXlb8OANHs3M9DQXTN6i0RYHN2n4sD0SaK
p4pAdJ7GkjIQHRLi1wyij93L6ALRewwOg+knKQf6wOpjavtB9LuuuGkgesui
d3NBtLOO8CIQLVUlsg9E9xmUHwXRE2efOQGif+5bKt8Bcq/1XmUQ7fRw90qr
dmB4Ln0FpqXUZ+0G0dNeyuwB0f/c2A6C6AfmxYdBNADcmsbs
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.37380912304369374`", " ", "x"}], ",", 
   RowBox[{"0.1551448036356723`", " ", "x"}], ",", 
   RowBox[{"0.0876452508462728`", " ", "x"}], ",", 
   RowBox[{"0.05682014306062276`", " ", "x"}], ",", 
   RowBox[{"0.005420071432241891`", " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683319750294067*^9, 3.683320065724094*^9, {3.683320527002614*^9, 
   3.683320536177709*^9}, 3.683399984977435*^9, {3.683400055777635*^9, 
   3.683400070399427*^9}, {3.683400136015479*^9, 3.683400147032815*^9}, 
   3.68340019052861*^9, {3.683400230483783*^9, 3.683400235387937*^9}, {
   3.6834002717006197`*^9, 3.683400328000208*^9}, {3.683400368522828*^9, 
   3.683400390187209*^9}, {3.6834004460540447`*^9, 3.683400522148882*^9}, {
   3.683400553500431*^9, 3.6834005987790947`*^9}, {3.6834006506463213`*^9, 
   3.683400731181068*^9}, 3.683400790959846*^9, 3.683400829278311*^9, {
   3.683400885956807*^9, 3.683400909360444*^9}, 3.6834009440469627`*^9, {
   3.683400979302*^9, 3.68340100480789*^9}, {3.683401061616355*^9, 
   3.683401067545095*^9}, {3.683401097582418*^9, 3.683401202064046*^9}, 
   3.683401286848999*^9, {3.683402006848134*^9, 3.6834020144175653`*^9}, 
   3.683404133831785*^9, 3.683404396004506*^9, 3.683404686947871*^9, 
   3.694164312974434*^9, 3.694230248959972*^9, 3.694432666649213*^9, 
   3.694693759106942*^9, 3.694777360446575*^9, 3.694777740065035*^9, {
   3.694777871077097*^9, 3.694777884282646*^9}, 3.694778412253025*^9, 
   3.694993158749916*^9, 3.694993761941792*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], Opacity[1.],
       LineBox[CompressedData["
1:eJwVj3k4lAkAh0UxQweiKFeSMGYNZvia+H6ucuT4opQNgxbJEWYLkSQ2D1uy
zeyadaxFSNJGbDtFqTWtNh2aR0uODtJqisqVwrZ/vM/73/s877qwA77h8nJy
cl5f+N88hXajvfHN9rRYQXeRpMwePIt6nlBAVkaIWiYl6WSTZlSnlbCS9F1q
VtEgOUWOjy8J0hFeJk157zULJKXkyWCpkZrwT1KQ4++TIaknA4VXc1SEUtKj
hCZLkrSSt1gXxTThEHm2OlTMl9wjk+Zr/JSEE+Qj81O/JkgGyDNsn8SyxCUQ
KYbkDtHGyTb+GWZy/wrot9a713VNk2WCkFcLdE00Pk/u23VwgVy0emmFqmAN
VkXnPH48oACvYJ3H6df1MZR5JN/5mhJKqgxm++oMsT4zIDJbpoLq1AuZL2M2
YKIoRVC8WBUbG2W3S+c24umSosAfx9SQTDYfa2k3Q9aLi+xPChogza1mcoOZ
sKS0JxYmNCFKqtnnMmoBw8LQGvu+1QjLkxo3+Fvirl9JzEuZNqyX1ieJyqxw
tJSpZdG7FrLmu/JsRTZGAy89ej6uiwOnX+W6hHMgmlqZdX9OH8yioIS6Ohuc
yx9eVv/BAI/ur/7h9goCz/rFz0zn1uEyh6HG3bMJJXzuuckJQxxpP36Hd5ML
m1uNM4cWGUE1qyfjk6EdEjKKb2rQN2CAnyN8G20PVrZFhvzCBghPpg0JHpC4
63yt/Sx9I5xlQ24dyx0gc/8wXyhvAgNTZT2FBgfUtYgaaqZM8G52++lVex3h
/nrT29gFU4SESy7tpDkhOiRL9/iUGW59ExQfd9UJUfl/Sb3kzZH3KZHpFO0M
unmaIofOxLhZk8hxhQuYqr2MmHkmPMa0K9a0ucCi3rJnN80Cjp7n9+hHbkFv
h3aLhxwLJQ5X1QfpWxHL7/KYTmHhTcebiGTxVox9PFE8P8fCk9ee++15rrCu
VH/FTLFES/k95T41N4Qzfp7+fd4Sdu/Tvq664oaA7im5/alWMOg5V8MIdIce
kedaO2mFmR0fz+Qu88DDQzq+Ww5bIy7q4FeajR5w7cn0p01Z4x91jYiUiG04
r/VSzziNjWo/y+LCVZ4YXH7MqGuBjZXM1GMvxJ7oNnm3vuowB/yiEQVarBfE
+sEj0gUOEsozOLtXeiOMW1bJSLOB1KEwfG+zN3pV1vyiOmUDxrddVm6RPnAQ
nw6iDttCtax4l7kihajv+zSvTNpCepzfX6xE4cEMoTs4bQtRpMfeZXQKRLjQ
SHHWFoYWM3FvVSjQSG/rHfO2YLf6ffebGoWasevUuCKBgD7lJrYuhVHfijwT
LQLlWinq9mwK0dr7F4m4BCI++xRe4FDoypbQbtgRYDw11tOzpbD5vaHqCEng
crXUdGETBeW/n+hxnAlIbFiObaBQm+Zl93AbgdEdIwe2bPvSH2Ql0YMI1BOt
k02eFLZ7nkxn8QjwdYSpxt4UxFf+zd4VSuDzC6cTStsp5BaUC86GE1jOLy3t
8Kdg5qzR4BhHoMv/oBF3N4WCi/F/7Isn8BPXs7Y2gMLs2s4b+YkEDORnm/IC
KdyZyL7ff4jA8PCDzZ+DKFiFPu9enEKgtqO6LYZHoaiTHGCkEoi7kO7aH0JB
nls07HuEgHXBzk6vsC//VdOylKME/gOzdB+S
       "]]}}, {}, {}}, {{{}, {}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], Opacity[
      1.], LineBox[CompressedData["
1:eJwVy3k4lAkAx3GNdY1zyDjSGDNvkzAJM5XJvD8k9/ESHY4UuUoUCakeHSSj
HsVs5EgSmsVWjh2kHh1KtuOp2ZWi2gflQaW2Nitp2z++z/evj0VUclAMTUlJ
ye9H/z9S+TYRvbNNPOIQ2n95QCJGpG1TpLSYVLuV28guSCBbDRPu20tryCBD
7syYJJOcmlKJMJO2kNPiXez7kmPk8U0KgiG9RfoElThcl5SS4dLOPE2pgtw9
aC2WSy6SN5f92qEuHSGPnfvc3SJpJ9Pn6teqST+RBkdCf2qW9JJFgoCUqhQV
nDoh7b9a+YzsTi3iZwzpgvmiyCKsZ5isKt489l3DECkbE2dfmY2T84y0zusV
m6KtkDDec2CK9Ntk1n/gujm+JFas6G7+m6yoZc8MNnCQm1yi/JD/hazLajz0
OnERwokFUedOz5CLmyfvVH5bjD2Blu7tPd/IDLLtYNdtK+x8HDbhVaEE0sZ+
On8THx7y+H8GHGkoTa+Pdxu3hUt6u7fvA2VESRS8K+vsEO3l89k8RwUOWk3p
pVX2qF9fHfUzSw2Tbb/TBKoCGGSKeEnP1JFcOJbvFiPE+VSmg+UJOvhlEbsa
GpYjWPYbLYfQwpOHRqfu6K4E/1Op5eohbbQIrRmiMEdY7nVh1GToYv/tw/ci
b4hwQcPQ0qFMD3pHBrK/cpxwx9U6UWUPAy9S86Tvtovx1aSGscRVH9Lj+0aK
H5G4uVcctd/cAKsnRzx7dZxRnuk4n/vOAOwldJbyFWeoxPSPt8vn48NMYCEz
2gXKz6SJB4sNsTmm53KIuisYb9sCzmxh4ubWiJ1Jna5oOTY9NAwjSL6m8F23
r8aY/mAhy9QYU1atpS66buCLOBdko8bwfm9y3rTbDaoTeVvjbpjAxfeXMPO4
NZhyDMpJKzRFhXOn/ksNdySmdd3bHboAb3vfxmZ0uCNL5NVZIzTD8wnfbeJI
D1RUrNDm0Raiq/oBfZDhicB8d/rTlwvh9HFfaK3cE0xDefzzJhbYAxfrrcO9
sKOgb+Jhpjmmg/8tytf2RkPP94IZKzaSEtKWGjZ7w4rZp2g9ycZT/fmxmbE+
SJHxUjTmWaBurV15CdMXNOGTcyFJFjDgZx0c7vBFmY7dIW+FBVLL3iir7/DD
nI25vN+Vg13V2cINBv7YduZapbaMA4VzSUx0mz9Yc01GTrpcWO9+bO8ZF4Dy
WtvXtP1c6FWVr7dRpcCt3BKTMsyF4nDqULkaBeX3BfdWjXJRGucdra1BYQRy
W5U3XHBsp5PeaVKo+Utn5vQ4F4Jra3MvMSgQi66e6PrAxcZBeqtgIQVeA1Ou
rkSg2jhTXyygYNXRRz9rRiB2NqCkUUhBQ/NLcjyLgPUrHou1gsJ4GOcPOzaB
ljrFku+OFGTfMs7e4hLoWb7MpRs/vAtPMG5FYDz4TfIaHwrWd7MjhI4EmlZe
+9zqS0HTpOHGnIhAqpk0i+dPYTKhf/FdJwKzw65H1QIpNGgu/RjqTEAntbKy
dx0Fm4DnudkeBB6vSyNEGyhoValOenkROC3ylck2/vBTdoEGPgTYtJlWSTiF
xlN5C2r9CYyOPlo1G0Hh+HBzdjJFQNZb150YSSFJ8HJ0ZRCBpMYDHkObKfjn
0H1owQQcTobc94uisPRP4aW+EAL/ATJ7BQg=
       "]]}}, {}, {}}, {{{}, {}, 
     {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], Opacity[1.],
       LineBox[CompressedData["
1:eJwV0fk/1HkAx3FHuWNcn0qt6zFRIRES+byRSgy+Ujoco+TayjGTxaZZqoc8
HD0qpsiR8EAWpYyKVFisXbXSlLXNRKUclWg7JNW2P7wezz/gZbQ7ZnOYnIyM
jNf3/pcr38EOjW10ehAlkBMk/OIErmUdV5hLM8POZgdLA6lIN+qOtbCcHg8p
LjaQ7qOTk3ODFgsbKCvY0FRGmkyzg8VsTeFvtDdw195JSRYNFDanqwrF1EqS
mj0qKaTtKy82KQmH6ZNFp4qHJTU04WuVn6LwHb3uqFf5VHKD5tj48Ep4cyGn
H+9apn2XtvJzLBKlGogs27xUtO0hLckNGf2mrIvo0YCq8RQplZ2vVsbK1YOv
53TS7dKn1Ct4cb/glgFO1+SOXHJ9QYsqDGckNcaIa/vQ5LtynFYerD38Yt8S
FMTeyyhQnaCmV151FX8xRaIOfNf3TdJE2pja0rEcEx7TGsKOt5SaW09nBFsg
Ke0s7+qZdzQ/oSrSbdwS5upJfnUhH+juTLHJZX8rLI91iDjETNNVanUJ+SXW
oP3D+gYGM/RVY4+cjYINihfwlPN1ZmnMidEMtzBbLKlw5I3IfKUWBUFxNTV2
aLWfECj1fKP3/5p/qkvDHuI+l0GZQRk02JppOgSswX1V2XvhXbI41HHkD26b
Az7WW0ns2+XAOjqQ8tl4LSwFKSbxTfJ4zE8XTux1wlRPe5ve+TkQZicP5/ZS
/JOemGheMBfrXg27d6s7w6vLKKXyqAIMl6noy192xn2zsc6sKEVMzfieIKEu
EHwxMn28SwkhYZ31W5VcIfL1GcjbpIz2PUGx0c2u0NSeKL/lpoLMzzwL173r
kDpTfZFxVMXkclG+i4YbkvcEqnkaqcHjzcIyvVY3FDn+crhebx5cOL8GGESs
h7vwtEeqvDqKnJu1BpU3QFG3x7d5RB2vu1+HJzZtwEtZPm/XoAYeveT86MTd
iDr7Yzz7UBZaSu+qSDTdMV2Rbf/TEAtr3ybvrLjmjnT/45WRWzVhOHChyixw
E4wX6tuxftfE9JZPORnzPOB9KvzefjctREfFr9C94oHbnAu6Kde08LeWTnhS
uCc6WsrD3e20UelnVZhHOBC7WPZ31GtD2+Jg6rMmDpYqNkx+ZOuAXzAir7Tf
C+pHpsjQeR3ElabYbtf2hqPzshfJRBdi57yw0EZvxLEmxXfTdWF2oM/aPcIH
Dmdieh/OIWCVFG4zV2Dgzh07kJNIID7ClxYqMghWb6F5PxPkR3iEzlNmEN9y
QqkomcDYcjp6QpXB+UX2hRUpBDY3/dIuaTKY6U9rv55OsEOiIrL5gUENw9Ya
yiMoXZCk5WTDgOXKvWh+nSB81iev1paByZR1klUzgdmQib7+agZOJQrr7FoI
GirFy76tYRD1tfYhWgk67Va6tIJBW9Psl83dBONbRmLWezLgrzrLSRog3z/c
fC/iMEh/up8IHhHwFwsPmngzOHfSZeiwlGD2mesxRV8Gf74Z5Wc9IVDnFxd3
+zNg16wuODdG0Ocfz3bYzsAhQDWs/CXBGQdOdfUOBozK4IoLrwkM5WZEmYEM
DkWmtV2eInj+vNdxNohB7vydWVf/Jajurmzdx2VQ3Wnhf+M9QXStYKM0hMHt
eFnD1o8Eq05uveO1m0E/+8FYxyeC/wBRPhrQ
       "]]}}, {}, {}}, {{{}, {}, 
     {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], Opacity[1.],
       LineBox[CompressedData["
1:eJwVxXk4lHkAB3D3/Raidlsr5CjTLMaoqPl9Mchq8KKkdYwMo0xRJle6xHaw
bQezeMLOTgcjXWTq4UFYtXqybM2zy5OjVjbliORJiN394/N8LGOSguPUVFRU
/P/z/3z1NmvBfgVnoNWxfqfwIAd8h5t8SQHZFTwTmKUIJrWmezpYkitk8blX
dpgihkxMaEaaSe6STosRMy9FMjkbpbQ2kvxK1nMb37gqTpAISf1pfYmSJCjt
utiKi6TV8VadjuQVUS+N4LIUMpK2UBGiLflAglQ/zjsqqkk+OzBZmqyJFoFK
9bVjraRZnM9M71uKhvg6m9UzT4i0IHp4UdcUA74Mn9MWz4jqCoPLhgUroZla
aFO3tpv4R5n9dbRpFS45m9sM9vaS0msWs71VVries6tCMPuClGfeOPHPXhvo
ZYzOHjg0SOxqRh+VfbbDL7U5fZmdQySdKLIa2uyxdYEROhg6TMg61kxuFBPM
cy+ifGrekuK0it1ebx1wQe5/pU19jMTkKW2rQ52g3dV+THbyHXE2uJlWLGUh
4md5CufdBBlVPFFja7HR0JuSGsZ+T5LOD+d6xbmgP6pMkiWeIsxLkQeqqtbD
7PuOw2tKP5BnnSsuPlq6EQInDYeFgWly14Vh5BbuiodZHvIg6iM50pb9mN/i
Buewk+PPQmaIYU7P8TmrzYgW2wXHFnwi/eLTknERB3JW55HkplkiOXv4VUEX
wXza0YO31OcJd/SVb/sSd4h2sZ0TWJ+JxVo9c/VqdxSf8zF0Dl8gk7NB55cL
PNDFjb5vX7pIouMe3tmu4wnjAHeTrlgVtMZG7k+s94QHR+kk01ZF3lwy01PE
xR8BP0Vllqtiwr622GOpF/ZVhyflb1aD37svL69s9oJhz5Uhz341ePCuh6+K
98aDoEk4paij1L3eeEDXB12jIrmtrgbG2seE6XU+GPJLSK+Ra+D5CC+Bw98C
nTkR4xg00SD7Xa/XyBeOiZPcv19qYvP7w99du+8LofMh95wMLVj0yCsYEd9i
fqUTj7lEGzPbPuXnUn4obBM17LuljcQ9Kd+Y1vjBvUVuPOatg25jE2GGcCvG
skQd6m90UB7iVFK0nIc5QXih5RldLGNmZg3W8bCiKMD7qLkexJdeq+vs88eG
c21hyQ/0cEB23CVsWQCE3aCv7tCH0r0oTqAIwDR3OHRgRB+Mg09ZvvGBOJNs
0nr7BwMYSkt2rNOiwZjiLmu2oqDMFveVaNOQVHWs5ttQKI73E1C6NFSFO9if
7ShYOcwkjuvT+LM7YbsrkwK7MeTkbSMaWY0XCu9soLCzV6+W/TWNnjMDX8l4
FGRfZBhz2DROWWRaZ6dSEM4HFt1woTHZo+FimUGB8cLW3HwDjcj8H72bMinc
LVeuXXSlwdKSCeeOU3i43tGjGTT6Rn6rEOdReLvtdZL3VhrO95YzY6UUbm5s
nK7l0SjdL+WoXaYgNpNk2gbQ0LW3D5BepTA/6HlKO4hGfwknqbeSwhJxWVl7
KI3cE7F3ttVSeBqaYu0WRmNq03jz+3sUCt14lZU7afCn056er6NgoTZbmxdB
w2V33tSTJgpDQ12b5iNpSC1NNUQtFCrby5v38mkYPC8z0W2jkHjj6Ja+aBqp
BWtsyh9RcL6wvcM/hsZL/2oX78cU/gVWChjP
       "]]}}, {}, {}}, {{{}, {}, 
     {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1Pk71AkcwHFrclaMJG25mhVPIUfD5vp8kFyN8W0Vco0lJFdMomckR7aW
dRSzkSPUE8lRrmpmJcdgQq7xLUXtli4kevSsNLLtD+/n9R+8twVG/xIsKSEh
4fq9/2VRBNpBx1usRwV61dk0tEaWYR2Lmw9sNV16XI4aNKuEDZhwr8HWXrmP
Zjn6MD8v5afGbYJ5dU6/ao4VZPmLtJW4XTDeu9tSNocBvlz++bVcETA1cmMl
cnyh06ieJ8udAllnyBZnR0D8typ3Ge4ihPirFC9nJ0Ie3S22LFYK66aiok90
ZEE7O88gYVIRyzd++yNk659Qlh/wblVOBbOovAlH4xL4QXXdVWr+Fvwp3cOZ
fbwCXP3VHie1aWL3vsvSRdLXoeS61vJEDQ3d0r+cLH9/Ayo5talvIrZjVUze
kVReLeg2zvaUruji1JDl08lrtyABWlJaBTsxtIr/7P3FBgB9k6UMfwMcKA9Q
oAU0QWF81VH7aUMsXqg446jdAoGZIp0GD2N8LsF2mVC4C7vX1cUXlpngGpOj
DiVP7sFsS78kXZqOxbSZooFePkTnvsuwDzbF0rC1RjP1rWBQ5BdTU2OGqSPE
Z/rJNhgdVL3Yo7gHI1eU5ONvP4AmUz0lCx9zzKApNIRdaofTgrSHrA4LDNAd
ls7P7QDq2fHkrzQrDH/8cpme3gnP2ee5c+HWeHTzOZmIsC7gZiVO5Q8Baph/
evA0QAB7Z6echAo22D398eILx27Q2iGvQWmwwXJHqzU+O3tgYflA7qYgWzQ7
60ZT0OqFgODu24dk7fCvA5+9PKWE0HnE73gU3w5Xvv1q9WRFCJlfYw3swvdi
jKd62+DCQ5jf2Vxoq2iPpE24t99YH7h8/PHqlnZ7/FcuuYLW3w+2jJs+mqH7
UPaILiWpYQBKbPgbXsg5oGuYOoXIfwQfhB9CEngOyGA+rT/8+yA8m2Ecs2Y5
oubLfJ7YbAhaKx7JTyg54eK6Mva7hiGw+pToff2uE9omL+65ojMMWuM3qvR8
nXGH87yrUsEwLB38kpex3gXnUtzMNZVHICosbpdKowvqU5aMltJH4MmGjSGn
QvajwyJlNUJyFCrdjYsLNjFw2eKOWkniKCgbcFJe8Rio+7DRoWBuFNhFbymy
ka5oLFR2NDwmgpiKZFMvZSY2UVvdL0yKQGRTEBzUwsTh2vW36phjoHdixMQp
1A37eO0vQ4VjQC0r9tSXJhCobdtmLUkQpbEni2UITNxyI2HGmoTCUJeg9XIE
8rXzBqeRBJrhUtTcWgLNzUNPv99LAv2++2+3lAikByqOv9lPwuEJ+Wa6OoEG
Tazcf3xIqNh8aoM1nUA1L4lVkkNCiNitoNaUQO/A6UPkaRL0/tbR0PiZwMsR
opqxMyQ0VYp2rJoTqJpS5S1KI6HbzMi2HQlUriZahjNJmD74NnrffgLlxWWR
/UUk1O25/7mZQaCTdGZXXwn5/Qtcjg6TwHPUuK19V0gQv7I7J3OAQKntzkLh
VRIU2KWlQg8CJZgL2j03SRjxiNO28CIQvZ5xumtJuGTBqK4+TGBSoGBEUE+C
luRyc6YvgeKThcldjSS8fj1kKfYj0DIl7XFnMwnVwsr2CBaBnMzIXZ13SIiq
TXKcDCDwHtczveMeCbsvHBpwDSTwyxXbiXY+Cf8BG404bg==
       "]]}}, {}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->30,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(NHEJ\\), \\(crit\\)]\\)\"",
       TraditionalForm], None}, {
     FormBox["\"1/N\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0.5], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->30,
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Thickness[Tiny], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  ImageSize->800,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.001}, {0., 0.00037380911541493614`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.683319750294067*^9, 3.683320065724094*^9, {3.683320527002614*^9, 
   3.683320536177709*^9}, 3.683399984977435*^9, {3.683400055777635*^9, 
   3.683400070399427*^9}, {3.683400136015479*^9, 3.683400147032815*^9}, 
   3.68340019052861*^9, {3.683400230483783*^9, 3.683400235387937*^9}, {
   3.6834002717006197`*^9, 3.683400328000208*^9}, {3.683400368522828*^9, 
   3.683400390187209*^9}, {3.6834004460540447`*^9, 3.683400522148882*^9}, {
   3.683400553500431*^9, 3.6834005987790947`*^9}, {3.6834006506463213`*^9, 
   3.683400731181068*^9}, 3.683400790959846*^9, 3.683400829278311*^9, {
   3.683400885956807*^9, 3.683400909360444*^9}, 3.6834009440469627`*^9, {
   3.683400979302*^9, 3.68340100480789*^9}, {3.683401061616355*^9, 
   3.683401067545095*^9}, {3.683401097582418*^9, 3.683401202064046*^9}, 
   3.683401286848999*^9, {3.683402006848134*^9, 3.6834020144175653`*^9}, 
   3.683404133831785*^9, 3.683404396004506*^9, 3.683404686947871*^9, 
   3.694164312974434*^9, 3.694230248959972*^9, 3.694432666649213*^9, 
   3.694693759106942*^9, 3.694777360446575*^9, 3.694777740065035*^9, {
   3.694777871077097*^9, 3.694777884282646*^9}, 3.694778412253025*^9, 
   3.694993158749916*^9, 3.694993762197474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"linearFitsPlots", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"fitProbabilitiesPlots", ",", "popSizeRhoInv", ",", 
        RowBox[{"ImagePadding", "\[Rule]", "All"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"colors", ",", "legends", ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<Crash Confidence\>\""}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", "Gray", ",", "20"}], "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{"colors", ",", "legends", ",", 
         RowBox[{
         "LegendLabel", "\[Rule]", 
          "\"\<Crash Confidence :: [Linear Regression]\>\""}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Thick", ",", "Gray", ",", "20"}], "]"}]}]}], "]"}], "}"}],
       "*)"}], "\[IndentingNewLine]", "}"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<NHEJCriticalLog.png\>\"", ",", "linearFitsPlots", ",", 
   RowBox[{"ImagePadding", "\[Rule]", "50"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683309038365326*^9, 3.683309047039711*^9}, {
  3.683309089979023*^9, 3.6833091225400248`*^9}, {3.6833200756861973`*^9, 
  3.6833201024787827`*^9}, {3.683400119136898*^9, 3.683400125052302*^9}, {
  3.683401221693009*^9, 3.683401252723385*^9}, {3.683402042322754*^9, 
  3.683402157372219*^9}, {3.683402192374155*^9, 3.683402192798997*^9}, {
  3.683402299131105*^9, 3.683402299492173*^9}, {3.6947776872168217`*^9, 
  3.6947776906858873`*^9}, {3.6947779214344378`*^9, 3.694777921861904*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{{{}, {}, 
          {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVj3k4lAkAh0UxQweiKFeSMGYNZvia+H6ucuT4opQNgxbJEWYLkSQ2D1uy
zeyadaxFSNJGbDtFqTWtNh2aR0uODtJqisqVwrZ/vM/73/s877qwA77h8nJy
cl5f+N88hXajvfHN9rRYQXeRpMwePIt6nlBAVkaIWiYl6WSTZlSnlbCS9F1q
VtEgOUWOjy8J0hFeJk157zULJKXkyWCpkZrwT1KQ4++TIaknA4VXc1SEUtKj
hCZLkrSSt1gXxTThEHm2OlTMl9wjk+Zr/JSEE+Qj81O/JkgGyDNsn8SyxCUQ
KYbkDtHGyTb+GWZy/wrot9a713VNk2WCkFcLdE00Pk/u23VwgVy0emmFqmAN
VkXnPH48oACvYJ3H6df1MZR5JN/5mhJKqgxm++oMsT4zIDJbpoLq1AuZL2M2
YKIoRVC8WBUbG2W3S+c24umSosAfx9SQTDYfa2k3Q9aLi+xPChogza1mcoOZ
sKS0JxYmNCFKqtnnMmoBw8LQGvu+1QjLkxo3+Fvirl9JzEuZNqyX1ieJyqxw
tJSpZdG7FrLmu/JsRTZGAy89ej6uiwOnX+W6hHMgmlqZdX9OH8yioIS6Ohuc
yx9eVv/BAI/ur/7h9goCz/rFz0zn1uEyh6HG3bMJJXzuuckJQxxpP36Hd5ML
m1uNM4cWGUE1qyfjk6EdEjKKb2rQN2CAnyN8G20PVrZFhvzCBghPpg0JHpC4
63yt/Sx9I5xlQ24dyx0gc/8wXyhvAgNTZT2FBgfUtYgaaqZM8G52++lVex3h
/nrT29gFU4SESy7tpDkhOiRL9/iUGW59ExQfd9UJUfl/Sb3kzZH3KZHpFO0M
unmaIofOxLhZk8hxhQuYqr2MmHkmPMa0K9a0ucCi3rJnN80Cjp7n9+hHbkFv
h3aLhxwLJQ5X1QfpWxHL7/KYTmHhTcebiGTxVox9PFE8P8fCk9ee++15rrCu
VH/FTLFES/k95T41N4Qzfp7+fd4Sdu/Tvq664oaA7im5/alWMOg5V8MIdIce
kedaO2mFmR0fz+Qu88DDQzq+Ww5bIy7q4FeajR5w7cn0p01Z4x91jYiUiG04
r/VSzziNjWo/y+LCVZ4YXH7MqGuBjZXM1GMvxJ7oNnm3vuowB/yiEQVarBfE
+sEj0gUOEsozOLtXeiOMW1bJSLOB1KEwfG+zN3pV1vyiOmUDxrddVm6RPnAQ
nw6iDttCtax4l7kihajv+zSvTNpCepzfX6xE4cEMoTs4bQtRpMfeZXQKRLjQ
SHHWFoYWM3FvVSjQSG/rHfO2YLf6ffebGoWasevUuCKBgD7lJrYuhVHfijwT
LQLlWinq9mwK0dr7F4m4BCI++xRe4FDoypbQbtgRYDw11tOzpbD5vaHqCEng
crXUdGETBeW/n+hxnAlIbFiObaBQm+Zl93AbgdEdIwe2bPvSH2Ql0YMI1BOt
k02eFLZ7nkxn8QjwdYSpxt4UxFf+zd4VSuDzC6cTStsp5BaUC86GE1jOLy3t
8Kdg5qzR4BhHoMv/oBF3N4WCi/F/7Isn8BPXs7Y2gMLs2s4b+YkEDORnm/IC
KdyZyL7ff4jA8PCDzZ+DKFiFPu9enEKgtqO6LYZHoaiTHGCkEoi7kO7aH0JB
nls07HuEgHXBzk6vsC//VdOylKME/gOzdB+S
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVy3k4lAkAx3GNdY1zyDjSGDNvkzAJM5XJvD8k9/ESHY4UuUoUCakeHSSj
HsVs5EgSmsVWjh2kHh1KtuOp2ZWi2gflQaW2Nitp2z++z/evj0VUclAMTUlJ
ye9H/z9S+TYRvbNNPOIQ2n95QCJGpG1TpLSYVLuV28guSCBbDRPu20tryCBD
7syYJJOcmlKJMJO2kNPiXez7kmPk8U0KgiG9RfoElThcl5SS4dLOPE2pgtw9
aC2WSy6SN5f92qEuHSGPnfvc3SJpJ9Pn6teqST+RBkdCf2qW9JJFgoCUqhQV
nDoh7b9a+YzsTi3iZwzpgvmiyCKsZ5isKt489l3DECkbE2dfmY2T84y0zusV
m6KtkDDec2CK9Ntk1n/gujm+JFas6G7+m6yoZc8MNnCQm1yi/JD/hazLajz0
OnERwokFUedOz5CLmyfvVH5bjD2Blu7tPd/IDLLtYNdtK+x8HDbhVaEE0sZ+
On8THx7y+H8GHGkoTa+Pdxu3hUt6u7fvA2VESRS8K+vsEO3l89k8RwUOWk3p
pVX2qF9fHfUzSw2Tbb/TBKoCGGSKeEnP1JFcOJbvFiPE+VSmg+UJOvhlEbsa
GpYjWPYbLYfQwpOHRqfu6K4E/1Op5eohbbQIrRmiMEdY7nVh1GToYv/tw/ci
b4hwQcPQ0qFMD3pHBrK/cpxwx9U6UWUPAy9S86Tvtovx1aSGscRVH9Lj+0aK
H5G4uVcctd/cAKsnRzx7dZxRnuk4n/vOAOwldJbyFWeoxPSPt8vn48NMYCEz
2gXKz6SJB4sNsTmm53KIuisYb9sCzmxh4ubWiJ1Jna5oOTY9NAwjSL6m8F23
r8aY/mAhy9QYU1atpS66buCLOBdko8bwfm9y3rTbDaoTeVvjbpjAxfeXMPO4
NZhyDMpJKzRFhXOn/ksNdySmdd3bHboAb3vfxmZ0uCNL5NVZIzTD8wnfbeJI
D1RUrNDm0Raiq/oBfZDhicB8d/rTlwvh9HFfaK3cE0xDefzzJhbYAxfrrcO9
sKOgb+Jhpjmmg/8tytf2RkPP94IZKzaSEtKWGjZ7w4rZp2g9ycZT/fmxmbE+
SJHxUjTmWaBurV15CdMXNOGTcyFJFjDgZx0c7vBFmY7dIW+FBVLL3iir7/DD
nI25vN+Vg13V2cINBv7YduZapbaMA4VzSUx0mz9Yc01GTrpcWO9+bO8ZF4Dy
WtvXtP1c6FWVr7dRpcCt3BKTMsyF4nDqULkaBeX3BfdWjXJRGucdra1BYQRy
W5U3XHBsp5PeaVKo+Utn5vQ4F4Jra3MvMSgQi66e6PrAxcZBeqtgIQVeA1Ou
rkSg2jhTXyygYNXRRz9rRiB2NqCkUUhBQ/NLcjyLgPUrHou1gsJ4GOcPOzaB
ljrFku+OFGTfMs7e4hLoWb7MpRs/vAtPMG5FYDz4TfIaHwrWd7MjhI4EmlZe
+9zqS0HTpOHGnIhAqpk0i+dPYTKhf/FdJwKzw65H1QIpNGgu/RjqTEAntbKy
dx0Fm4DnudkeBB6vSyNEGyhoValOenkROC3ylck2/vBTdoEGPgTYtJlWSTiF
xlN5C2r9CYyOPlo1G0Hh+HBzdjJFQNZb150YSSFJ8HJ0ZRCBpMYDHkObKfjn
0H1owQQcTobc94uisPRP4aW+EAL/ATJ7BQg=
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwV0fk/1HkAx3FHuWNcn0qt6zFRIRES+byRSgy+Ujoco+TayjGTxaZZqoc8
HD0qpsiR8EAWpYyKVFisXbXSlLXNRKUclWg7JNW2P7wezz/gZbQ7ZnOYnIyM
jNf3/pcr38EOjW10ehAlkBMk/OIErmUdV5hLM8POZgdLA6lIN+qOtbCcHg8p
LjaQ7qOTk3ODFgsbKCvY0FRGmkyzg8VsTeFvtDdw195JSRYNFDanqwrF1EqS
mj0qKaTtKy82KQmH6ZNFp4qHJTU04WuVn6LwHb3uqFf5VHKD5tj48Ep4cyGn
H+9apn2XtvJzLBKlGogs27xUtO0hLckNGf2mrIvo0YCq8RQplZ2vVsbK1YOv
53TS7dKn1Ct4cb/glgFO1+SOXHJ9QYsqDGckNcaIa/vQ5LtynFYerD38Yt8S
FMTeyyhQnaCmV151FX8xRaIOfNf3TdJE2pja0rEcEx7TGsKOt5SaW09nBFsg
Ke0s7+qZdzQ/oSrSbdwS5upJfnUhH+juTLHJZX8rLI91iDjETNNVanUJ+SXW
oP3D+gYGM/RVY4+cjYINihfwlPN1ZmnMidEMtzBbLKlw5I3IfKUWBUFxNTV2
aLWfECj1fKP3/5p/qkvDHuI+l0GZQRk02JppOgSswX1V2XvhXbI41HHkD26b
Az7WW0ns2+XAOjqQ8tl4LSwFKSbxTfJ4zE8XTux1wlRPe5ve+TkQZicP5/ZS
/JOemGheMBfrXg27d6s7w6vLKKXyqAIMl6noy192xn2zsc6sKEVMzfieIKEu
EHwxMn28SwkhYZ31W5VcIfL1GcjbpIz2PUGx0c2u0NSeKL/lpoLMzzwL173r
kDpTfZFxVMXkclG+i4YbkvcEqnkaqcHjzcIyvVY3FDn+crhebx5cOL8GGESs
h7vwtEeqvDqKnJu1BpU3QFG3x7d5RB2vu1+HJzZtwEtZPm/XoAYeveT86MTd
iDr7Yzz7UBZaSu+qSDTdMV2Rbf/TEAtr3ybvrLjmjnT/45WRWzVhOHChyixw
E4wX6tuxftfE9JZPORnzPOB9KvzefjctREfFr9C94oHbnAu6Kde08LeWTnhS
uCc6WsrD3e20UelnVZhHOBC7WPZ31GtD2+Jg6rMmDpYqNkx+ZOuAXzAir7Tf
C+pHpsjQeR3ElabYbtf2hqPzshfJRBdi57yw0EZvxLEmxXfTdWF2oM/aPcIH
Dmdieh/OIWCVFG4zV2Dgzh07kJNIID7ClxYqMghWb6F5PxPkR3iEzlNmEN9y
QqkomcDYcjp6QpXB+UX2hRUpBDY3/dIuaTKY6U9rv55OsEOiIrL5gUENw9Ya
yiMoXZCk5WTDgOXKvWh+nSB81iev1paByZR1klUzgdmQib7+agZOJQrr7FoI
GirFy76tYRD1tfYhWgk67Va6tIJBW9Psl83dBONbRmLWezLgrzrLSRog3z/c
fC/iMEh/up8IHhHwFwsPmngzOHfSZeiwlGD2mesxRV8Gf74Z5Wc9IVDnFxd3
+zNg16wuODdG0Ocfz3bYzsAhQDWs/CXBGQdOdfUOBozK4IoLrwkM5WZEmYEM
DkWmtV2eInj+vNdxNohB7vydWVf/Jajurmzdx2VQ3Wnhf+M9QXStYKM0hMHt
eFnD1o8Eq05uveO1m0E/+8FYxyeC/wBRPhrQ
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVxXk4lHkAB3D3/Raidlsr5CjTLMaoqPl9Mchq8KKkdYwMo0xRJle6xHaw
bQezeMLOTgcjXWTq4UFYtXqybM2zy5OjVjbliORJiN394/N8LGOSguPUVFRU
/P/z/3z1NmvBfgVnoNWxfqfwIAd8h5t8SQHZFTwTmKUIJrWmezpYkitk8blX
dpgihkxMaEaaSe6STosRMy9FMjkbpbQ2kvxK1nMb37gqTpAISf1pfYmSJCjt
utiKi6TV8VadjuQVUS+N4LIUMpK2UBGiLflAglQ/zjsqqkk+OzBZmqyJFoFK
9bVjraRZnM9M71uKhvg6m9UzT4i0IHp4UdcUA74Mn9MWz4jqCoPLhgUroZla
aFO3tpv4R5n9dbRpFS45m9sM9vaS0msWs71VVries6tCMPuClGfeOPHPXhvo
ZYzOHjg0SOxqRh+VfbbDL7U5fZmdQySdKLIa2uyxdYEROhg6TMg61kxuFBPM
cy+ifGrekuK0it1ebx1wQe5/pU19jMTkKW2rQ52g3dV+THbyHXE2uJlWLGUh
4md5CufdBBlVPFFja7HR0JuSGsZ+T5LOD+d6xbmgP6pMkiWeIsxLkQeqqtbD
7PuOw2tKP5BnnSsuPlq6EQInDYeFgWly14Vh5BbuiodZHvIg6iM50pb9mN/i
Buewk+PPQmaIYU7P8TmrzYgW2wXHFnwi/eLTknERB3JW55HkplkiOXv4VUEX
wXza0YO31OcJd/SVb/sSd4h2sZ0TWJ+JxVo9c/VqdxSf8zF0Dl8gk7NB55cL
PNDFjb5vX7pIouMe3tmu4wnjAHeTrlgVtMZG7k+s94QHR+kk01ZF3lwy01PE
xR8BP0Vllqtiwr622GOpF/ZVhyflb1aD37svL69s9oJhz5Uhz341ePCuh6+K
98aDoEk4paij1L3eeEDXB12jIrmtrgbG2seE6XU+GPJLSK+Ra+D5CC+Bw98C
nTkR4xg00SD7Xa/XyBeOiZPcv19qYvP7w99du+8LofMh95wMLVj0yCsYEd9i
fqUTj7lEGzPbPuXnUn4obBM17LuljcQ9Kd+Y1vjBvUVuPOatg25jE2GGcCvG
skQd6m90UB7iVFK0nIc5QXih5RldLGNmZg3W8bCiKMD7qLkexJdeq+vs88eG
c21hyQ/0cEB23CVsWQCE3aCv7tCH0r0oTqAIwDR3OHRgRB+Mg09ZvvGBOJNs
0nr7BwMYSkt2rNOiwZjiLmu2oqDMFveVaNOQVHWs5ttQKI73E1C6NFSFO9if
7ShYOcwkjuvT+LM7YbsrkwK7MeTkbSMaWY0XCu9soLCzV6+W/TWNnjMDX8l4
FGRfZBhz2DROWWRaZ6dSEM4HFt1woTHZo+FimUGB8cLW3HwDjcj8H72bMinc
LVeuXXSlwdKSCeeOU3i43tGjGTT6Rn6rEOdReLvtdZL3VhrO95YzY6UUbm5s
nK7l0SjdL+WoXaYgNpNk2gbQ0LW3D5BepTA/6HlKO4hGfwknqbeSwhJxWVl7
KI3cE7F3ttVSeBqaYu0WRmNq03jz+3sUCt14lZU7afCn056er6NgoTZbmxdB
w2V33tSTJgpDQ12b5iNpSC1NNUQtFCrby5v38mkYPC8z0W2jkHjj6Ja+aBqp
BWtsyh9RcL6wvcM/hsZL/2oX78cU/gVWChjP
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwV1Pk71AkcwHFrclaMJG25mhVPIUfD5vp8kFyN8W0Vco0lJFdMomckR7aW
dRSzkSPUE8lRrmpmJcdgQq7xLUXtli4kevSsNLLtD+/n9R+8twVG/xIsKSEh
4fq9/2VRBNpBx1usRwV61dk0tEaWYR2Lmw9sNV16XI4aNKuEDZhwr8HWXrmP
Zjn6MD8v5afGbYJ5dU6/ao4VZPmLtJW4XTDeu9tSNocBvlz++bVcETA1cmMl
cnyh06ieJ8udAllnyBZnR0D8typ3Ge4ihPirFC9nJ0Ie3S22LFYK66aiok90
ZEE7O88gYVIRyzd++yNk659Qlh/wblVOBbOovAlH4xL4QXXdVWr+Fvwp3cOZ
fbwCXP3VHie1aWL3vsvSRdLXoeS61vJEDQ3d0r+cLH9/Ayo5talvIrZjVUze
kVReLeg2zvaUruji1JDl08lrtyABWlJaBTsxtIr/7P3FBgB9k6UMfwMcKA9Q
oAU0QWF81VH7aUMsXqg446jdAoGZIp0GD2N8LsF2mVC4C7vX1cUXlpngGpOj
DiVP7sFsS78kXZqOxbSZooFePkTnvsuwDzbF0rC1RjP1rWBQ5BdTU2OGqSPE
Z/rJNhgdVL3Yo7gHI1eU5ONvP4AmUz0lCx9zzKApNIRdaofTgrSHrA4LDNAd
ls7P7QDq2fHkrzQrDH/8cpme3gnP2ee5c+HWeHTzOZmIsC7gZiVO5Q8Baph/
evA0QAB7Z6echAo22D398eILx27Q2iGvQWmwwXJHqzU+O3tgYflA7qYgWzQ7
60ZT0OqFgODu24dk7fCvA5+9PKWE0HnE73gU3w5Xvv1q9WRFCJlfYw3swvdi
jKd62+DCQ5jf2Vxoq2iPpE24t99YH7h8/PHqlnZ7/FcuuYLW3w+2jJs+mqH7
UPaILiWpYQBKbPgbXsg5oGuYOoXIfwQfhB9CEngOyGA+rT/8+yA8m2Ecs2Y5
oubLfJ7YbAhaKx7JTyg54eK6Mva7hiGw+pToff2uE9omL+65ojMMWuM3qvR8
nXGH87yrUsEwLB38kpex3gXnUtzMNZVHICosbpdKowvqU5aMltJH4MmGjSGn
QvajwyJlNUJyFCrdjYsLNjFw2eKOWkniKCgbcFJe8Rio+7DRoWBuFNhFbymy
ka5oLFR2NDwmgpiKZFMvZSY2UVvdL0yKQGRTEBzUwsTh2vW36phjoHdixMQp
1A37eO0vQ4VjQC0r9tSXJhCobdtmLUkQpbEni2UITNxyI2HGmoTCUJeg9XIE
8rXzBqeRBJrhUtTcWgLNzUNPv99LAv2++2+3lAikByqOv9lPwuEJ+Wa6OoEG
Tazcf3xIqNh8aoM1nUA1L4lVkkNCiNitoNaUQO/A6UPkaRL0/tbR0PiZwMsR
opqxMyQ0VYp2rJoTqJpS5S1KI6HbzMi2HQlUriZahjNJmD74NnrffgLlxWWR
/UUk1O25/7mZQaCTdGZXXwn5/Qtcjg6TwHPUuK19V0gQv7I7J3OAQKntzkLh
VRIU2KWlQg8CJZgL2j03SRjxiNO28CIQvZ5xumtJuGTBqK4+TGBSoGBEUE+C
luRyc6YvgeKThcldjSS8fj1kKfYj0DIl7XFnMwnVwsr2CBaBnMzIXZ13SIiq
TXKcDCDwHtczveMeCbsvHBpwDSTwyxXbiXY+Cf8BG404bg==
            
            "]]}}, {}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
          0.019444444444444445`], Thickness[0.001], 
          LineBox[{{0.001, 0.0003746852801920321}, {0.0002, 
           0.00007147455495111493}, {0.0001, 0.0000355456201602714}, {0.00004,
            0.00001430011749095143}, {0.00002, 7.128219304432178*^-6}, {
           0.00001, 3.5256070261296334`*^-6}}]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
          0.019444444444444445`], Thickness[0.001], 
          LineBox[{{0.001, 0.0001555084417074939}, {0.0002, 
           0.000029664620548979047`}, {0.0001, 0.000014752765301634697`}, {
           0.00004, 5.9350850028381355`*^-6}, {0.00002, 
           2.9584783144227106`*^-6}, {0.00001, 1.4632591235647644`*^-6}}]}, 
         {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
          0.019444444444444445`], Thickness[0.001], 
          LineBox[{{0.001, 0.00008785067925428384}, {0.0002, 
           0.0000167582996552065}, {0.0001, 8.334212846563312*^-6}, {0.00004, 
           3.3528806745551557`*^-6}, {0.00002, 1.6713197471940141`*^-6}, {
           0.00001, 8.266323456059548*^-7}}]}, 
         {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
          0.019444444444444445`], Thickness[0.001], 
          LineBox[{{0.001, 0.000056953321657514184`}, {0.0002, 
           0.000010864353455177681`}, {0.0001, 5.403044222783985*^-6}, {
           0.00004, 2.1736620952522835`*^-6}, {0.00002, 
           1.0835113850284135`*^-6}, {0.00001, 5.359031742433074*^-7}}]}, 
         {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
          0.019444444444444445`], Thickness[0.001], 
          LineBox[{{0.001, 5.4327753338780954`*^-6}, {0.0002, 
           1.0363502909410244`*^-6}, {0.0001, 5.153961968699432*^-7}, {
           0.00004, 2.073455502083846*^-7}, {0.00002, 
           1.0335611260667918`*^-7}, {0.00001, 
           5.111978479295407*^-8}}]}}, {}, {}, {{}, {}}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->30,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(NHEJ\\), \
\\(crit\\)]\\)\"", TraditionalForm], None}, {
         FormBox["\"1/N\"", TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->30,
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->800,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.001}, {0., 0.00037380911541493614`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{"\"0.5\"","\"0.75\"","\"0.85\"","\"0.9\"","\"0.99\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"Crash Confidence\"", TraditionalForm], 
                TraditionalForm, Editable -> True], {
                Directive[
                 Thickness[Large], 
                 GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
               Automatic, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         Directive[
          Thickness[Large], 
          GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
        Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.1960695736042402], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.2941043604063603]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.2941043604063603]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.2941043604063603], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.1648000000000001, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24720000000000014, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.2952621124003028], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.4428931686004542]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.36467577519939387`, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.5470136627990908, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.4, 0.22461366279909056`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.6, 0.33692049419863584]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.6, 0.33692049419863584`], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.23544844960121214`, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.3531726744018182, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.3531726744018182, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.3531726744018182, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.16, 0.37551056200151484`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.24, 0.5632658430022722]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.5632658430022722]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.24, 0.5632658430022722], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.2844273255981813, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.42664098839727194, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.42664098839727194`, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.42664098839727194`, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.1756347868021214, 0.4, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.2634521802031821, 0.6, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2634521802031821, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.2634521802031821, 0.6, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.3156968992024241, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.47354534880363613, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.47354534880363613`, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.47354534880363613`, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.3442409883972732, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.5163614825959097, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5163614825959097, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5163614825959097, 0.24, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.4, 0.20417887599697054`, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.6, 0.3062683139954558, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.3062683139954558, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.3062683139954558, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.25588323640333216`, 0.4, 0.16], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.3838248546049982, 0.6, 0.24]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3838248546049982, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.3838248546049982, 0.6, 0.24], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.16, 0.3959453488036374, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.24, 0.5939180232054561, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.5939180232054561, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.24, 0.5939180232054561, 0.6], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   RGBColor[0.26399253879606255`, 0.16, 0.4], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0.39598880819409377, 0.24, 0.6]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.39598880819409377`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.39598880819409377`, 0.24, 0.6], Editable -> False, 
                Selectable -> False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Crash Confidence\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", "20"}], "]"}]}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.68330998282031*^9, 3.683310015563032*^9, 3.6833196239252443`*^9, {
   3.683319698118019*^9, 3.683319726811475*^9}, {3.683320078283843*^9, 
   3.6833201034044228`*^9}, 3.683320538921831*^9, 3.683399985400342*^9, 
   3.6834000792624493`*^9, {3.683400125788959*^9, 3.683400149623336*^9}, 
   3.683400193475082*^9, 3.6834002418585987`*^9, {3.683400274760951*^9, 
   3.6834003305871153`*^9}, {3.683400590536269*^9, 3.6834006015886393`*^9}, {
   3.683400699795034*^9, 3.6834007146917677`*^9}, 3.683401215561026*^9, 
   3.683401253461129*^9, 3.683401290777964*^9, 3.683402017535941*^9, {
   3.683402070573707*^9, 3.683402107919786*^9}, {3.6834021393531313`*^9, 
   3.6834021579899197`*^9}, 3.6834021951285267`*^9, 3.683402300229888*^9, 
   3.683404135246736*^9, 3.6834043977605667`*^9, 3.68340468787645*^9, 
   3.694164315296052*^9, 3.694230250182454*^9, 3.694432667498764*^9, 
   3.694693760270562*^9, 3.69477736148593*^9, 3.694777742681384*^9, 
   3.6947778910827847`*^9, 3.6947779223981953`*^9, 3.6947784127862997`*^9, 
   3.694993161751505*^9, 3.694993762514127*^9}],

Cell[BoxData["\<\"NHEJCriticalLog.png\"\>"], "Output",
 CellChangeTimes->{
  3.68330998282031*^9, 3.683310015563032*^9, 3.6833196239252443`*^9, {
   3.683319698118019*^9, 3.683319726811475*^9}, {3.683320078283843*^9, 
   3.6833201034044228`*^9}, 3.683320538921831*^9, 3.683399985400342*^9, 
   3.6834000792624493`*^9, {3.683400125788959*^9, 3.683400149623336*^9}, 
   3.683400193475082*^9, 3.6834002418585987`*^9, {3.683400274760951*^9, 
   3.6834003305871153`*^9}, {3.683400590536269*^9, 3.6834006015886393`*^9}, {
   3.683400699795034*^9, 3.6834007146917677`*^9}, 3.683401215561026*^9, 
   3.683401253461129*^9, 3.683401290777964*^9, 3.683402017535941*^9, {
   3.683402070573707*^9, 3.683402107919786*^9}, {3.6834021393531313`*^9, 
   3.6834021579899197`*^9}, 3.6834021951285267`*^9, 3.683402300229888*^9, 
   3.683404135246736*^9, 3.6834043977605667`*^9, 3.68340468787645*^9, 
   3.694164315296052*^9, 3.694230250182454*^9, 3.694432667498764*^9, 
   3.694693760270562*^9, 3.69477736148593*^9, 3.694777742681384*^9, 
   3.6947778910827847`*^9, 3.6947779223981953`*^9, 3.6947784127862997`*^9, 
   3.694993161751505*^9, 3.694993762861947*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6834020923938847`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Grid", "Subsection",
 CellChangeTimes->{{3.683296962792591*^9, 3.6832969709422007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fullGrid", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"linFits", ",", "logFits"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"popSizeRho", ",", "linearFitsPlots"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Gray", ",", "Dashed"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<grid.tiff\>\"", ",", "fullGrid"}], "]"}]}], "Input",
 CellChangeTimes->{{3.683296990585064*^9, 3.683297044455514*^9}, {
   3.6832971066069593`*^9, 3.683297308831883*^9}, {3.6832973489452963`*^9, 
   3.683297487792404*^9}, {3.6832976112088957`*^9, 3.683297680049018*^9}, {
   3.683298099254241*^9, 3.683298107128541*^9}, {3.6832981431894073`*^9, 
   3.6832981963899317`*^9}, {3.683298259799099*^9, 3.683298276258766*^9}, {
   3.683298605843032*^9, 3.683298617687737*^9}, {3.683298709154873*^9, 
   3.683298723557757*^9}, {3.683299911055091*^9, 3.6832999161145144`*^9}, 
   3.683300476371132*^9, 3.68331095858561*^9, {3.683402516481226*^9, 
   3.6834025168467083`*^9}, {3.69443251106101*^9, 3.694432512657136*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Ph3Ozy/c8vdy9gI4n+33O5+A/mVw/iy2qvPO
/9bZrXN/WCWy7r19z7fX8apeWxH2fzbK6LTfC+erqpwsdxc/Auc/mZC07+vM
03Yx/Ye+asS8t/fpuKm98esluLyh9UpHOZ5bcHlXL++nGU8ewvkvjf3/r5ny
wo7r+uICW6739n4brs9rfvTBThTsoHf2WVdmp8YbfYfLT76TK+1+7z9cnv17
1jKWJ6z2MP6izaf/vhPis9cEW/DGfvt3a+PaFSL2HiDvub+0f60cuLc4UcZ+
1kwQAPJnb925s07ZfgLIOf2v7Bfu11mQcELLHmzd9cf2lWujdXelGtm3vg7c
Idf62D5AadLtUDdLe4j/HtgvWfH1cU+Moz3Egbfsr85wzGe/5Q6176L9n5Uf
L/kmBdgvARm3+IA9AEGI0sU=
           "]]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXD+h38cZ1lD
O+H84w8LhRanTYTzi1yydjx8Pt1unfvDKpF17+3zC7f8vZy9AM5n+/3OJ6B/
GZw/i63qvPO/dXYx/Ye+asS8t+/59jpe1Wsrwv7PRhmd9nvtuK4vLrDlem+v
qnKy3F38CFz9kwlJ+77OPG23Q671deCOd/Y+HTe1N369ZCcKtuCdvaH1Skc5
nlt2Z8+AwBt7Vy/vpxlPHsLlXxr7/18z5YVdtQhI4I2934br85offbDTBFvw
xj7ryuzUeKPvdkFgC17YT76TK+1+779dehoIPLNn/561jOUJq708yHq5p/aL
Np/++06Izx7s3OuP7bd/tzauXSFiP2smCDy0f60cuLc4UQaq/qr969lbd+6s
U7aHuP+c/cL9OgsSTmjZQ9yzxb5ybbTurlQjqP6V9gFKk26HullC5Vvsl6z4
+rgnxtEeFoNXZzjms99yh8v/Wfnxkm9SAFweAECB4Z0=
           "]]}, 
         {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqOxj/7SeGWxkFTXbr3B9Wiax7
b//hH8dZ1tBOuPzxh4VCi9MmwvlFLlk7Hj6fbhfTf+irRsx7+/zCLX8vZy+A
62f7/c4noH8ZXH4WW9V553/r7LiuLy6w5Xpv3/Ptdbyq11a4+refjTI67ffa
paeBwDt7VZWT5e7iR+wOA3X3H3pr/2RC0r6vM0/D5X06bmpv/HoJzje0Xuko
x3PLDmSa+8NX9q5e3k8znjyE818a+/9fM+WFnSjYwmf2fhuuz2t+9AHqnuf2
WVdmp8YbfbeTb30duEPuqf3kO7nS7vf+24Glrz+2Z/+etYzlCas9xD/37Rdt
Pv33nRCfPUT+sv3279bGtStE7GfNBIGT9q+VA/cWJ8rYQ8zfbv969tadO+uU
7d8ATW99vdF+4X6dBQkntOyrQc6rmmJfuTZad1eqEZwfoDTpdqibpT0sxpas
+Pq4J8YRzr86wzGf/ZY7nP9n5cdLvkkBcD4AceDcng==
           "]]}, 
         {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZMd
TP7DP46zrKGdcP7xh4VCi9MmwvlFLlk7Hj6fDtefX7jl7+XsBXZc1xcX2HK9
t2f7/c4noH+ZXXoaCLyzn8VWdd753zo4v+fb63hVr61w9W8/G2V02u+1K7QF
iby1V1U5We4ufsTu7BkQeGP/ZELSvq8zT9u1vg7cIdf62t6n46b2xq+X7IJA
vMAX9obWKx3leG7B+a5e3k8znjyE6n9i/9LY//+aKS/sZs0EgYf2fhuuz2t+
9MEOrHzHPfusK7NT442+28mDLbhqP/lOrrT7vf92/Ye+asT0X7Jn/561jOUJ
q321CMjHW+wXbT79950Qnz1E/zr77d+tjWtXiEDlW+xfKwfuLU6UsYeF+OvZ
W3furFOG8xfu11mQcEILzq9cG627K9UIzg9QmnQ71M0Szl+y4uvjnhhHOP/q
DMd89lvucP6flR8v+SYFwPkAPhzQCw==
           "]]}, 
         {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/UqO67riwtsud7bv/3EcCujoMkO
Jv/hH8dZ1tBOu5j+Q181Yt7bH39YKLQ4baJdehoIvLMvcsna8fD5dLj+/MIt
fy9nL4Dz2X6/8wnoXwbnz2KrOu/8b52dJtjAN/Y9317Hq3pttZsAMr7/lf3b
z0YZnfZ77SAaXtmrqpwsdxc/YvewSmSd+8NX9k8mJO37OvO03Q651teBO57Z
+3Tc1N749ZLd2TMg8MTe0HqloxzPLbtZM0Hgob2rl/fTjCcP7USBuqtE7tm/
NPb/v2bKC6h7rtv7bbg+r/nRB6h5++yzrsxOjTf6DnXfHvvJd3Kl3e/9h6rf
bs/+PWsZyxNW+2qQc6qm2C/afPrvOyE+e1iIbv9ubVy7QgTOf60cuLc4UQbB
n7115846ZTh/4X6dBQkntOD8yrXRurtSjeD8AKVJt0PdLOH8JSu+Pu6JcYTz
r85wzGe/5Q7n/1n58ZJvUgCcDwCxqclo
           "]]}, 
         {RGBColor[0.24, 0.3531726744018182, 0.6], PointSize[
          0.009166666666666668], Thickness[0.001], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQo+2Hus3zPr0/Uqu3XuD6tE1r23f/uJ4VZGQZPd
DrnW14E73tl/+MdxljW0047r+uICW6739scfFgotTpsI5xe5ZO14+Hy6nTxI
udxb+/zCLX8vZy+wK7QFqXhrz/b7nU9A/zK7ahGQDW/sZ7FVnXf+t84OZJv7
w1f2Pd9ex6t6bbVbUgDS8ML+7WejjE77vXC+qsrJcnfxI1Dzn9o/mZC07+vM
01D9j+x9Om5qb/x6ye7wV42Y/kNX7Q2tVzrK8dyyexMI8sFFe1cv76cZTx5C
+QftXxr7/18z5QWUv9Heb8P1ec2PPsD5WVdmp8YbfYe6d4r95Du50u73/tvB
Qoz9e9Yylies9jD+os2n/74T4oPzt3+3Nq5dIQLnv1YO3FucKIPgz966c2ed
Mpy/cL/OgoQTWnB+5dpo3V2pRnB+gNKk26FulnD+khVfH/fEOML5V2c45rPf
cofz/6z8eMk3KQDOBwCnqscq
           "]]}}, {}, {}, {{}, {}}}, {{{{}, {}, 
          {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVV3c4F94XVhqShjIipeGrSEa0pPuq7JC9smXvvcfn45OQSlZWEpJkZWVU
ZikNeySFysxIlMj4+f1z73Oe95x7zz3Pc9573v2mjmrma+no6LRXl//vJ6X+
TPgyjZ/10rx0fGVlCttOViY8rXhDxL59PZnZMoUDl+uCAis+krgjcpcj06cg
YC/rZlYxSppkjgYJyE1BxGOTg2bFPEnxDa31jplEkc+YjXLFJvCp/ZxgPT2B
2UW9UYUKDjyu9yVf8scwqZPAsyeUE8e2MJ88GTaGkeIuoynN3chvwZHXpmP4
ZKfRGT3NhWMNYbWRbGMwmcw0cWDZB6808R9FQaOQM0xVfnrxII46lEYuGY6A
lUQflq/gA6VRA5HnhsC/yUquh48fJzJ0uVL3DkGyXcLKNoEfD6oYWof+DcLG
ZujhDa8jsK+65sj+dBDVcacPtZ44CrcMXb5FoUGUzk1F5eoK48D+zf/Cj3yH
qUrc7ROdongfKiQULfsVEyVB+1e2iKGIIZdzgP8rvHbbPmmQFgOns8AO/a1f
cWMILTolYsg2q2Ps7hhAmd/odt+Y4/gp4U7ptxjA1kcSkVVqJ6GctnZgLrIf
5Wu+3ZRrEkdc3azi9IYvmNW6/tKQ/gyOqpZE/ej5DOEc0UW3k2fA8q3XlDf/
M7K0aNb3750BZ67DYX2dz4h//J/UgqMEOslh5he5vfDStJp/vJ2AVzdPd/OV
T0hq//Nk4yNJVB9sSrJY7MapFYX3O+pW7R7KRH1XNzr57o3s+SyJtK6iGZ2i
buwIlOUWYz6HYnb2b/tsuxHOFx9h7H0OvvJB7w997oJPwGnLcvnzMBBrQlNj
J/QO+3HZjl1AmUC2cUhjO1I5Yxxn6KXgvedEZXpOO4aYcmp990hhA/MXxvGb
7XCe/mQVoSKFcKPPUYvq7QitOFOSWyqFnnLLRLb+NpQq/lP6SZXGQuRNhYWV
Vuxw9gl03y0L3u3SLlP6LdAxi2pdEpNFfYXJuYULLUjRzP4vRFkWEvzGPw8f
aQGfeM/bOIoscnwY9k3PN0OSXnxX2bAsLO1VxQ4lNMMhdr5goUgO633k9y9V
NqGx3OtroKICHj1n/MxG9x5aO/eeOGalgPrJwbyB1nf4alcX9j1YAbtut87/
evAOC9xbReQrFfC+kUtqWPEd+ELSA3fwX0RekG4zY8pbhKp94HqwURGC6Zqc
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
WVHg/AUS9DtbcsCHhoLiYf8DHy+Q/wFM57Py
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
thwaBzd+FJ9bJpdR/B9M4lOC
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
9YY=
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJwVVnc0lo8ftSJCxovI3isrK97n+bz2luzxtUd2VrLnKxRZUUpFMkMIZURI
kZWRFJE9smeZv35/3XPPuefcc+6595zL5XDD0JmIgIBAgZCA4P8op7q3Gkq5
gpT/UFD6fboO5+Uas980dKFk0RNvdO//Bm6r9qjIhu+olHsQH0HHAtgkGz8a
0JlBd9Je4L3CZkHUSyPAsWEJ9R5e8P1TNAXh/GxFIZgNNP0psc2lGxPglMV4
v11nG7XcV/ZdVvgB2qQ00ZSxe+iRneWI0eMRkAwk9zZp+ItqvzvcmQwdggvz
RFZPN49Qa5N7oWOfv8Cp8Em+P4YAmOiYmSi2emBrOoTlQiUhFKzei/Xa6oT5
R/upTTrEEGu5aicX1QHfDQPI7BdIYFndSmsyvg16KDbDz8SSQs5YsSjHZgu8
b/PaKWE/CwYbc8t34xvhdciyu34DOXz4j8OMqOENFEpdn9oyOQcpuxKuO341
8Gh5xuzBJiX05rWa9D2rguTndn2KydQQpFf/kMW+AnDl3tw+GBrYtrK37BIr
BQXycmvlaRrQO+WvmEwtBGnn3w8xlbSgo7we8tMvH8RahYbnw+kA/oQ9ZWrP
BQE21/P1OvTgt+acWjSbA5zBhdp3mTHgZVNkODv/EFi+zsZZL2AgIo+KRz0w
EzCSPK3itQwQJUDyQi8yHaiT7Y8IYxlBaLBt3WI6Bc4uPZMbNmACb9Fc4oGQ
u0CoNuFXyH4BKPdWnpC/ioeDXNaKoJULcK6fvzzSDQ87R5ZL2g3MEDJ3kaD4
QTSsmWfzsiWwwH0FdxNqowhYrPlmu25yEbZ5zCfLuUNgmobxcSsPK/y+52/l
czsQxjyNRzI2//EAH5FJN38Y7kyndWlhgwG1F+ZmjT7QxzugK5/MDu98xRR0
vnlCZ9T5BAorDth6aXnLbswV7NcK7b0xnLChwhth4ekMNqzqkWahnLC7TrXb
EugAltpzObhpThh9ZxP/eMgWzILwDUJaXGDIbHR60dsKjAt5RukquSA+MX6f
4YUZXBtu2z1k5AbmlMhr5+2MQZ/IgX4unBvQarkbcSnXQEeCULJvlhskzmDS
zqrpg6ZNrv4bHR7YsEg5fsCoDWpJ4JlbzQPIIPH4mTB1UG6YSExk5oUNnnSS
OTsVQBfDi/yieKHvklXxo9c4UGRk67Ba4IXt5Uza3S4syKs2Tavq80G1leT6
VL88SPtZEYjV8kEeEa2Pr4MMSOYesDGx8kNySr6CrLcUiPVlKxLE8kMUxnhj
5oM4iBzJWywt8cPTn2pjnvYiICg8GjhoIABTUVn2AtkCwGd+637jGwFQz5Ix
yjflBe7bjNUv2AUhZck0zyWeCzhqavuT4wRhqbJWk1yOHVinjVcDVwTBXdGn
Op6CBS7Q7FDYGQmB2f2cS7m+jMCAZghqNQj9y8mVZN2MHoTJXTV/CAlDq0qj
z2ggDeCGsa4e2cLwrosqZZOUEkye0SYcnRUBrivvyvZ+kIG7+3xRcpAIlIXF
uW/rkUCUTOMn9kURYJCV0EU1CSGTIHXhlZkohCf27rl4HKOl3U5kSp9Eobnf
gdea4i/6PuuKwKDsJcj7S9UiYbCLjthTazgWXoIQPzeLc7xb6G/RGZcdBjG4
Q92/lja1hhL8eXM7Lk4MrNZ7rUY0l1HG9qRCxl0xEOH/GqBsO4+K3rP/WOQk
DhLpQwvtFDOokoXsvPywOJQawnchmV+oSPoZ4jkuCXgCc2TcD8bQuv319HIL
CXhN2PimO/QbqmT9gzswTQImcp993zoaQnvaPlSjXRLAFbNmqks8gJoKvlIm
I5QEcov3juR7PehUcvZgv7wktBTM9t0q7EQ9t2MdHvpIgjin9b7Q4Qd0z9x7
y65YEogJF+PKxlrR6GbzGKFfkoC53VVi69KMUvKq0G0xScFTtZHYg8l69EHi
pecNV6VAzbBRg4i0DuVeZ5KKjZeCrKK2gp7marTMmKhNp0UKWthm04mWXqFy
DSvXMPtSkHaz7B6N0Eu0jePb1LjYZfieU+jByl6E6sa1+ha4XIap1FxvmfJ8
9NvyS0Lvp5eBmGDLy6slF3UwyEqTHbkMfyZryaJictDV2iiuUyppIA3+e8Kp
+hANuuhR9UlNGi5mhzoGFt1HiaJNlFLDpcFMfcjV+34amjwPA+a10rDWWTVx
YTUZvaArbM+1Kg3ePIfH74MS0edVmM0lXhkwS08Q5K+IQy8xnUZV/ycD6TU0
fiQBMejbsCWa0PsywCR0aFbrFomqTA/lqvTIQCXvknhdUwjap9EsQUkiC+Mi
cz+nWwNR8/Li98OKssDba8tZZ+OPztBlGDzxl4W5sV2NJ2E+qHdQ+C/nl7Lw
abg7q53GE/3z87qP2IwsGPN/ijCcuY7GqhgS7LPIwYt16QYaEyeUugSb2mIo
B+rHDjG6+vZoNrUAZ8IdOZAT+j5be9Ma5Q2grTRok4P1iy5qPPQWaMX3Q2A+
kIOy5d47xWYm6BWY75+SlAe6yqYMF2FD9MOLL7albvLgc6ts33FFH9WnaFz3
y5MHKdJxekpDbfT7jYJIxe/yQM8TqMh8XR11+ppynoT2CvB3dP+9QauCrimE
POvRvAIeZX1l3xRwaHCuk3hm1BWYeaI43ZOriJKQXm2xfnsFYqkUJEnxcug9
jytX+TeuwB0Oj0/bxNIo8wDP5JqAAph8aHVSJpdEX8hS33hjqwA0E+xS4gSX
ULGcPyeRDxRAy055neWVIFpPOHNPs18B0ojhTywRH7pjerfDhlgRmsMc6Rjp
uVGJsstHAXKKgC/kItRg5kA9Ccel7nooAhm1DyVxKwtabIp3y3umCNFvQrZ4
SJjQ2ZeiuW+GFIE7sHhju4ce5ST8OtJLhoWma7TvOs7Sov+ZhlPNKmJB6ww5
E81VKvThSz7VgxtY2OseDfgiS44OE/SF0LzAApnkGXqSqjMojWlgFf8oFpwy
iWhkSohQ3Zfsi1hKBNqCtQ27qAjQBIJP7EY4BJiRqAfyzw6RDyY3TNwCELg5
pXlOv30fIXjJlBRZjICaSdiKq+8OgiV435Y5jkCZasAALmsTCTJx/fuSBoXM
2rc74cprSE0pjUSbKgrLr1dXFc8uIxunb11Gg1D4K/wHf8l5HhE1sX+yVoaC
b4TSopTqDOJaSj5MMoWC6iJvD0fGL+TFaRXFRQaAml6bhnz8OPLL2FJJUgsg
7DL3zMuEUYS1lChIIxxgazl/+PLFr4jZaWmFdRX86yfTsaHgIJJubDTnPweg
zHylZADpRxaGj6k6KHEwwh7b4ffrMxJ3ek3oCz8OfjwYMBLn+ITwCBeqjuFw
sKlMe15+th1pNT6wnbfEQXEG2tjF2orYRuqHbgbg4FzookmU7zvkuOR51tE9
HIyq6R37GNcjj4f3qshKcHA0SHQQ9bkWkT/V7qVrxwFb2S9b7pZqZETo2SLb
TxwQ7T91KeSsRAKMt4mF9nFw6/Zl9/KWlwhdpAaHNK0SiJiMnlOYLEIqSx4r
gIgSNAzZanonvkD0h9dNtNWUoJq0jep3aR6ycqLia2KrBLfV9LGULk+RO0IP
k+yClaCqfClhkP8RImi8UuSRoQSj7ilsEZFZyMcIXHtguRIYrlubjlhmIE4l
9yeiP/3TV/AnZxemIkTDi3+TppTAYkWPg78wCck9wTI8PFQCEqWknsiCBAQV
SpPIZ1CGsdyTagLpOGTcaE6nQlwZ9h6rjxcjMUhIxJXr9VrK0MkkrxTvEIlc
KEmO+eCoDPR3B7zJCEKRuqGpJ/3hypC0qBJmqXALMT6Rqf/xQBl43c/iHxz6
I1uCd4bnqpRBOkkWnZPwRVKNJtY3upVBvY2Ckvm+FyIWIXXuaE4Z9JUbTaT9
3JCe4tv8ZAQqUPpuZujirDPiPvRDiY5FBXhZI/2FvjogZ0/ErNmkVeDqW9mC
7Mt2SKFgbJCgvgqkOqzZav6yQlSNvmVcdlWBwjy/MfVDM2Q6XOQVGqMC+hpT
P1PyjJGo4sjPWjkq0MQpmV7ecg1hHxqaM65TARV20PmQqI80HQsQ2n1RgZv7
RAzJatqIpWAYq8eyChiHd+atZqsjuSz3b2wTq0JvHd5HJ0oFmacsawtlUwWe
rjjDuCEcInrazkAipwpq9wL9LMgRxHdzzDXJQBVeaHcPNlNdQepmthsx7qow
oa/JcfpEBjn6eu78k1hVuOb0y+l3oRSi3MnjwPdEFXQzEf09JgkkoUGxtrxO
FfL/ow971SGC9JUZnZX9ogpDXK4iIXsCCOaZh1Xzkip8EjP/dracF7FMi61Q
J1YDwlVeB6JvXMiz2MeE/axqQNqIrvF0sSOzN18bm8mqQSJDiwlbKgsi7Npd
NHlVDdRMr9+0+c2I+FjOHFx3U4Ooz0hs6kd6pE73UG8jRg0Yu1UX+GlokSOU
Pi8oRw1kTl4lHvhSIcqSIjsEdWrg+Ghn4YwrOZLAo6KR2K8GeoLBfLO/zyC9
DFaPaJfUoKtAUZxrmQihO+u/mk2kDhm5Cud2rhEg5gd3cNys6jBnk63TJnSE
fbryPKNU5t+vzMdtDer+wc5ONMxLXVWHrgrxB4n7O1jhgcErja7q0Cr6b4lM
W1if9uUklRh10A0rzqCTX8fW1RL96n6sDkYKowXD68vYwyKWy8a16pCyQdSy
gyxgcY+kbo/3qcOshUz3INUs9naS9nenRXXg1TvYfa43he2JcBBdJdSA+CWf
Asz4Tyydb0jkzYsaEM43qp3e/h1r7pg+eCytAU8don9MKYxgn5qU8t3W1wDF
LjtBLbEh7KxGWxC1qwYUdU00tyV9wQop/OjOitaAn6VstUhKD7aGncKvqEYD
6LYFehlVOrA4YoULbxc0YCz463ZqcQv29u41DxyhJiwhjuOzBo3YngW35k4W
TUj/TpVbk/YGa9aT7fRdTxM44ufTju5WYXOaq97YX9cExh9KmHKNCux0ZRfF
cpQmuEgUprhylmK9M/9WHrzWhAzs0VsX/3xsTTwtSWyvJtTsc1s6d+ZiD4KF
zM4taMLdGMIe/r0cbJyNxfFFFi2YC3uKq0nJxOYI1GshUVpAdDKu+Xw+Hvu5
Pmg6UlcbMnU3amNsvLCm9OyyUq7aQPqnySyH1A077dmeOBurDcSFg6N8Rs7Y
Aw5qSa1GbQjninSu27fBCt3Oj6QT1gH05tb7B0YG2ATDPtYCMl1Y7HpFvcYv
hdX4zWP2uU0PxvY7+WV99hQd7i0438kxgM0Xx355vNGKWw2+6q++GQHfEgun
6WC+gsaXYnmMuRmY5v1Ezz+ouZL5w5yHs9MS+mrP8xONdMnvTS4Ekx5bw31N
T/kRqg05qgVa36xGO1h3dG/LXSGUK7HiGGO0coCvETAlOMgj26rt1uq+5QiW
XsvnfgVry2ArEittypwhllr0pK3DVhqXkv21RfM6sD4mbGqYirlcNBtJ3Erm
Bge7AqT+Qvel7tQ8L89sdgdrBzWqIMJSyX3C2uRvZp7QcbioGZDzReJj+5PA
enpv8CIuUU+imRHnIA7MPFt9A25kYda7X54R97JKnwit9wGypbD1BC5GscSt
eImfmb7AvhFBvKQrcsld8ybbTUc/yMpLm/cpNxANG+2ltlb2h+rVfcur+g4i
RgLsj0PpAsCQS9apYD5W2PV10lzsRAAEJ68K6nCXClUEu0iPN96EQTsrH8qv
zYL1J3LsHncCQSfn8pwf8bTA7rsASm33W4DZKqdeXdziv9HQ/5ZOPQgyG2uj
Mg7I+CtuchPQ0QeDBGfy41Q2MT52j1869pvBkKqT5+l2jOM14siSWngfAkwN
GtcSjxx4PtK4fzNNCoXPXi6DSF4itzu2JIrRLQywX5wjORmecQ3x//pAKRcO
o4lrvX2lbZxeOjFURowR8LqJYaifd5ijR4x1s38+Asq2FYv843fZ3a4Op8u+
jgQ9g6s5Tt0X2Vm/huYEakbBuI9UnSO7BNu8PTmy+ioKvCjkdS/hDVm77vZM
nuOMhtV3nYlErI4XdYaf2nPciwYbx5/d6YO3WMSPViT6dqIhIPVlybbbE2bR
Vh8iPqcYCL3qtWJkUHnhrrMPF1NPDNwNyBzVWBlgShSM5DiRjAVexjSGi137
jLkJ7RzJubEwocDh88WKkpG5M9brDRketupaJ+2aJRj6nL5g8OR4GKGbMluw
FGXAE7I1GZzDQ2zyDSY3IkGGDYU6imVqPNRfN1v7LMvF8LF8sYiVEQ8f97P2
sqppGfwy9KajefEQmMe1VVezhemxYTLTVcJDDi1u9vdcDSbm0PHkggoegp2N
tE6rqjByDysL5lTxIG1RW39rvxzzfEBrJ0ITD1oEDCmyYQWYYNWwtKqreHg3
mEbbwJiF4Ree6ma0wcMZt93fc+a3MOMfL/nP2OKB3W9Eb/qDPybNMYSl0h4P
TY0Us0rvfDBHOfRuWs7/uC9HRi+BK2bovDppmCceuj4vNnmWm2MSytLLNb3x
4Be21ik/Z4xBtSaNGXzwINjBk3e96hqmNCYov8L/n1+JlsmcjRbGjqNDO/Qm
HmqyqjwiQtUwDE20Wxq38KBT/J9vgYQy5rO5TTYmGA9RZZbUW70oJmq3FDcV
gofnImJYSwYFzP8ARUXQ/A==
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1: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
+D99rwci
            "]]}}, {}, {}}, {{{}, {}, 
          {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[0.0075], 
           Opacity[1.], LineBox[CompressedData["
1:eJxF1Hk01AsbB3BUZB/NGNuMsRsq0TbK/H6PV7JNV1NMZC415BaNnbGMfSnb
KCoZeV23btx0LZXlmqREcnuFRKRSyPqSyNLi6t73nPfM7znnOc/5/PGc8zz/
fHW9gw77SklISGT90/+bNNvlWb7CDJKlGvHq5vc5UKbdFdaL/kTtT3ZzmcnD
oMduSUwQvUTfjE1ctzF5Dl4C18JnjFFU4VBZEvlzK2wJsA/3EU2hwtBemesL
dRBnRC6LIXxEC7g7aZ9JN+BEPvFiC+MTuj9juFDIvwJO0rgkhZRldJtwpTIK
nwMWPNlAlugLipbhCWvhiaA+LsUunl9FPzztEJ6RCoXvpmvXwggS8Nt1h9Hc
Wh9YGInRVK+WBFZCvXx5LgvGC1fONzLWwWw+vrKy0B5eHg6X4Uysh8W2oOXX
vXugQ24+bkOKNHzKNOYN2G6BBw8DFm9ob4Rv3S5Pa+a04U7MtL+zSBYOGPVo
J87ioHT7yeEFljxwsg4VnzwjBYXTo26X5xXAcntTzvv9i6jg6vFOK4ESxOqz
lgu3jaPWFYF6wQQcvGw2f3rGfgDdK1vhaTOCA8WJcsf1eU/Qnb7/LSBUq0CQ
246lAfw91KzZpHc8bhNY3E4tQnqqUGPyKeUGBh7qeEuXw/1+QXWiS52yNAjA
363LUlK6gGr2vU/znCCA1mqjvPtgKkqw0G/eVqsKkYde++N6eKiSgLMqmUIE
KznuZeaXU+jGqZ9pvUw1YB93r73oykYl9w+Flmqrw5j1KPpo8gf0awmpMmpG
HQLru4pLPK3RxVWPKSeRBgSc23pvcdIC/eAuNCCna8LRuGue+UJ9dLKm/9gc
Swu+3Zy5KBemio7giFea9UnArDSN3xwtg77iur64ME+CkE/3rc2rvyC97Xkq
P90ng+/L5f5a0gzSafDsgKVAG+pbmyrbW4aQ9kTldDk2BQRmzbmRfd0I50Mp
J5CgA52itVRN7kPEi2SX4MbXgb/U03RJJjWIh9NYkfWIDnxdOmijhStF3KJS
RSaOuhCyyKYpGRYgrqX6A5uqdSGr3Fqawc1EDvU+XPpG1APyj3qh56djEWcp
b/xYnB7ENz15o3w9CGGYS1p0vteDNzRQamRyEAevEud6hj4QNsj/KvHpMLI/
G7glt/Xh5sfEwcZGW8RGNJSRoWEAz+OFyuW3diPoZFxZaKIBDD2pz3/VR0Ws
iORH7AkDeIze2vV4qxZiads4YutsCEca3wU6NykiO0PZEma1hrBBt4t1wk4C
sSj5SlYjGQG+Xt/sbNc83axTaCWRYgR2nOS8h3Gj9M2rlkenpozg8hWXgnzX
PjrVdIDXwzSG55SqkX63x3RD98iLd+uNQf7HnqL6rAa63hni7V+1qdDNYe7q
WLxJp9TUdgnSqKB233RGs6CYThpxneXNUIH75bV+7r3zdFX0AtVRZAJ6JaLc
WIVwuqnsKYdBE1OI71dpl3x1gm7dSz91WmgKLhpVR17cYtH9/cfLBFGbQaP3
D9fH0TT6g/w9xj27t0KhgyBDOu6bVd3KXF7FUXNQxc0dNRxItvJm5ufufrED
VnT4tq51uXsbJEdzHLr2QungKLmVUWXpQY0lnZ7eBy0fVl+gXOquJw1RIwkH
nOAyr2SfV1KNhXfOhG9mEROK0tR4+0KXti6IQuyq+l2g5GD2We8Anql992+W
BHc3YLIe3d1BqzC6NOiur9PuAYkbZonU6EW95bcT0dJ/eQL180RFbnUsRXFC
JST/7nEYf9q1hy/XoHWDTXlFZHtDZLIby3twl3qzk1+z/4IPtFScC7ia2kqg
V2ZUe/3uCwxj6ljqdxkV63PCvvsOJyGwaagwEpetWPY+YV2zjB+g8fLJ+JBW
2cyaqxWXmvyBtuXYlrn1OOkVyVpBvxsXPOb4xmmaQqm2ln/zGvCBoK4hny75
T95S1vEubbwdBBL/rwB23hC/IVjsjIWz5m8uhYjt7xBBjvAJFTt24KmSp02Y
2C7G2lf4m8LFPnUneyxlCHNl9E87X9+NELthjaZ9OpMn9tK9cAUn/0ixg0Rd
f2yyi8L2I/QkNuGjxdY+/Y7BmcfsQsnfPvEgRuw2nH//kWw+dj/9RiLRL1bs
50bvWhVocdj/jGRFF2K82B1mpPmuccx+B3vzdt9JEJvUxy/iOSSKPc6RRWar
MP+Z1fFWXidJbEZvMYeSg3nb6ox55yLmLc3BUoYnksXO8g3WVevAnEFNoKxZ
pIhdkt5CEZRg1mhPCaiXSRW780Q3IVUWc6okuZEpj/nj3jq5aSXMbRWTZSQi
5tALP4wkGWDu8FJzO/AvzMnffNbU92GmFVRfH7PFfPWZ42K8A+Zo29jcWwcx
G5kO/4fohfl129aw0WOYc31iNKs5mFeL8H6OvpifK9tJx3Ixp/+eV+EQiBl1
fOuqGoy5PDnqWmUY5uOUR078CMyqjSoL9pGYn7h7CQnRmBOXyq2HYzD/DfZd
LJE=
            "]]}}, {}, {}}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->30,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm], None}, {
         FormBox["\"NHEJ\"", TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->15,
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->800,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.0005103055915}, {0, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TagBox[GridBox[{
        {
         GraphicsBox[{{{{{}, {}, 
              {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
/1jQoyPuaf8P7LsVkA==
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62Tbpwvvfd3YJZ/Ai+v3XBv7M5OnB+xJ6oo4antA+s
c39YJbLuvf0i4w3FU9W14fK2ay8G/GzRgvMD9gmKxz7ShPN/nWp8eMBe80BM
/6GvGjHv7Z/s4VinMlcDLi8940JFxy91uDzfFAa3N+EIvq23vEjAVrUDXNcX
F9hyvbe/aeJ9f7OQ2gFRsIPe2e+url0rXqAKl5c0yKiqPqsCl/+Zp+d+XwvB
f9gVJuLcoXxAE2zBG/vW5bsfLnuqdMAD5D33l/Zxf3XWczkrHZg1EwRe2ufx
zqnJW6B4YALIOf2v7M0Wf/O89FfhANi664/tl0W4iptFKxxofR24Q671sf1u
GfuTxoXyUP89sNdcKZryW1vugB3YgbfsBbkv/Tv0TAZq30X7Bf/7Z3YtlD6w
BGTc4gP2ALZfydw=
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
/IWHQJBcyRPD5a2glv9zLPibpsD/ACvcPcI=
                
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6Y+nM+0cOVhu+96
cL5P2ZmFi0IQfLfauA62TboH1rk/rBJZ997e++5uwSx+BN/fuuDf2RwdOD9i
T9RRw1PaB2L6D33ViHlvv8h4Q/FUdW24ebZrLwb8bNE6wHV9cYEt13v7gH2C
4rGPNOHqf51qfHjAXvPADrnW14E73tk/2cOxTmWuxgFRsAXv7KVnXKjo+KV+
4OwZEHhjzzeFwe1NuDpc3tZbXiRgq9qBahGQwBv7mybe9zcLqR3QBFvwxn53
de1a8QLVA0FgC17YSxpkVFWfVTmQngYCz+x/5um539dSOSAPsl7uqf3DrjAR
5w7lA2DnXn9s37p898NlT5UOzJoJAg/t4/7qrOdyVoKqv2qfxzunJm+BItT9
5+zNFn/zvPRXAeqeLfbLIlzFzaIVoPpX2u+WsT9pXCgPlW+x11wpmvJbWw4a
XgwMgtyX/h16JgOXX/C/f2bXQmm4PAC1WNi0
                
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
N7ZPo+nGHRVEugJ8d2pj3do6jUJnMpridBQgw0bIlATTKMnCethKUwHeNHX9
3lw7jcqFuim/FBXg6Mh9rOfWNPqd8bJ4+2YFcDLgPuN7bhrF5zaWVU/JQ+Sn
XLdvaBoJdJHqyT/kQXVIumm/3jTKXIvoiP8uD4vBMFGjNY1uu+lM2XyVB8bF
M6khqtOoU6pGZeGDPESPmaVXEafR5tLKyh0t8qAZ9GmL2u8pVFpR9KgmSx5Y
Rbd+/Fs0hS4077DamykPpVGlhUJ5U8i/u312+Io8TDc9tJPOnkKa87PyvJfk
wfr4xRCtS1Po6Q69684J8nBQf/Mmqcgp9KmxJ4YlSB6u0QRE/1lOIeFXHCZm
e+Wh5uyR93dXJtHi4LXRIRN52Mzuziu2OIk+TiudOWkkDxeojJsxc5OoYKNl
/Y1d8mBXVL2sOzaJVK1yVZja8lCZ3lwd0DWJTD7u2JQhIw/6V25XPs+fRNHj
XgOfV+XAu2tLNBc2ia6LVFtgK3IQs7yBS117EtUg1md5S3KgvJnD5QB1Es1e
y7nr9ksOtmWrO0VLT6KDJt1RXyfk4CD5+MZYrkmkX6YjOdYjB++69Pq3vf6B
2Pz4PafL5CBbTLHhqc0PlDj7YGbZVg5eOY3w7DOfQGvLGrOJ1nLQvi7NKbZ7
AgVzV8+KWsrBo3SRukG9CXSIUsNUM5eD3oB5vX3KE0jXqv6nu4EcOPIOOPXz
TqDZRy0LHWpy8DTQ70zy83FkF92zep1bDr7WFx100h5HsvwLAnp1srBPsNpC
nOM7mjx85uD7GlnAzHpUtZfH0P3HApX+1bJwevxrnuncGKJ7yB0oqJSF/ZXK
Wg6fxpBVvf1lzlJZ2LNp505y9RiK8anf0n1ZFricax4g9zHU33pa8sgxWfj7
u2JxqXYUJUfz0S5JykK4CAm7fOAbkntSavAxTAZMOHe7Pu0aRtYieoeNPm8D
O+ype3F3P6rStjteprkNdli3tQrLvUUZM1fNRDS2wS0i++A3nrcouLhXLlp9
Gwi1x8s+nepGWoK2wweUtgHtvfyewgfdqPa79YElyW1wlbagvsboRk1XLTWM
N2wDQUem25OHXaj9l/ni6Fdp+KYl+KRi5yt0uyz5ncWwNJz4fpfDkO0VOu/W
WVH7SRqoww6ua686kNmrvd7JfdKQaL/COe3WgV4XmfVvfy0N3LEi4ZXnX6J3
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
P/8/ICLzUg==
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAAAxh8sFcXnW50e6b+gXXuD6tE1r23
Z1q48rDddz24vE/ZmYWLQhB8t9q4DrZNugdi+g991Yh5b+99d7dgFr8uXL+/
dcG/szk6cPmIPVFHDU9pH+C6vrjAluu9/SLjDcVT1bXh6m3XXgz42aJ1ID0N
BN7ZB+wTFI99pHngMFB3/6G39r9ONT48YK8Jl3+yh2OdylwNOF96xoWKjl/q
B0CmuT98Zc83hcHtTTiCb+stLxKwVe2AKNjCZ/Y3TbzvbxZSg7rnuf3u6tq1
4gWqB+RbXwfukHtqL2mQUVV9VuUAWPr6Y/ufeXru97VUoP65b/+wK0zEuUMZ
Kn/ZvnX57ofLniodmDUTBE7ax/3VWc/lrAQ1f7t9Hu+cmrwFigfeAE1vfb3R
3mzxN89LfxUOVIOcVzXFflmEq7hZNIK/W8b+pHGhPDS8GRg0V4qm/NaWg/MF
uS/9O/RMBs5f8L9/ZtdCaTgfAOa307U=
                
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
Yvx821VFky1TATKqr1rzEO+HQgEd/XgVaO9NzWzPZSOlX632HbEq8MV9m4kr
7k7tKH/XaBUIEo/wnsxhI7nGPw+DLqiAXdUlfh7cHUN9xCdnVAAm3L/pZuPn
3dZ8LqqnCnwfKFoTk8FGped1361lqED1qR7PR8n/t19/T13TUYGpejFQwL2O
79EGsrYKbKw9En7/Bhu5pJMMGWoq4OhBJ965zkYc5VzPAuVUgMvqeWdMEn5+
THTcHhVWgcwA3RDtBPz82evp1TytDAGSp2VEI9mof0T208FJZfhT8M4oMgKP
P3BKf2lMGQ5HiJdOX8T3Q/JpcfqIMvx6YRQKF9io4FPsm/ReZWAV2xTuD2ej
43uL1I83K8PtYfTy9Dk2+ms3typ8Vxky7la2i5xgo5lvz4+VZCnD1cO/d/sc
x+sREP55d4YybHQs+Vfth89/Y31p+E1liIj7t+B2jI1qPoodGbuiDJN8X/Qz
jrJRlB3WXhWsDIE+DmrTnmy02S42zWOvMhSaP2ged8T7b4V7oMVGGZjXTH/x
4z5VEEVR3aMM++Zl1mk7sNGn1YuF/3Yrw/dLWlPn9+L9WRRanYyUYVXvVCSX
Df59Zp3/cJOCMuSwQu5372YjxnNXOcU1ymDUQa64rYuv71DfsWsrSmCtxnc5
Uwe/j7a4PJn/pwQhSa+3Z+1gI84jjroNf5Qg3uKE320t/LwUtLXYP6UET0LV
82LU2GjvMZOTV7uVILD24QpBgY18SWqVvx8pgfeVj+VGovj9XDgSF/NQCZJW
frJVtuH9pXXTWaxACWgpnF+3ieDxWi4tYveUoLaAOjYqxEatIU3M+HQlMHrx
xdZ/C95fPS715Fgl+Fx93sZ8HV7fpMgOS3cl4BpU3/Z7hoVOSmjdGd6vBDLG
Os5PfrHQ0v2xEwH7lEAimkQ5/pOFhGotBW45KMHRpD69b9MsZDC9be+IhRKk
Mtv8qsZYKHt30edgHSX4NxdnSB1kIVfOzpH7gkqAmS86vmxmIXLBzivr+JXA
QSgzU76JhUb3FGse5lOCwwLN3240sNDxzNgYKo8SWGYveXm8YqELO3TlMpcV
QTXh2MYfL1go7/gd3+tjinABu3gt4RELsXqPzoTWKMJUW1mu1jUWenqxK72v
ShHspauFDlxlobNyhoa6zxVBytKfHnmFhTjOSCTPlyqCN3zwabrEQoICbzX9
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
iG/buUiGJR+FaMWTPChKwuqQ2xwZTv+K9WzQXIdsi0torBkybK98uRypwI3I
+gLLoT/JUFR9XDpXgQtVe35KSZ8kw931Z3stzTlR/Jymh/w4GSb+iYzy+K5B
TrE3VSq/k+F5AskiIpkDzRa6NHd+IYMlSzP2yLoVrI5RfePQEBnm06SsvK8u
YUkdBPff/fh4gu3NG+X/YUozwwv8PWR4lrdIy7q8gC1GGjTe6SSD+87YPVZ2
81jL1nvXVD6S8d+v03Sq/B/skI6XgkUHGY4kH1g7s/QbU2tr+dPbRoYbal19
PX9nMI79CvVHX5PBeM2htc85Z7CMC9P7Yhvw/EzU6p3Q+on5CO6RE6kjA3X9
0elCYGE77j2evVdLhrqHEdKFctPYp+aAK3UvyFA6LmY5SJ/Acpw7nW0qyXDp
XmfL6fdj2MlJLZnhcjIceiSfxxXxA+Pbsliz/JgMpJU3L0lCo5jCxJG+tGI8
PxSu553z3zDTxo/z6kVk6BXwt1Kb+IpFhDyi+dwng8anL5tj5oaxOw7iltx5
eLyrmX0H+Iaxanrs0ewcPD6H43YGBwexPz/cc7oyyXDhz14AlT5MqP5Nzanb
ZDieV5n/vvQzRsvS7dt0C48vM1vom3kP5rtXWNgwmQwXu2JKMp50YnGqF2mD
18igoKJikRf2CcvnZVmcu0oGbca+0uPOH7FhaI4uiSeDAefWmAPM99jybY0c
szgy6OVK7ZQ2eoeJn71bMxpNBvE/RVWfSzowe+WQ+e0XybB1b/1FcdM2zJ9n
TKginAyOV8pPhTx7jSV920uzDSUDd0rigp5uC9Z6S+Vo3Fky7LPlFXsV1oj9
CLwdLXmaDCU+7IJkvQaMy5onp8afDDd1fMZGeOsxtO5r76wfGSh6NX8TegFz
/WI1f9UXr++L9Y8vP63FgqurhBSPkiHtb+/Zc+0vsTL/FIuDh8hgGCImKmT9
AntvyXl06SDez/UHbPgqKjGW3Inom25kWLufykPSrMDkh0xr3riQ4Unh639v
TpVhxi/Ke72d8PkcK77TVEqxQynU+bUOZFAs+xytufwEyzJfUtW1wcf3SLoQ
klWCVckctei0IkPrebWF7uxHWM+aLu+TFvj6eQRdya8eYnP9BtEbzcjQU9K+
89lyASZYWXI334QMaP5A4hb7B5jqDYmanbvIICbjm1LemI9ZHL/U229AhmHt
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
z1zpbjvFOf/zebmyPIP59f/z/wOgVT0Q
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/wADGHyw
Z1q48rDddz0436fszMJFIQi+W21cB9smXbh+77u7BbP4dQ9wXV9cYMv13t7f
uuDf2RydA+lpIPDOPmJP1FHDU9pw/iLjDcVT1bXh6m3XXgz42aJ1oNAWJPLW
PmCfoHjsI80DZ8+AwBv7X6caHx6w1zzQ+jpwh1zra/snezjWqczVOBAE4gW+
sJeecaGi45c6nM83hcHtTbg6VP8Te1tveZGArWoHZs0EgYf2N028728WUjsA
Vr7jnv3u6tq14gWqB+TBFly1lzTIqKo+q3Kg/9BXjZj+S/Y/8/Tc72upHKgW
Afl4i/3DrjAR5w5lqP519q3Ldz9c9lQJKt9iH/dXZz2XsxI0vBgY8njn1OQt
UITzzRZ/87z0VwHOXxbhKm4WjeDvlrE/aVwoD+drrhRN+a0tB+cLcl/6d+iZ
DJy/4H//zK6F0nA+ALLzxyI=
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
/wNNa/Ok
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuAA1/XFBbZc7+3VRacb3Z6pf4ABDD7Y
My1cedjuu96BmP5DXzVi3tv7lJ1ZuChE70B6Ggi8s3erjetg26QL1+99d7dg
Fj+C729d8O9sjg6cH7En6qjhKe0DmmAD39gvMt5QPFVd+8AEkPH9r+xt114M
+NmidcAOrOGVfcA+QfHYR5oHHlaJrHN/+Mr+16nGhwfsNQ/skGt9Hbjjmf2T
PRzrVOZqHDh7BgSe2EvPuFDR8Uv9wKyZIPDQnm8Kg9ubcPUDokDdVSL37G29
5UUCtqpB3XPd/qaJ9/3NQmpQ8/bZ766uXSteoAp13x57SYOMquqzKlD12+1/
5um539dSOVANck7VFPuHXWEizh3K0PBiYGhdvvvhsqdKcH7cX531XM4Ifh7v
nJq8BYpwvtnib56X/irA+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L
/w49k4HzF/zvn9m1UBrOBwAmj8B/
                
                "]]}}, {}, {}, {{}, {}}}}, {{{{}, {}, 
              {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1: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
Be0FNRLk+R9WlejNZnHxRK68qkICA7cJUpdjFqs5buzjBmUSOLe6jbV1pbHc
yh+e3CZHxOvFNdFUHM/SNFm7vY5C1BN6Z3xBKZbF2+W1wpZEArbTBCXjaDQr
a0kjzXsjCUjZa1IWNMNZHTufvSsQIUEJXT1P7Jwvy/RzvTp1SRZENHN7k3dY
syRdFZceLcgCy2StlTTdgjX8O/KN7pws9Fz1XbrRb8QK22jh7PBTFtyL17RE
9euwKo98ik8ekwXNP8MDmVWqLPrUt99r22Uh/0hy39lDq1gCQnMv/hbJgn0I
XfCx3lNtpVGXzqSHstD0ejCY16xU26j246/N+bIQ65OX/dKkSPtiQAHD7Z4s
OKrVPW+YuKs9O3Q4qzVVFqxoQSfrBG5of4P68MJIWbj9bLW7edhR7VLveDNH
Z1m4FSmUSMtdo23fyuioWS8LTpF3/9pM62qVtHXV8/RLg10o+G1ii2p2qBn9
rM7fBIuRPs8HMs22uFJfLXke2AhRCoF+rCxFptROJaoTWQq877WGca3oVnYU
0rQIZG+AJ2F7s0aCW6gCp21sL2ZIQHTq2T2koEOSvSsd/JqPrYcK/H0izwsu
Aclt/r6868WB6/8/gwJb/V3erPvP7cID8fwJov+Z+Sg9Jm2nyH8uDjbN9hMQ
/s8RI9uCJ0qF/rMf/4x7raTAf358JSZGsYDvPzMkBmessv45P2f7vnOJ/5xV
3Ud6E/LP0X81Sk7a/fMxry+fC5dW/2fJfWSprdb/HD/kF3zI8J/X+r3pj2D9
M+9N3/w2uX+efluHnZ1f9Z/f6pw4XHn3nw3fvawZuPXPVQfXKQpc/+en557/
OHj2n3NKhUKXzP+ZpO88JK//z7c/lJvu0vznWLbjukzyPwucf+L/ev0/X16z
pvsH/z8vT3bQleT+52CF0my9Xyv/8/8AH6ojvA==
                
                "]]}}, {}, {}}, {{}, {{}, {}, 
              {RGBColor[0.24, 0.3531726744018182, 0.6], PointSize[0.01], 
               Thickness[0.001], Opacity[1], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXbzKrsVazuDAOveHVSLr3turi043uj1T/8AOudbX
gTve2TMtXHnY7rveAa7riwtsud7b+5SdWbgoBMF3q43rYNuke0AepFzurb33
3d2CWfy6BwptQSre2vtbF/w7m6NzoFoEZMMb+4g9UUcNT2kfANnm/vCV/SLj
DcVT1bUPLCkAaXhhb7v2YsDPFi04P2CfoHjsI02o+U/tf51qfHjAXhOq/5H9
kz0c61Tmahw4/FUjpv/QVXvpGRcqOn6pH3gTCPLBRXu+KQxub8Jh/IP2tt7y
IgFb1aD8jfY3TbzvbxZC8HdX164VL1CFuneKvaRBRlX1WZUDDFDwM0/P/b4W
gv+wK0zEuUMZzm9dvvvhsqdKcH7cX531XM4Ifh7vnJq8BYpwvtnib56X/irA
+csiXMXNohH83TL2J40L5eF8zZWiKb+15eB8Qe5L/w49k4HzF/zvn9m1UBrO
BwAckL5B
                "]]}}, {}, {}, {{}, {}}}}},
          PlotLegends -> Automatic,
          AspectRatio->1,
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{-18.4206804291575, 0},
          BaseStyle->30,
          CoordinatesToolOptions:>{"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Part[#, 2]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Part[#, 2]}& )},
          DisplayFunction->Identity,
          Frame->True,
          FrameLabel->{
            FormBox["\"NHEJ\"", TraditionalForm], 
            FormBox[
            "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(P\\), \
\\((extermination)\\)]\\)\"", TraditionalForm]},
          FrameStyle->Directive[
            GrayLevel[0.5], 
            Thickness[Large]],
          FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
              Charting`ScaledTicks[{Log, Exp}], 
              Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
             Automatic, Automatic}, {{{-16.11809565095832, 
                FormBox[
                 TemplateBox[{"10", 
                   RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
                FormBox[
                 TemplateBox[{"10", 
                   RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-6.907755278982137, 
                FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
                FormBox[
                 TagBox[
                  InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
                  NumberForm[#, {
                    DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 
                0.}, {
                 AbsoluteThickness[0.1]}}, {-20.72326583694641, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-9.210340371976182, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-4.605170185988091, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {0., 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.302585092994046, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}}, {{-16.11809565095832, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-6.907755278982137, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
                 AbsoluteThickness[0.1]}}, {-20.72326583694641, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-9.210340371976182, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {-4.605170185988091, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {0., 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.302585092994046, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
                FormBox[
                 InterpretationBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                  Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
                 AbsoluteThickness[0.1]}}}}}],
          FrameTicksStyle->30,
          GridLines->Automatic,
          GridLinesStyle->Directive[
            GrayLevel[0.5], 
            Thickness[Tiny], 
            Dashing[{Small, Small}]],
          ImagePadding->All,
          ImageSize->800,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{0, 1},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{
            Charting`ScaledTicks[{Log, Exp}], Automatic}], 
         TemplateBox[{
          "\"1000\"","\"5000\"","\"10000\"","\"25000\"","\"50000\"",
           "\"100000\""},
          "LineLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    FormBox["\"N\"", TraditionalForm], TraditionalForm, 
                    Editable -> True], {
                    Directive[
                    Thickness[Large], 
                    GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
                   Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[
              Thickness[Large], 
              GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.1960695736042402], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.2941043604063603]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.2941043604063603]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.2941043604063603], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1648000000000001, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24720000000000014, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.2952621124003028], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.4428931686004542]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.36467577519939387`, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.5470136627990908, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.4, 0.22461366279909056`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.6, 0.33692049419863584]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.23544844960121214`, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.3531726744018182, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.3531726744018182, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.3531726744018182, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.37551056200151484`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.5632658430022722]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.5632658430022722]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.5632658430022722], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2844273255981813, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.42664098839727194, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.42664098839727194`, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.42664098839727194`, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1756347868021214, 0.4, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2634521802031821, 0.6, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2634521802031821, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2634521802031821, 0.6, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.3156968992024241, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.47354534880363613, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.47354534880363613`, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.47354534880363613`, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3442409883972732, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5163614825959097, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5163614825959097, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5163614825959097, 0.24, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.20417887599697054`, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.3062683139954558, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.3062683139954558, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.3062683139954558, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25588323640333216`, 0.4, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3838248546049982, 0.6, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3838248546049982, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3838248546049982, 0.6, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.3959453488036374, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.5939180232054561, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.5939180232054561, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.5939180232054561, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.26399253879606255`, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.39598880819409377, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.39598880819409377`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.39598880819409377`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", "\"N\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", "20"}], "]"}]}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
         0.019444444444444445`], Thickness[0.0075], 
         LineBox[{{4781.199815078831, 0.00008806019563931354}, {5000., 
          0.00007147455495111493}, {10000., 0.0000355456201602714}, {25000., 
          0.00001430011749095143}, {50000., 7.128219304432178*^-6}, {100000., 
          3.5256070261296334`*^-6}}]}, 
        {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
         0.019444444444444445`], Thickness[0.0075], 
         LineBox[{{3143.8715209774655`, 0.00008806019563931354}, {5000., 
          0.000029664620548979047`}, {10000., 0.000014752765301634697`}, {
          25000., 5.9350850028381355`*^-6}, {50000., 
          2.9584783144227106`*^-6}, {100000., 1.4632591235647644`*^-6}}]}, 
        {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
         0.019444444444444445`], Thickness[0.0075], 
         LineBox[{{1000., 0.00008785067925428384}, {5000., 
          0.0000167582996552065}, {10000., 8.334212846563312*^-6}, {25000., 
          3.3528806745551557`*^-6}, {50000., 1.6713197471940141`*^-6}, {
          100000., 8.266323456059548*^-7}}]}, 
        {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
         0.019444444444444445`], Thickness[0.0075], 
         LineBox[{{1000., 0.000056953321657514184`}, {5000., 
          0.000010864353455177681`}, {10000., 5.403044222783985*^-6}, {25000.,
           2.1736620952522835`*^-6}, {50000., 1.0835113850284135`*^-6}, {
          100000., 5.359031742433074*^-7}}]}, 
        {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
         0.019444444444444445`], Thickness[0.0075], 
         LineBox[{{1000., 5.4327753338780954`*^-6}, {5000., 
          1.0363502909410244`*^-6}, {10000., 5.153961968699432*^-7}, {25000., 
          2.073455502083846*^-7}, {50000., 1.0335611260667918`*^-7}, {100000.,
           5.111978479295407*^-8}}]}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->30,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(NHEJ\\), \
\\(crit\\)]\\)\"", TraditionalForm], None}, {
         FormBox["\"N\"", TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Large]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->15,
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5], 
        Thickness[Tiny], 
        Dashing[{Small, Small}]],
      ImagePadding->All,
      ImageSize->800,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100000.}, {0, 0.00008806019563931354}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     TagBox[GridBox[{
        {
         GraphicsBox[{{{{{}, {}, 
              {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1:eJwVj3k4lAkAh0UxQweiKFeSMGYNZvia+H6ucuT4opQNgxbJEWYLkSQ2D1uy
zeyadaxFSNJGbDtFqTWtNh2aR0uODtJqisqVwrZ/vM/73/s877qwA77h8nJy
cl5f+N88hXajvfHN9rRYQXeRpMwePIt6nlBAVkaIWiYl6WSTZlSnlbCS9F1q
VtEgOUWOjy8J0hFeJk157zULJKXkyWCpkZrwT1KQ4++TIaknA4VXc1SEUtKj
hCZLkrSSt1gXxTThEHm2OlTMl9wjk+Zr/JSEE+Qj81O/JkgGyDNsn8SyxCUQ
KYbkDtHGyTb+GWZy/wrot9a713VNk2WCkFcLdE00Pk/u23VwgVy0emmFqmAN
VkXnPH48oACvYJ3H6df1MZR5JN/5mhJKqgxm++oMsT4zIDJbpoLq1AuZL2M2
YKIoRVC8WBUbG2W3S+c24umSosAfx9SQTDYfa2k3Q9aLi+xPChogza1mcoOZ
sKS0JxYmNCFKqtnnMmoBw8LQGvu+1QjLkxo3+Fvirl9JzEuZNqyX1ieJyqxw
tJSpZdG7FrLmu/JsRTZGAy89ej6uiwOnX+W6hHMgmlqZdX9OH8yioIS6Ohuc
yx9eVv/BAI/ur/7h9goCz/rFz0zn1uEyh6HG3bMJJXzuuckJQxxpP36Hd5ML
m1uNM4cWGUE1qyfjk6EdEjKKb2rQN2CAnyN8G20PVrZFhvzCBghPpg0JHpC4
63yt/Sx9I5xlQ24dyx0gc/8wXyhvAgNTZT2FBgfUtYgaaqZM8G52++lVex3h
/nrT29gFU4SESy7tpDkhOiRL9/iUGW59ExQfd9UJUfl/Sb3kzZH3KZHpFO0M
unmaIofOxLhZk8hxhQuYqr2MmHkmPMa0K9a0ucCi3rJnN80Cjp7n9+hHbkFv
h3aLhxwLJQ5X1QfpWxHL7/KYTmHhTcebiGTxVox9PFE8P8fCk9ee++15rrCu
VH/FTLFES/k95T41N4Qzfp7+fd4Sdu/Tvq664oaA7im5/alWMOg5V8MIdIce
kedaO2mFmR0fz+Qu88DDQzq+Ww5bIy7q4FeajR5w7cn0p01Z4x91jYiUiG04
r/VSzziNjWo/y+LCVZ4YXH7MqGuBjZXM1GMvxJ7oNnm3vuowB/yiEQVarBfE
+sEj0gUOEsozOLtXeiOMW1bJSLOB1KEwfG+zN3pV1vyiOmUDxrddVm6RPnAQ
nw6iDttCtax4l7kihajv+zSvTNpCepzfX6xE4cEMoTs4bQtRpMfeZXQKRLjQ
SHHWFoYWM3FvVSjQSG/rHfO2YLf6ffebGoWasevUuCKBgD7lJrYuhVHfijwT
LQLlWinq9mwK0dr7F4m4BCI++xRe4FDoypbQbtgRYDw11tOzpbD5vaHqCEng
crXUdGETBeW/n+hxnAlIbFiObaBQm+Zl93AbgdEdIwe2bPvSH2Ql0YMI1BOt
k02eFLZ7nkxn8QjwdYSpxt4UxFf+zd4VSuDzC6cTStsp5BaUC86GE1jOLy3t
8Kdg5qzR4BhHoMv/oBF3N4WCi/F/7Isn8BPXs7Y2gMLs2s4b+YkEDORnm/IC
KdyZyL7ff4jA8PCDzZ+DKFiFPu9enEKgtqO6LYZHoaiTHGCkEoi7kO7aH0JB
nls07HuEgHXBzk6vsC//VdOylKME/gOzdB+S
                "]]}}, {}, {}}, {{{}, {}, 
              {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1:eJwVy3k4lAkAx3GNdY1zyDjSGDNvkzAJM5XJvD8k9/ESHY4UuUoUCakeHSSj
HsVs5EgSmsVWjh2kHh1KtuOp2ZWi2gflQaW2Nitp2z++z/evj0VUclAMTUlJ
ye9H/z9S+TYRvbNNPOIQ2n95QCJGpG1TpLSYVLuV28guSCBbDRPu20tryCBD
7syYJJOcmlKJMJO2kNPiXez7kmPk8U0KgiG9RfoElThcl5SS4dLOPE2pgtw9
aC2WSy6SN5f92qEuHSGPnfvc3SJpJ9Pn6teqST+RBkdCf2qW9JJFgoCUqhQV
nDoh7b9a+YzsTi3iZwzpgvmiyCKsZ5isKt489l3DECkbE2dfmY2T84y0zusV
m6KtkDDec2CK9Ntk1n/gujm+JFas6G7+m6yoZc8MNnCQm1yi/JD/hazLajz0
OnERwokFUedOz5CLmyfvVH5bjD2Blu7tPd/IDLLtYNdtK+x8HDbhVaEE0sZ+
On8THx7y+H8GHGkoTa+Pdxu3hUt6u7fvA2VESRS8K+vsEO3l89k8RwUOWk3p
pVX2qF9fHfUzSw2Tbb/TBKoCGGSKeEnP1JFcOJbvFiPE+VSmg+UJOvhlEbsa
GpYjWPYbLYfQwpOHRqfu6K4E/1Op5eohbbQIrRmiMEdY7nVh1GToYv/tw/ci
b4hwQcPQ0qFMD3pHBrK/cpxwx9U6UWUPAy9S86Tvtovx1aSGscRVH9Lj+0aK
H5G4uVcctd/cAKsnRzx7dZxRnuk4n/vOAOwldJbyFWeoxPSPt8vn48NMYCEz
2gXKz6SJB4sNsTmm53KIuisYb9sCzmxh4ubWiJ1Jna5oOTY9NAwjSL6m8F23
r8aY/mAhy9QYU1atpS66buCLOBdko8bwfm9y3rTbDaoTeVvjbpjAxfeXMPO4
NZhyDMpJKzRFhXOn/ksNdySmdd3bHboAb3vfxmZ0uCNL5NVZIzTD8wnfbeJI
D1RUrNDm0Raiq/oBfZDhicB8d/rTlwvh9HFfaK3cE0xDefzzJhbYAxfrrcO9
sKOgb+Jhpjmmg/8tytf2RkPP94IZKzaSEtKWGjZ7w4rZp2g9ycZT/fmxmbE+
SJHxUjTmWaBurV15CdMXNOGTcyFJFjDgZx0c7vBFmY7dIW+FBVLL3iir7/DD
nI25vN+Vg13V2cINBv7YduZapbaMA4VzSUx0mz9Yc01GTrpcWO9+bO8ZF4Dy
WtvXtP1c6FWVr7dRpcCt3BKTMsyF4nDqULkaBeX3BfdWjXJRGucdra1BYQRy
W5U3XHBsp5PeaVKo+Utn5vQ4F4Jra3MvMSgQi66e6PrAxcZBeqtgIQVeA1Ou
rkSg2jhTXyygYNXRRz9rRiB2NqCkUUhBQ/NLcjyLgPUrHou1gsJ4GOcPOzaB
ljrFku+OFGTfMs7e4hLoWb7MpRs/vAtPMG5FYDz4TfIaHwrWd7MjhI4EmlZe
+9zqS0HTpOHGnIhAqpk0i+dPYTKhf/FdJwKzw65H1QIpNGgu/RjqTEAntbKy
dx0Fm4DnudkeBB6vSyNEGyhoValOenkROC3ylck2/vBTdoEGPgTYtJlWSTiF
xlN5C2r9CYyOPlo1G0Hh+HBzdjJFQNZb150YSSFJ8HJ0ZRCBpMYDHkObKfjn
0H1owQQcTobc94uisPRP4aW+EAL/ATJ7BQg=
                "]]}}, {}, {}}, {{{}, {}, 
              {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1:eJwV0fk/1HkAx3FHuWNcn0qt6zFRIRES+byRSgy+Ujoco+TayjGTxaZZqoc8
HD0qpsiR8EAWpYyKVFisXbXSlLXNRKUclWg7JNW2P7wezz/gZbQ7ZnOYnIyM
jNf3/pcr38EOjW10ehAlkBMk/OIErmUdV5hLM8POZgdLA6lIN+qOtbCcHg8p
LjaQ7qOTk3ODFgsbKCvY0FRGmkyzg8VsTeFvtDdw195JSRYNFDanqwrF1EqS
mj0qKaTtKy82KQmH6ZNFp4qHJTU04WuVn6LwHb3uqFf5VHKD5tj48Ep4cyGn
H+9apn2XtvJzLBKlGogs27xUtO0hLckNGf2mrIvo0YCq8RQplZ2vVsbK1YOv
53TS7dKn1Ct4cb/glgFO1+SOXHJ9QYsqDGckNcaIa/vQ5LtynFYerD38Yt8S
FMTeyyhQnaCmV151FX8xRaIOfNf3TdJE2pja0rEcEx7TGsKOt5SaW09nBFsg
Ke0s7+qZdzQ/oSrSbdwS5upJfnUhH+juTLHJZX8rLI91iDjETNNVanUJ+SXW
oP3D+gYGM/RVY4+cjYINihfwlPN1ZmnMidEMtzBbLKlw5I3IfKUWBUFxNTV2
aLWfECj1fKP3/5p/qkvDHuI+l0GZQRk02JppOgSswX1V2XvhXbI41HHkD26b
Az7WW0ns2+XAOjqQ8tl4LSwFKSbxTfJ4zE8XTux1wlRPe5ve+TkQZicP5/ZS
/JOemGheMBfrXg27d6s7w6vLKKXyqAIMl6noy192xn2zsc6sKEVMzfieIKEu
EHwxMn28SwkhYZ31W5VcIfL1GcjbpIz2PUGx0c2u0NSeKL/lpoLMzzwL173r
kDpTfZFxVMXkclG+i4YbkvcEqnkaqcHjzcIyvVY3FDn+crhebx5cOL8GGESs
h7vwtEeqvDqKnJu1BpU3QFG3x7d5RB2vu1+HJzZtwEtZPm/XoAYeveT86MTd
iDr7Yzz7UBZaSu+qSDTdMV2Rbf/TEAtr3ybvrLjmjnT/45WRWzVhOHChyixw
E4wX6tuxftfE9JZPORnzPOB9KvzefjctREfFr9C94oHbnAu6Kde08LeWTnhS
uCc6WsrD3e20UelnVZhHOBC7WPZ31GtD2+Jg6rMmDpYqNkx+ZOuAXzAir7Tf
C+pHpsjQeR3ElabYbtf2hqPzshfJRBdi57yw0EZvxLEmxXfTdWF2oM/aPcIH
Dmdieh/OIWCVFG4zV2Dgzh07kJNIID7ClxYqMghWb6F5PxPkR3iEzlNmEN9y
QqkomcDYcjp6QpXB+UX2hRUpBDY3/dIuaTKY6U9rv55OsEOiIrL5gUENw9Ya
yiMoXZCk5WTDgOXKvWh+nSB81iev1paByZR1klUzgdmQib7+agZOJQrr7FoI
GirFy76tYRD1tfYhWgk67Va6tIJBW9Psl83dBONbRmLWezLgrzrLSRog3z/c
fC/iMEh/up8IHhHwFwsPmngzOHfSZeiwlGD2mesxRV8Gf74Z5Wc9IVDnFxd3
+zNg16wuODdG0Ocfz3bYzsAhQDWs/CXBGQdOdfUOBozK4IoLrwkM5WZEmYEM
DkWmtV2eInj+vNdxNohB7vydWVf/Jajurmzdx2VQ3Wnhf+M9QXStYKM0hMHt
eFnD1o8Eq05uveO1m0E/+8FYxyeC/wBRPhrQ
                "]]}}, {}, {}}, {{{}, {}, 
              {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1:eJwVxXk4lHkAB3D3/Raidlsr5CjTLMaoqPl9Mchq8KKkdYwMo0xRJle6xHaw
bQezeMLOTgcjXWTq4UFYtXqybM2zy5OjVjbliORJiN394/N8LGOSguPUVFRU
/P/z/3z1NmvBfgVnoNWxfqfwIAd8h5t8SQHZFTwTmKUIJrWmezpYkitk8blX
dpgihkxMaEaaSe6STosRMy9FMjkbpbQ2kvxK1nMb37gqTpAISf1pfYmSJCjt
utiKi6TV8VadjuQVUS+N4LIUMpK2UBGiLflAglQ/zjsqqkk+OzBZmqyJFoFK
9bVjraRZnM9M71uKhvg6m9UzT4i0IHp4UdcUA74Mn9MWz4jqCoPLhgUroZla
aFO3tpv4R5n9dbRpFS45m9sM9vaS0msWs71VVries6tCMPuClGfeOPHPXhvo
ZYzOHjg0SOxqRh+VfbbDL7U5fZmdQySdKLIa2uyxdYEROhg6TMg61kxuFBPM
cy+ifGrekuK0it1ebx1wQe5/pU19jMTkKW2rQ52g3dV+THbyHXE2uJlWLGUh
4md5CufdBBlVPFFja7HR0JuSGsZ+T5LOD+d6xbmgP6pMkiWeIsxLkQeqqtbD
7PuOw2tKP5BnnSsuPlq6EQInDYeFgWly14Vh5BbuiodZHvIg6iM50pb9mN/i
Buewk+PPQmaIYU7P8TmrzYgW2wXHFnwi/eLTknERB3JW55HkplkiOXv4VUEX
wXza0YO31OcJd/SVb/sSd4h2sZ0TWJ+JxVo9c/VqdxSf8zF0Dl8gk7NB55cL
PNDFjb5vX7pIouMe3tmu4wnjAHeTrlgVtMZG7k+s94QHR+kk01ZF3lwy01PE
xR8BP0Vllqtiwr622GOpF/ZVhyflb1aD37svL69s9oJhz5Uhz341ePCuh6+K
98aDoEk4paij1L3eeEDXB12jIrmtrgbG2seE6XU+GPJLSK+Ra+D5CC+Bw98C
nTkR4xg00SD7Xa/XyBeOiZPcv19qYvP7w99du+8LofMh95wMLVj0yCsYEd9i
fqUTj7lEGzPbPuXnUn4obBM17LuljcQ9Kd+Y1vjBvUVuPOatg25jE2GGcCvG
skQd6m90UB7iVFK0nIc5QXih5RldLGNmZg3W8bCiKMD7qLkexJdeq+vs88eG
c21hyQ/0cEB23CVsWQCE3aCv7tCH0r0oTqAIwDR3OHRgRB+Mg09ZvvGBOJNs
0nr7BwMYSkt2rNOiwZjiLmu2oqDMFveVaNOQVHWs5ttQKI73E1C6NFSFO9if
7ShYOcwkjuvT+LM7YbsrkwK7MeTkbSMaWY0XCu9soLCzV6+W/TWNnjMDX8l4
FGRfZBhz2DROWWRaZ6dSEM4HFt1woTHZo+FimUGB8cLW3HwDjcj8H72bMinc
LVeuXXSlwdKSCeeOU3i43tGjGTT6Rn6rEOdReLvtdZL3VhrO95YzY6UUbm5s
nK7l0SjdL+WoXaYgNpNk2gbQ0LW3D5BepTA/6HlKO4hGfwknqbeSwhJxWVl7
KI3cE7F3ttVSeBqaYu0WRmNq03jz+3sUCt14lZU7afCn056er6NgoTZbmxdB
w2V33tSTJgpDQ12b5iNpSC1NNUQtFCrby5v38mkYPC8z0W2jkHjj6Ja+aBqp
BWtsyh9RcL6wvcM/hsZL/2oX78cU/gVWChjP
                "]]}}, {}, {}}, {{{}, {}, 
              {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[0.0075], 
               Opacity[1.], LineBox[CompressedData["
1:eJwV1Pk71AkcwHFrclaMJG25mhVPIUfD5vp8kFyN8W0Vco0lJFdMomckR7aW
dRSzkSPUE8lRrmpmJcdgQq7xLUXtli4kevSsNLLtD+/n9R+8twVG/xIsKSEh
4fq9/2VRBNpBx1usRwV61dk0tEaWYR2Lmw9sNV16XI4aNKuEDZhwr8HWXrmP
Zjn6MD8v5afGbYJ5dU6/ao4VZPmLtJW4XTDeu9tSNocBvlz++bVcETA1cmMl
cnyh06ieJ8udAllnyBZnR0D8typ3Ge4ihPirFC9nJ0Ie3S22LFYK66aiok90
ZEE7O88gYVIRyzd++yNk659Qlh/wblVOBbOovAlH4xL4QXXdVWr+Fvwp3cOZ
fbwCXP3VHie1aWL3vsvSRdLXoeS61vJEDQ3d0r+cLH9/Ayo5talvIrZjVUze
kVReLeg2zvaUruji1JDl08lrtyABWlJaBTsxtIr/7P3FBgB9k6UMfwMcKA9Q
oAU0QWF81VH7aUMsXqg446jdAoGZIp0GD2N8LsF2mVC4C7vX1cUXlpngGpOj
DiVP7sFsS78kXZqOxbSZooFePkTnvsuwDzbF0rC1RjP1rWBQ5BdTU2OGqSPE
Z/rJNhgdVL3Yo7gHI1eU5ONvP4AmUz0lCx9zzKApNIRdaofTgrSHrA4LDNAd
ls7P7QDq2fHkrzQrDH/8cpme3gnP2ee5c+HWeHTzOZmIsC7gZiVO5Q8Baph/
evA0QAB7Z6echAo22D398eILx27Q2iGvQWmwwXJHqzU+O3tgYflA7qYgWzQ7
60ZT0OqFgODu24dk7fCvA5+9PKWE0HnE73gU3w5Xvv1q9WRFCJlfYw3swvdi
jKd62+DCQ5jf2Vxoq2iPpE24t99YH7h8/PHqlnZ7/FcuuYLW3w+2jJs+mqH7
UPaILiWpYQBKbPgbXsg5oGuYOoXIfwQfhB9CEngOyGA+rT/8+yA8m2Ecs2Y5
oubLfJ7YbAhaKx7JTyg54eK6Mva7hiGw+pToff2uE9omL+65ojMMWuM3qvR8
nXGH87yrUsEwLB38kpex3gXnUtzMNZVHICosbpdKowvqU5aMltJH4MmGjSGn
QvajwyJlNUJyFCrdjYsLNjFw2eKOWkniKCgbcFJe8Rio+7DRoWBuFNhFbymy
ka5oLFR2NDwmgpiKZFMvZSY2UVvdL0yKQGRTEBzUwsTh2vW36phjoHdixMQp
1A37eO0vQ4VjQC0r9tSXJhCobdtmLUkQpbEni2UITNxyI2HGmoTCUJeg9XIE
8rXzBqeRBJrhUtTcWgLNzUNPv99LAv2++2+3lAikByqOv9lPwuEJ+Wa6OoEG
Tazcf3xIqNh8aoM1nUA1L4lVkkNCiNitoNaUQO/A6UPkaRL0/tbR0PiZwMsR
opqxMyQ0VYp2rJoTqJpS5S1KI6HbzMi2HQlUriZahjNJmD74NnrffgLlxWWR
/UUk1O25/7mZQaCTdGZXXwn5/Qtcjg6TwHPUuK19V0gQv7I7J3OAQKntzkLh
VRIU2KWlQg8CJZgL2j03SRjxiNO28CIQvZ5xumtJuGTBqK4+TGBSoGBEUE+C
luRyc6YvgeKThcldjSS8fj1kKfYj0DIl7XFnMwnVwsr2CBaBnMzIXZ13SIiq
TXKcDCDwHtczveMeCbsvHBpwDSTwyxXbiXY+Cf8BG404bg==
                
                "]]}}, {}, {}}}, {{}, {{}, {}, 
             {RGBColor[0.6, 0.24, 0.2941043604063603], PointSize[
              0.019444444444444445`], Thickness[0.001], 
              LineBox[{{0.001, 0.0003746852801920321}, {0.0002, 
               0.00007147455495111493}, {0.0001, 0.0000355456201602714}, {
               0.00004, 0.00001430011749095143}, {0.00002, 
               7.128219304432178*^-6}, {0.00001, 
               3.5256070261296334`*^-6}}]}, 
             {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[
              0.019444444444444445`], Thickness[0.001], 
              LineBox[{{0.001, 0.0001555084417074939}, {0.0002, 
               0.000029664620548979047`}, {0.0001, 
               0.000014752765301634697`}, {0.00004, 
               5.9350850028381355`*^-6}, {0.00002, 2.9584783144227106`*^-6}, {
               0.00001, 1.4632591235647644`*^-6}}]}, 
             {RGBColor[0.6, 0.24, 0.4428931686004542], PointSize[
              0.019444444444444445`], Thickness[0.001], 
              LineBox[{{0.001, 0.00008785067925428384}, {0.0002, 
               0.0000167582996552065}, {0.0001, 8.334212846563312*^-6}, {
               0.00004, 3.3528806745551557`*^-6}, {0.00002, 
               1.6713197471940141`*^-6}, {0.00001, 
               8.266323456059548*^-7}}]}, 
             {RGBColor[0.6, 0.5470136627990908, 0.24], PointSize[
              0.019444444444444445`], Thickness[0.001], 
              LineBox[{{0.001, 0.000056953321657514184`}, {0.0002, 
               0.000010864353455177681`}, {0.0001, 5.403044222783985*^-6}, {
               0.00004, 2.1736620952522835`*^-6}, {0.00002, 
               1.0835113850284135`*^-6}, {0.00001, 
               5.359031742433074*^-7}}]}, 
             {RGBColor[0.24, 0.6, 0.33692049419863584`], PointSize[
              0.019444444444444445`], Thickness[0.001], 
              LineBox[{{0.001, 5.4327753338780954`*^-6}, {0.0002, 
               1.0363502909410244`*^-6}, {0.0001, 5.153961968699432*^-7}, {
               0.00004, 2.073455502083846*^-7}, {0.00002, 
               1.0335611260667918`*^-7}, {0.00001, 
               5.111978479295407*^-8}}]}}, {}, {}, {{}, {}}}},
          AspectRatio->1,
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          BaseStyle->30,
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{
             FormBox[
             "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(NHEJ\\), \
\\(crit\\)]\\)\"", TraditionalForm], None}, {
             FormBox["\"1/N\"", TraditionalForm], None}},
          FrameStyle->Directive[
            GrayLevel[0.5], 
            Thickness[Large]],
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          FrameTicksStyle->30,
          GridLines->{Automatic, Automatic},
          GridLinesStyle->Directive[
            GrayLevel[0.5], 
            Thickness[Tiny], 
            Dashing[{Small, Small}]],
          ImagePadding->All,
          ImageSize->800,
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{0, 0.001}, {0., 0.00037380911541493614`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], 
         TemplateBox[{"\"0.5\"","\"0.75\"","\"0.85\"","\"0.9\"","\"0.99\""},
          "LineLegend",
          DisplayFunction->(StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    FormBox["\"Crash Confidence\"", TraditionalForm], 
                    TraditionalForm, Editable -> True], {
                    Directive[
                    Thickness[Large], 
                    GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
                   Automatic, StripOnInput -> False]}, {
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.2941043604063603]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[
              Thickness[Large], 
              GrayLevel[0.5], 20], FontFamily -> "Arial"}, Background -> 
            Automatic, StripOnInput -> False]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.2941043604063603], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.1960695736042402], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.2941043604063603]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.2941043604063603]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.2941043604063603], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1648000000000001, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24720000000000014, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.2952621124003028], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.4428931686004542]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.36467577519939387`, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.5470136627990908, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.4, 0.22461366279909056`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.6, 0.33692049419863584]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.3531726744018182, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.23544844960121214`, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.3531726744018182, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.3531726744018182, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.3531726744018182, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.5632658430022722], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.16, 0.37551056200151484`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.24, 0.5632658430022722]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.5632658430022722]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.5632658430022722], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.42664098839727194`, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2844273255981813, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.42664098839727194, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.42664098839727194`, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.42664098839727194`, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2634521802031821, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1756347868021214, 0.4, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2634521802031821, 0.6, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2634521802031821, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2634521802031821, 0.6, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.47354534880363613`, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.3156968992024241, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.47354534880363613, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.47354534880363613`, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.47354534880363613`, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5163614825959097, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3442409883972732, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5163614825959097, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5163614825959097, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5163614825959097, 0.24, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.3062683139954558, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.20417887599697054`, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.3062683139954558, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.3062683139954558, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.3062683139954558, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3838248546049982, 0.6, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.25588323640333216`, 0.4, 0.16], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3838248546049982, 0.6, 0.24]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3838248546049982, 0.6, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3838248546049982, 0.6, 0.24], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.16, 0.3959453488036374, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.24, 0.5939180232054561, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24, 0.5939180232054561, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24, 0.5939180232054561, 0.6], Editable -> 
                    False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.39598880819409377`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.26399253879606255`, 0.16, 0.4], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.39598880819409377, 0.24, 0.6]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.39598880819409377`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.39598880819409377`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendLabel", "\[Rule]", "\"Crash Confidence\""}], 
               ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", "20"}], "]"}]}]}], "]"}]& )]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     Thickness[Large], 
     GrayLevel[0.5], 
     Dashing[{Small, Small}]],
   GridBoxFrame->{"Columns" -> None, "Rows" -> {True, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.683309983373358*^9, 3.6833100216448193`*^9, 3.683310882488175*^9, 
   3.683310960756343*^9, 3.683319624234688*^9, 3.6833201124767723`*^9, 
   3.683320473799842*^9, 3.6833205784041777`*^9, {3.683399979290882*^9, 
   3.6833999877927313`*^9}, 3.68340132333107*^9, 3.683401949840919*^9, 
   3.68340251773289*^9, 3.68340413670013*^9, 3.683404399136258*^9, 
   3.683404689167047*^9, 3.694164316612311*^9, 3.694230251581255*^9, 
   3.6944326687714252`*^9, 3.69469376190362*^9, 3.694777362948152*^9, 
   3.694778413402505*^9, 3.694993164086894*^9, 3.694993763275723*^9}],

Cell[BoxData["\<\"grid.tiff\"\>"], "Output",
 CellChangeTimes->{
  3.683309983373358*^9, 3.6833100216448193`*^9, 3.683310882488175*^9, 
   3.683310960756343*^9, 3.683319624234688*^9, 3.6833201124767723`*^9, 
   3.683320473799842*^9, 3.6833205784041777`*^9, {3.683399979290882*^9, 
   3.6833999877927313`*^9}, 3.68340132333107*^9, 3.683401949840919*^9, 
   3.68340251773289*^9, 3.68340413670013*^9, 3.683404399136258*^9, 
   3.683404689167047*^9, 3.694164316612311*^9, 3.694230251581255*^9, 
   3.6944326687714252`*^9, 3.69469376190362*^9, 3.694777362948152*^9, 
   3.694778413402505*^9, 3.694993164086894*^9, 3.694993764353836*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1174, 1035},
WindowMargins->{{Automatic, 102}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 155, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[760, 28, 285, 8, 71, "Chapter"],
Cell[CellGroupData[{
Cell[1070, 40, 120, 1, 64, "Section"],
Cell[1193, 43, 6490, 155, 621, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[7720, 203, 94, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[7839, 208, 5537, 144, 537, "Input"],
Cell[13379, 354, 382, 7, 32, "Output"],
Cell[13764, 363, 48987, 782, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62788, 1150, 192, 4, 32, "Input"],
Cell[62983, 1156, 333, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63353, 1165, 461, 11, 54, "Input"],
Cell[63817, 1178, 486, 9, 32, "Output"],
Cell[64306, 1189, 428, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64771, 1200, 279, 5, 54, "Input"],
Cell[65053, 1207, 2742, 39, 159, "Output"],
Cell[67798, 1248, 358, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68205, 1259, 110, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[68340, 1264, 145, 2, 44, "Subsection"],
Cell[68488, 1268, 3757, 103, 39, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[72282, 1376, 302, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[72609, 1384, 7418, 149, 768, "Input"],
Cell[80030, 1535, 38312, 761, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[118391, 2302, 110, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[118526, 2307, 96, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[118647, 2312, 8473, 185, 852, "Input"],
Cell[127123, 2499, 146132, 2605, 825, "Output"],
Cell[273258, 5106, 1085, 15, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274392, 5127, 94, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[274511, 5132, 5378, 125, 537, "Input"],
Cell[279892, 5259, 59228, 1003, 70, "Output"],
Cell[339123, 6264, 449, 6, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[339633, 6277, 91, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[339749, 6282, 207, 5, 4, "Input"],
Cell[339959, 6289, 206691, 3600, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[546699, 9895, 116, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[546840, 9900, 97, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[546962, 9905, 3520, 84, 369, "Input"],
Cell[550485, 9991, 3686, 79, 70, "Output"],
Cell[554174, 10072, 482, 7, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[554705, 10085, 98, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[554828, 10090, 3656, 90, 453, "Input"],
Cell[558487, 10182, 44007, 853, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[602543, 11041, 161, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[602729, 11047, 4649, 109, 516, "Input"],
Cell[607381, 11158, 1541, 25, 32, "Output"],
Cell[608925, 11185, 11968, 218, 725, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620930, 11408, 1838, 38, 138, "Input"],
Cell[622771, 11448, 54174, 1023, 727, "Output"],
Cell[676948, 12473, 1142, 16, 32, "Output"]
}, Open  ]],
Cell[678105, 12492, 71, 1, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[678225, 12499, 99, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[678349, 12504, 1520, 31, 180, "Input"],
Cell[679872, 12537, 265049, 4700, 70, "Output"],
Cell[944924, 17239, 631, 9, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

